{"ast":null,"code":"var _window$document;import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{Platform}from'@unimodules/core';import qs from'qs';var isDOMAvailable=Platform.OS==='web'&&typeof window!=='undefined'&&!!((_window$document=window.document)!=null&&_window$document.createElement)&&typeof URL!=='undefined';export function requestAsync(requestUrl,fetchRequest){var _fetchRequest$dataTyp;var url,request,isJsonDataType,i,_fetchRequest$method,_i,_Object$keys,key,correctedUrl,response,contentType;return _regeneratorRuntime.async(function requestAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(Platform.OS==='web'&&!isDOMAvailable)){_context.next=2;break;}return _context.abrupt(\"return\");case 2:url=new URL(requestUrl);request={method:fetchRequest.method,mode:'cors',headers:{}};isJsonDataType=((_fetchRequest$dataTyp=fetchRequest.dataType)==null?void 0:_fetchRequest$dataTyp.toLowerCase())==='json';if(fetchRequest.headers){for(i in fetchRequest.headers){if(i in fetchRequest.headers){request.headers[i]=fetchRequest.headers[i];}}}if(fetchRequest.body){if(((_fetchRequest$method=fetchRequest.method)==null?void 0:_fetchRequest$method.toUpperCase())==='POST'){request.body=qs.stringify(fetchRequest.body);}else{for(_i=0,_Object$keys=Object.keys(fetchRequest.body);_i<_Object$keys.length;_i++){key=_Object$keys[_i];url.searchParams.append(key,fetchRequest.body[key]);}}}if(isJsonDataType&&!('Accept'in request.headers)){request.headers['Accept']='application/json, text/javascript; q=0.01';}correctedUrl=url.toString().replace(/\\/$/,'');_context.next=11;return _regeneratorRuntime.awrap(fetch(correctedUrl,request));case 11:response=_context.sent;contentType=response.headers.get('content-type');if(!(isJsonDataType||contentType!=null&&contentType.includes('application/json'))){_context.next=15;break;}return _context.abrupt(\"return\",response.json());case 15:return _context.abrupt(\"return\",response.text());case 16:case\"end\":return _context.stop();}}},null,null,null,Promise);}","map":{"version":3,"sources":["../src/Fetch.ts"],"names":[],"mappings":"iFAAA,OAAS,QAAT,KAAyB,kBAAzB,CACA,MAAO,CAAA,EAAP,KAAe,IAAf,CAgBA,GAAM,CAAA,cAAc,CAClB,QAAQ,CAAC,EAAT,GAAgB,KAAhB,EACA,MAAO,CAAA,MAAP,GAAkB,WADlB,EAEA,CAAC,oBAAC,MAAM,CAAC,QAAR,SAAC,iBAAiB,aAAlB,CAFD,EAIA,MAAO,CAAA,GAAP,GAAe,WALjB,CAOA,MAAO,SAAe,CAAA,YAAf,CAA+B,UAA/B,CAAmD,YAAnD,mQACD,QAAQ,CAAC,EAAT,GAAgB,KAAhB,EAAyB,CAAC,cADzB,kEAMC,GAND,CAMO,GAAI,CAAA,GAAJ,CAAQ,UAAR,CANP,CAQC,OARD,CAQoE,CACvE,MAAM,CAAE,YAAY,CAAC,MADkD,CAEvE,IAAI,CAAE,MAFiE,CAGvE,OAAO,CAAE,EAH8D,CARpE,CAcC,cAdD,CAckB,wBAAA,YAAY,CAAC,QAAb,qCAAuB,WAAvB,MAAyC,MAd3D,CAgBL,GAAI,YAAY,CAAC,OAAjB,CAA0B,CACxB,IAAW,CAAX,GAAgB,CAAA,YAAY,CAAC,OAA7B,CAAsC,CACpC,GAAI,CAAC,GAAI,CAAA,YAAY,CAAC,OAAtB,CAA+B,CAC7B,OAAO,CAAC,OAAR,CAAgB,CAAhB,EAAqB,YAAY,CAAC,OAAb,CAAqB,CAArB,CAArB,CACD,CACF,CACF,CAED,GAAI,YAAY,CAAC,IAAjB,CAAuB,CACrB,GAAI,uBAAA,YAAY,CAAC,MAAb,oCAAqB,WAArB,MAAuC,MAA3C,CAAmD,CACjD,OAAO,CAAC,IAAR,CAAe,EAAE,CAAC,SAAH,CAAa,YAAY,CAAC,IAA1B,CAAf,CACD,CAFD,IAEO,CACL,sBAAkB,MAAM,CAAC,IAAP,CAAY,YAAY,CAAC,IAAzB,CAAlB,6BAAkD,CAAvC,GAAuC,kBAChD,GAAG,CAAC,YAAJ,CAAiB,MAAjB,CAAwB,GAAxB,CAA6B,YAAY,CAAC,IAAb,CAAkB,GAAlB,CAA7B,EACD,CACF,CACF,CAED,GAAI,cAAc,EAAI,EAAE,UAAY,CAAA,OAAO,CAAC,OAAtB,CAAtB,CAAsD,CAEpD,OAAO,CAAC,OAAR,CAAgB,QAAhB,EAA4B,2CAA5B,CACD,CAGK,YAxCD,CAwCgB,GAAG,CAAC,QAAJ,GAAe,OAAf,CAAuB,KAAvB,CAA8B,EAA9B,CAxChB,mDA0CkB,KAAK,CAAC,YAAD,CAAe,OAAf,CA1CvB,UA0CC,QA1CD,eA4CC,WA5CD,CA4Ce,QAAQ,CAAC,OAAT,CAAiB,GAAjB,CAAqB,cAArB,CA5Cf,MA6CD,cAAc,EAAI,WAAJ,QAAI,WAAW,CAAE,QAAb,CAAsB,kBAAtB,CA7CjB,2DA8CI,QAAQ,CAAC,IAAT,EA9CJ,0CAiDE,QAAQ,CAAC,IAAT,EAjDF","sourcesContent":["import { Platform } from '@unimodules/core';\nimport qs from 'qs';\n\nexport type Headers = Record<string, string> & {\n  'Content-Type': string;\n  Authorization?: string;\n  Accept?: string;\n};\n\nexport type FetchRequest = {\n  headers?: Headers;\n  body?: Record<string, string>;\n  dataType?: string;\n  method?: string;\n};\n\n// TODO(Bacon): pending react-native-adapter publish after sdk 38\nconst isDOMAvailable =\n  Platform.OS === 'web' &&\n  typeof window !== 'undefined' &&\n  !!window.document?.createElement &&\n  // eslint-disable-next-line no-undef\n  typeof URL !== 'undefined';\n\nexport async function requestAsync<T>(requestUrl: string, fetchRequest: FetchRequest): Promise<T> {\n  if (Platform.OS === 'web' && !isDOMAvailable) {\n    // @ts-ignore\n    return;\n  }\n  // eslint-disable-next-line no-undef\n  const url = new URL(requestUrl);\n\n  const request: Omit<RequestInit, 'headers'> & { headers: HeadersInit } = {\n    method: fetchRequest.method,\n    mode: 'cors',\n    headers: {},\n  };\n\n  const isJsonDataType = fetchRequest.dataType?.toLowerCase() === 'json';\n\n  if (fetchRequest.headers) {\n    for (const i in fetchRequest.headers) {\n      if (i in fetchRequest.headers) {\n        request.headers[i] = fetchRequest.headers[i] as string;\n      }\n    }\n  }\n\n  if (fetchRequest.body) {\n    if (fetchRequest.method?.toUpperCase() === 'POST') {\n      request.body = qs.stringify(fetchRequest.body);\n    } else {\n      for (const key of Object.keys(fetchRequest.body)) {\n        url.searchParams.append(key, fetchRequest.body[key]);\n      }\n    }\n  }\n\n  if (isJsonDataType && !('Accept' in request.headers)) {\n    // NOTE: Github authentication will return XML if this includes the standard `*/*`\n    request.headers['Accept'] = 'application/json, text/javascript; q=0.01';\n  }\n\n  // Fix a problem with React Native `URL` causing a trailing slash to be added.\n  const correctedUrl = url.toString().replace(/\\/$/, '');\n\n  const response = await fetch(correctedUrl, request);\n\n  const contentType = response.headers.get('content-type');\n  if (isJsonDataType || contentType?.includes('application/json')) {\n    return response.json();\n  }\n  // @ts-ignore: Type 'string' is not assignable to type 'T'.\n  return response.text();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}