{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{Component,useState}from\"react\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import Image from\"react-native-web/dist/exports/Image\";import ImageBackground from\"react-native-web/dist/exports/ImageBackground\";import Button from\"react-native-web/dist/exports/Button\";import TextButton from\"./common/TextButton\";import Header from\"./common/Header\";import CustomInput from\"./common/CustomInput.js\";import{useDispatch,useSelector}from'react-redux';import{setUser,userConnected}from\"../redux/user\";var ConnectAccount=function ConnectAccount(_ref){var navigation=_ref.navigation;var response;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],onChangeTextEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),mdp=_useState4[0],onChangeTextMdp=_useState4[1];function loginToApi(email,mdp){var _response;return _regeneratorRuntime.async(function loginToApi$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(fetch(\"https://shangrila.pythonanywhere.com/login?email=\"+email+\"&mdp=\"+mdp).then(function(response){return response.json();}).then(function(json){return{token:json.token,email:json.user.email,id:json.user.user_id,pseudo:json.user.pseudo};}).catch(function(error){console.error(error);}));case 3:_response=_context.sent;console.log(\"res ======!!======\",_response);return _context.abrupt(\"return\",_response);case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 11:;case 12:case\"end\":return _context.stop();}}},null,null,[[0,8]],Promise);}var request;var dispatch=useDispatch();return React.createElement(View,{style:styles.container},React.createElement(View,null,React.createElement(View,{style:styles.Text1},React.createElement(Text,{style:styles.devenezLeader},\"Te voil\\xE0 de retour parmi nous !\")),React.createElement(View,{style:styles.MainButton1},React.createElement(CustomInput,{useStateFunction:onChangeTextEmail,useStateValue:email,placeholder:\"Email\"})),React.createElement(View,{style:styles.MainButton1},React.createElement(CustomInput,{useStateFunction:onChangeTextMdp,useStateValue:mdp,placeholder:\"Mot de passe\"}))),React.createElement(View,{style:styles.SecondaryButton1},React.createElement(TextButton,{content:\"Se connecter\",action:function _callee(){var response;return _regeneratorRuntime.async(function _callee$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(\"text\",email);_context2.next=3;return _regeneratorRuntime.awrap(loginToApi(email,mdp));case 3:response=_context2.sent;console.log(\"response === \",response);if(response.email!=null&&response.token!=null){console.log(\"resss body === \",response.email);dispatch(setUser(response));navigation.push('ConnectService');}case 6:case\"end\":return _context2.stop();}}},null,null,null,Promise);}})));};var styles=StyleSheet.create({container:{flex:1,backgroundColor:\"#120841\",flexDirection:\"column\",justifyContent:\"space-between\"},image:{justifyContent:'space-around',flexDirection:'row'},imageLogo:{width:325,height:325},Text1:{padding:20},devenezLeader:{fontFamily:\"Roboto_700Bold\",textAlign:'center',color:'white'},devenirLeader:{width:264,height:81,backgroundColor:\"rgba(255,255,255,1)\",borderRadius:20,shadowColor:\"rgba(228,66,0,1)\",shadowOffset:{width:3,height:3},elevation:30,shadowOpacity:1,shadowRadius:10,fontFamily:\"CarterOne_400Regular\",color:\"rgba(18,8,65,1)\",textAlign:\"center\"},imageLogo:{width:325,height:325},Text1:{fontFamily:\"Roboto_300Light\",padding:20},devenezLeader:{fontFamily:\"Roboto_700Bold\",textAlign:'center',color:'white'},SecondaryButton1:{marginBottom:40}});export default ConnectAccount;","map":{"version":3,"sources":["/home/jeanningros/lug/components/ConnectAccount.js"],"names":["React","Component","useState","TextButton","Header","CustomInput","useDispatch","useSelector","setUser","userConnected","ConnectAccount","navigation","response","email","onChangeTextEmail","mdp","onChangeTextMdp","loginToApi","fetch","then","json","token","user","id","user_id","pseudo","catch","error","console","log","request","dispatch","styles","container","Text1","devenezLeader","MainButton1","SecondaryButton1","push","StyleSheet","create","flex","backgroundColor","flexDirection","justifyContent","image","imageLogo","width","height","padding","fontFamily","textAlign","color","devenirLeader","borderRadius","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","marginBottom"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import { StyleSheet, Text, View, Button, Image, TouchableOpacity } from 'react-native';\n\n// const Hub = ({ navigation }) => {\n//   return (\n//     <View style={styles.alignIt}>\n      \n//       <Image\n//       style={styles.containImage}\n//         source={require('../assets/MainLogo.png')}\n//         />\n//         <View style={styles.container}>\n//         <Button\n//           title='DEVENIR LEADER'\n//           onPress={() => navigation.push('CreateRoom')}\n//         />\n//         <Text>DÃ©ja Leader ? </Text>\n//         <Button style={styles.MainButton}\n//           title='Se connecter'\n//           onPress={() => navigation.push('JoinRoom')}\n//         />\n//       </View>\n\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 5,\n//     backgroundColor: '#461C86',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontFamily: \"Canter Bold\"\n//   },\n//   alignIt: {\n//     backgroundColor: '#461C86',\n//     flex: 3,\n//     fontFamily: \"Canter Bold\"\n//   },\n//   containImage: {\n//     flex: 1, height: undefined, width: undefined, resizeMode: 'contain' \n//   },\n//   MainButton: {\n//     flex: 1,\n//     fontFamily: \"Canter Bold\"\n//   }\n\n// });\n\n// export default Hub;\n\n\nimport React, { Component, useState } from \"react\";\nimport { StyleSheet, View, Text, Image, ImageBackground, Button } from \"react-native\";\nimport TextButton from \"./common/TextButton\";\nimport Header from \"./common/Header\";\nimport CustomInput from \"./common/CustomInput.js\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser, userConnected } from '../redux/user';\n\n\nconst ConnectAccount = ({ navigation }) => {\n  var response;\n  const [email, onChangeTextEmail] = useState('');\n  const [mdp, onChangeTextMdp] = useState('');\n\n  async function loginToApi (email, mdp) {\n    try {\n      let response = await fetch(`https://shangrila.pythonanywhere.com/login?email=${email}&mdp=${mdp}`)\n      .then((response) => response.json())\n      .then((json) => {\n        return ({\n          token: json.token, \n          email: json.user.email,\n          id: json.user.user_id,\n          pseudo: json.user.pseudo\n        })\n      })\n  .catch((error) => { console.error(error) });\n      console.log (\"res ======!!======\",response)\n      return response;\n    } catch (error) {\n      console.error(error);\n    };\n  }\n    \n  var request; \n  \n  const dispatch = useDispatch();\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <View style={styles.Text1}>\n          <Text style={styles.devenezLeader}>\n            Te voilÃ  de retour parmi nous !\n          </Text>\n        </View>\n        <View style={styles.MainButton1}>\n          <CustomInput useStateFunction={onChangeTextEmail} useStateValue={email} placeholder=\"Email\"/>\n        </View>\n        <View style={styles.MainButton1}>\n        <CustomInput useStateFunction={onChangeTextMdp} useStateValue={mdp} placeholder=\"Mot de passe\"/>\n        </View>\n      </View>\n\n      <View style={styles.SecondaryButton1}>\n      <TextButton content=\"Se connecter\" action={async () => {\n          console.log (\"text\",email);\n          let response = await loginToApi (email, mdp);\n          console.log(\"response === \",response);\n          if (response.email!= null && response.token != null) {\n            console.log(\"resss body === \", response.email);\n            dispatch (setUser(response))\n            //dispatch(userConnected());\n            navigation.push('ConnectService'); \n          }\n        } \n      }/>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#120841\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  image: {\n    justifyContent: 'space-around',\n    flexDirection: 'row'\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    padding: 20,\n  },\n  devenezLeader: {\n    fontFamily: \"Roboto_700Bold\",\n    textAlign: 'center',\n    color: 'white',\n  },\n  devenirLeader: {\n    width: 264,\n    height: 81,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 20,\n    shadowColor: \"rgba(228,66,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    fontFamily: \"CarterOne_400Regular\",\n    color: \"rgba(18,8,65,1)\",\n    textAlign: \"center\",\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    fontFamily: \"Roboto_300Light\",\n    padding: 20,\n   },\n  devenezLeader: {\n   fontFamily: \"Roboto_700Bold\",\n   textAlign: 'center',\n   color: 'white'\n  },\n  SecondaryButton1: {\n    marginBottom: 40,\n  },\n});\n\nexport default ConnectAccount;"]},"metadata":{},"sourceType":"module"}