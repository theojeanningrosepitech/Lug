{"ast":null,"code":"import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import _regeneratorRuntime from\"@babel/runtime/regenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import invariant from'invariant';import Platform from\"react-native-web/dist/exports/Platform\";import*as Base64 from\"./Base64\";import{TokenError}from\"./Errors\";import{requestAsync}from\"./Fetch\";import{GrantType}from\"./TokenRequest.types\";export function getCurrentTimeInSeconds(){return Math.floor(Date.now()/1000);}export var TokenResponse=function(){function TokenResponse(response){var _response$tokenType,_response$issuedAt;_classCallCheck(this,TokenResponse);this.accessToken=response.accessToken;this.tokenType=(_response$tokenType=response.tokenType)!=null?_response$tokenType:'bearer';this.expiresIn=response.expiresIn;this.refreshToken=response.refreshToken;this.scope=response.scope;this.state=response.state;this.idToken=response.idToken;this.issuedAt=(_response$issuedAt=response.issuedAt)!=null?_response$issuedAt:getCurrentTimeInSeconds();}_createClass(TokenResponse,[{key:\"applyResponseConfig\",value:function applyResponseConfig(response){var _response$accessToken,_ref,_response$tokenType2,_response$expiresIn,_response$refreshToke,_response$scope,_response$state,_response$idToken,_ref2,_response$issuedAt2;this.accessToken=(_response$accessToken=response.accessToken)!=null?_response$accessToken:this.accessToken;this.tokenType=(_ref=(_response$tokenType2=response.tokenType)!=null?_response$tokenType2:this.tokenType)!=null?_ref:'bearer';this.expiresIn=(_response$expiresIn=response.expiresIn)!=null?_response$expiresIn:this.expiresIn;this.refreshToken=(_response$refreshToke=response.refreshToken)!=null?_response$refreshToke:this.refreshToken;this.scope=(_response$scope=response.scope)!=null?_response$scope:this.scope;this.state=(_response$state=response.state)!=null?_response$state:this.state;this.idToken=(_response$idToken=response.idToken)!=null?_response$idToken:this.idToken;this.issuedAt=(_ref2=(_response$issuedAt2=response.issuedAt)!=null?_response$issuedAt2:this.issuedAt)!=null?_ref2:getCurrentTimeInSeconds();}},{key:\"getRequestConfig\",value:function getRequestConfig(){return{accessToken:this.accessToken,idToken:this.idToken,refreshToken:this.refreshToken,scope:this.scope,state:this.state,tokenType:this.tokenType,issuedAt:this.issuedAt,expiresIn:this.expiresIn};}},{key:\"refreshAsync\",value:function refreshAsync(config,discovery){var _response$refreshToke2;var request,response,json;return _regeneratorRuntime.async(function refreshAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:request=new RefreshTokenRequest(_objectSpread(_objectSpread({},config),{},{refreshToken:this.refreshToken}));_context.next=3;return _regeneratorRuntime.awrap(request.performAsync(discovery));case 3:response=_context.sent;response.refreshToken=(_response$refreshToke2=response.refreshToken)!=null?_response$refreshToke2:this.refreshToken;json=response.getRequestConfig();this.applyResponseConfig(json);return _context.abrupt(\"return\",this);case 8:case\"end\":return _context.stop();}}},null,this,null,Promise);}},{key:\"shouldRefresh\",value:function shouldRefresh(){return!(TokenResponse.isTokenFresh(this)||!this.refreshToken);}}],[{key:\"isTokenFresh\",value:function isTokenFresh(token){var secondsMargin=arguments.length>1&&arguments[1]!==undefined?arguments[1]:60*10*-1;if(!token){return false;}if(token.expiresIn){var now=getCurrentTimeInSeconds();return now<token.issuedAt+token.expiresIn+secondsMargin;}return true;}},{key:\"fromQueryParams\",value:function fromQueryParams(params){return new TokenResponse({accessToken:params.access_token,refreshToken:params.refresh_token,scope:params.scope,state:params.state,idToken:params.id_token,tokenType:params.token_type,expiresIn:params.expires_in,issuedAt:params.issued_at});}}]);return TokenResponse;}();var Request=function(){function Request(request){_classCallCheck(this,Request);this.request=request;}_createClass(Request,[{key:\"performAsync\",value:function performAsync(discovery){return _regeneratorRuntime.async(function performAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:throw new Error('performAsync must be extended');case 1:case\"end\":return _context2.stop();}}},null,null,null,Promise);}},{key:\"getRequestConfig\",value:function getRequestConfig(){throw new Error('getRequestConfig must be extended');}},{key:\"getQueryBody\",value:function getQueryBody(){throw new Error('getQueryBody must be extended');}}]);return Request;}();var TokenRequest=function(_Request){_inherits(TokenRequest,_Request);var _super=_createSuper(TokenRequest);function TokenRequest(request,grantType){var _this;_classCallCheck(this,TokenRequest);_this=_super.call(this,request);_this.grantType=grantType;_this.clientId=request.clientId;_this.clientSecret=request.clientSecret;_this.extraParams=request.extraParams;_this.scopes=request.scopes;return _this;}_createClass(TokenRequest,[{key:\"getHeaders\",value:function getHeaders(){var headers={'Content-Type':'application/x-www-form-urlencoded'};if(typeof this.clientSecret!=='undefined'){var encodedClientId=encodeURIComponent(this.clientId);var encodedClientSecret=encodeURIComponent(this.clientSecret);var credentials=encodedClientId+\":\"+encodedClientSecret;var basicAuth=Base64.encodeNoWrap(credentials);headers.Authorization=\"Basic \"+basicAuth;}return headers;}},{key:\"performAsync\",value:function performAsync(discovery){var response;return _regeneratorRuntime.async(function performAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:invariant(discovery.tokenEndpoint,\"Cannot invoke `performAsync()` without a valid tokenEndpoint\");_context3.next=3;return _regeneratorRuntime.awrap(requestAsync(discovery.tokenEndpoint,{dataType:'json',method:'POST',headers:this.getHeaders(),body:this.getQueryBody()}));case 3:response=_context3.sent;if(!('error'in response)){_context3.next=6;break;}throw new TokenError(response);case 6:return _context3.abrupt(\"return\",new TokenResponse({accessToken:response.access_token,tokenType:response.token_type,expiresIn:response.expires_in,refreshToken:response.refresh_token,scope:response.scope,idToken:response.id_token,issuedAt:response.issued_at}));case 7:case\"end\":return _context3.stop();}}},null,this,null,Promise);}},{key:\"getQueryBody\",value:function getQueryBody(){var queryBody={grant_type:this.grantType};if(!this.clientSecret){queryBody.client_id=this.clientId;}if(this.scopes){queryBody.scope=this.scopes.join(' ');}if(this.extraParams){for(var extra in this.extraParams){if(extra in this.extraParams&&!(extra in queryBody)){queryBody[extra]=this.extraParams[extra];}}}return queryBody;}}]);return TokenRequest;}(Request);export var AccessTokenRequest=function(_TokenRequest){_inherits(AccessTokenRequest,_TokenRequest);var _super2=_createSuper(AccessTokenRequest);function AccessTokenRequest(options){var _this2;_classCallCheck(this,AccessTokenRequest);invariant(options.redirectUri,\"`AccessTokenRequest` requires a valid `redirectUri` (it must also match the one used in the auth request). Example: \"+Platform.select({web:'https://yourwebsite.com/redirect',default:'myapp://redirect'}));invariant(options.code,\"`AccessTokenRequest` requires a valid authorization `code`. This is what's received from the authorization server after an auth request.\");_this2=_super2.call(this,options,GrantType.AuthorizationCode);_this2.code=options.code;_this2.redirectUri=options.redirectUri;return _this2;}_createClass(AccessTokenRequest,[{key:\"getQueryBody\",value:function getQueryBody(){var queryBody=_get(_getPrototypeOf(AccessTokenRequest.prototype),\"getQueryBody\",this).call(this);if(this.redirectUri){queryBody.redirect_uri=this.redirectUri;}if(this.code){queryBody.code=this.code;}return queryBody;}},{key:\"getRequestConfig\",value:function getRequestConfig(){return{clientId:this.clientId,clientSecret:this.clientSecret,grantType:this.grantType,code:this.code,redirectUri:this.redirectUri,extraParams:this.extraParams,scopes:this.scopes};}}]);return AccessTokenRequest;}(TokenRequest);export var RefreshTokenRequest=function(_TokenRequest2){_inherits(RefreshTokenRequest,_TokenRequest2);var _super3=_createSuper(RefreshTokenRequest);function RefreshTokenRequest(options){var _this3;_classCallCheck(this,RefreshTokenRequest);invariant(options.refreshToken,\"`RefreshTokenRequest` requires a valid `refreshToken`.\");_this3=_super3.call(this,options,GrantType.RefreshToken);_this3.refreshToken=options.refreshToken;return _this3;}_createClass(RefreshTokenRequest,[{key:\"getQueryBody\",value:function getQueryBody(){var queryBody=_get(_getPrototypeOf(RefreshTokenRequest.prototype),\"getQueryBody\",this).call(this);if(this.refreshToken){queryBody.refresh_token=this.refreshToken;}return queryBody;}},{key:\"getRequestConfig\",value:function getRequestConfig(){return{clientId:this.clientId,clientSecret:this.clientSecret,grantType:this.grantType,refreshToken:this.refreshToken,extraParams:this.extraParams,scopes:this.scopes};}}]);return RefreshTokenRequest;}(TokenRequest);export var RevokeTokenRequest=function(_Request2){_inherits(RevokeTokenRequest,_Request2);var _super4=_createSuper(RevokeTokenRequest);function RevokeTokenRequest(request){var _this4;_classCallCheck(this,RevokeTokenRequest);_this4=_super4.call(this,request);invariant(request.token,\"`RevokeTokenRequest` requires a valid `token` to revoke.\");_this4.clientId=request.clientId;_this4.clientSecret=request.clientSecret;_this4.token=request.token;_this4.tokenTypeHint=request.tokenTypeHint;return _this4;}_createClass(RevokeTokenRequest,[{key:\"getHeaders\",value:function getHeaders(){var headers={'Content-Type':'application/x-www-form-urlencoded'};if(typeof this.clientSecret!=='undefined'&&this.clientId){var encodedClientId=encodeURIComponent(this.clientId);var encodedClientSecret=encodeURIComponent(this.clientSecret);var credentials=encodedClientId+\":\"+encodedClientSecret;var basicAuth=Base64.encodeNoWrap(credentials);headers.Authorization=\"Basic \"+basicAuth;}return headers;}},{key:\"performAsync\",value:function performAsync(discovery){return _regeneratorRuntime.async(function performAsync$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:invariant(discovery.revocationEndpoint,\"Cannot invoke `performAsync()` without a valid revocationEndpoint\");_context4.next=3;return _regeneratorRuntime.awrap(requestAsync(discovery.revocationEndpoint,{method:'POST',headers:this.getHeaders(),body:this.getQueryBody()}));case 3:return _context4.abrupt(\"return\",true);case 4:case\"end\":return _context4.stop();}}},null,this,null,Promise);}},{key:\"getRequestConfig\",value:function getRequestConfig(){return{clientId:this.clientId,clientSecret:this.clientSecret,token:this.token,tokenTypeHint:this.tokenTypeHint};}},{key:\"getQueryBody\",value:function getQueryBody(){var queryBody={token:this.token};if(this.tokenTypeHint){queryBody.token_type_hint=this.tokenTypeHint;}if(this.clientId){queryBody.client_id=this.clientId;}if(this.clientSecret){queryBody.client_secret=this.clientSecret;}return queryBody;}}]);return RevokeTokenRequest;}(Request);export function exchangeCodeAsync(config,discovery){var request=new AccessTokenRequest(config);return request.performAsync(discovery);}export function refreshAsync(config,discovery){var request=new RefreshTokenRequest(config);return request.performAsync(discovery);}export function revokeAsync(config,discovery){var request=new RevokeTokenRequest(config);return request.performAsync(discovery);}export function fetchUserInfoAsync(config,discovery){if(!discovery.userInfoEndpoint){throw new Error('User info endpoint is not defined in the service config discovery document');}return requestAsync(discovery.userInfoEndpoint,{headers:{'Content-Type':'application/x-www-form-urlencoded',Authorization:\"Bearer \"+config.accessToken},dataType:'json',method:'GET'});}","map":{"version":3,"sources":["../src/TokenRequest.ts"],"names":[],"mappings":"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","sourcesContent":["import invariant from 'invariant';\nimport { Platform } from 'react-native';\n\nimport * as Base64 from './Base64';\nimport * as ServiceConfig from './Discovery';\nimport { ResponseErrorConfig, TokenError } from './Errors';\nimport { Headers, requestAsync } from './Fetch';\nimport {\n  AccessTokenRequestConfig,\n  GrantType,\n  RefreshTokenRequestConfig,\n  RevokeTokenRequestConfig,\n  ServerTokenResponseConfig,\n  TokenRequestConfig,\n  TokenResponseConfig,\n  TokenType,\n  TokenTypeHint,\n} from './TokenRequest.types';\n\n/**\n * Returns the current time in seconds.\n */\nexport function getCurrentTimeInSeconds(): number {\n  return Math.floor(Date.now() / 1000);\n}\n\n/**\n * Token Response.\n *\n * [Section 5.1](https://tools.ietf.org/html/rfc6749#section-5.1)\n */\nexport class TokenResponse implements TokenResponseConfig {\n  /**\n   * Determines whether a token refresh request must be made to refresh the tokens\n   *\n   * @param token\n   * @param secondsMargin\n   */\n  static isTokenFresh(\n    token: Pick<TokenResponse, 'expiresIn' | 'issuedAt'>,\n    /**\n     * -10 minutes in seconds\n     */\n    secondsMargin: number = 60 * 10 * -1\n  ): boolean {\n    if (!token) {\n      return false;\n    }\n    if (token.expiresIn) {\n      const now = getCurrentTimeInSeconds();\n      return now < token.issuedAt + token.expiresIn + secondsMargin;\n    }\n    // if there is no expiration time but we have an access token, it is assumed to never expire\n    return true;\n  }\n  /**\n   * Creates a `TokenResponse` from query parameters returned from an `AuthRequest`.\n   *\n   * @param params\n   */\n  static fromQueryParams(params: Record<string, string>): TokenResponse {\n    return new TokenResponse({\n      accessToken: params.access_token,\n      refreshToken: params.refresh_token,\n      scope: params.scope,\n      state: params.state,\n      idToken: params.id_token,\n      // @ts-ignore: Expected specific string\n      tokenType: params.token_type,\n      // @ts-ignore: Expected number\n      expiresIn: params.expires_in,\n      // @ts-ignore: Expected number\n      issuedAt: params.issued_at,\n    });\n  }\n\n  accessToken: string;\n  tokenType: TokenType;\n  expiresIn?: number;\n  refreshToken?: string;\n  scope?: string;\n  state?: string;\n  idToken?: string;\n  issuedAt: number;\n\n  constructor(response: TokenResponseConfig) {\n    this.accessToken = response.accessToken;\n    this.tokenType = response.tokenType ?? 'bearer';\n    this.expiresIn = response.expiresIn;\n    this.refreshToken = response.refreshToken;\n    this.scope = response.scope;\n    this.state = response.state;\n    this.idToken = response.idToken;\n    this.issuedAt = response.issuedAt ?? getCurrentTimeInSeconds();\n  }\n\n  private applyResponseConfig(response: TokenResponseConfig) {\n    this.accessToken = response.accessToken ?? this.accessToken;\n    this.tokenType = response.tokenType ?? this.tokenType ?? 'bearer';\n    this.expiresIn = response.expiresIn ?? this.expiresIn;\n    this.refreshToken = response.refreshToken ?? this.refreshToken;\n    this.scope = response.scope ?? this.scope;\n    this.state = response.state ?? this.state;\n    this.idToken = response.idToken ?? this.idToken;\n    this.issuedAt = response.issuedAt ?? this.issuedAt ?? getCurrentTimeInSeconds();\n  }\n\n  getRequestConfig(): TokenResponseConfig {\n    return {\n      accessToken: this.accessToken,\n      idToken: this.idToken,\n      refreshToken: this.refreshToken,\n      scope: this.scope,\n      state: this.state,\n      tokenType: this.tokenType,\n      issuedAt: this.issuedAt,\n      expiresIn: this.expiresIn,\n    };\n  }\n\n  async refreshAsync(\n    config: Omit<TokenRequestConfig, 'grantType' | 'refreshToken'>,\n    discovery: Pick<ServiceConfig.DiscoveryDocument, 'tokenEndpoint'>\n  ): Promise<TokenResponse> {\n    const request = new RefreshTokenRequest({\n      ...config,\n      refreshToken: this.refreshToken,\n    });\n    const response = await request.performAsync(discovery);\n    // Custom: reuse the refresh token if one wasn't returned\n    response.refreshToken = response.refreshToken ?? this.refreshToken;\n    const json = response.getRequestConfig();\n    this.applyResponseConfig(json);\n    return this;\n  }\n\n  shouldRefresh(): boolean {\n    // no refresh token available and token has expired\n    return !(TokenResponse.isTokenFresh(this) || !this.refreshToken);\n  }\n}\n\nclass Request<T, B> {\n  constructor(protected request: T) {}\n\n  async performAsync(discovery: ServiceConfig.DiscoveryDocument): Promise<B> {\n    throw new Error('performAsync must be extended');\n  }\n\n  getRequestConfig(): T {\n    throw new Error('getRequestConfig must be extended');\n  }\n\n  getQueryBody(): Record<string, string> {\n    throw new Error('getQueryBody must be extended');\n  }\n}\n\n/**\n * A generic token request.\n */\nclass TokenRequest<T extends TokenRequestConfig> extends Request<T, TokenResponse> {\n  readonly clientId: string;\n  readonly clientSecret?: string;\n  readonly scopes?: string[];\n  readonly extraParams?: Record<string, string>;\n\n  constructor(request, public grantType: GrantType) {\n    super(request);\n    this.clientId = request.clientId;\n    this.clientSecret = request.clientSecret;\n    this.extraParams = request.extraParams;\n    this.scopes = request.scopes;\n  }\n\n  getHeaders(): Headers {\n    const headers: Headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\n    if (typeof this.clientSecret !== 'undefined') {\n      // If client secret exists, it should be converted to base64\n      // https://tools.ietf.org/html/rfc6749#section-2.3.1\n      const encodedClientId = encodeURIComponent(this.clientId);\n      const encodedClientSecret = encodeURIComponent(this.clientSecret);\n      const credentials = `${encodedClientId}:${encodedClientSecret}`;\n      const basicAuth = Base64.encodeNoWrap(credentials);\n      headers.Authorization = `Basic ${basicAuth}`;\n    }\n\n    return headers;\n  }\n\n  async performAsync(discovery: Pick<ServiceConfig.DiscoveryDocument, 'tokenEndpoint'>) {\n    // redirect URI must not be nil\n    invariant(\n      discovery.tokenEndpoint,\n      `Cannot invoke \\`performAsync()\\` without a valid tokenEndpoint`\n    );\n    const response = await requestAsync<ServerTokenResponseConfig | ResponseErrorConfig>(\n      discovery.tokenEndpoint,\n      {\n        dataType: 'json',\n        method: 'POST',\n        headers: this.getHeaders(),\n        body: this.getQueryBody(),\n      }\n    );\n\n    if ('error' in response) {\n      throw new TokenError(response);\n    }\n\n    return new TokenResponse({\n      accessToken: response.access_token,\n      tokenType: response.token_type,\n      expiresIn: response.expires_in,\n      refreshToken: response.refresh_token,\n      scope: response.scope,\n      idToken: response.id_token,\n      issuedAt: response.issued_at,\n    });\n  }\n\n  getQueryBody() {\n    const queryBody: Record<string, string> = {\n      grant_type: this.grantType,\n    };\n\n    if (!this.clientSecret) {\n      // Only add the client ID if client secret is not present, otherwise pass the client id with the secret in the request body.\n      queryBody.client_id = this.clientId;\n    }\n\n    if (this.scopes) {\n      queryBody.scope = this.scopes.join(' ');\n    }\n\n    if (this.extraParams) {\n      for (const extra in this.extraParams) {\n        if (extra in this.extraParams && !(extra in queryBody)) {\n          queryBody[extra] = this.extraParams[extra];\n        }\n      }\n    }\n    return queryBody;\n  }\n}\n\n/**\n * Access token request. Exchange an authorization code for a user access token.\n *\n * [Section 4.1.3](https://tools.ietf.org/html/rfc6749#section-4.1.3)\n */\nexport class AccessTokenRequest extends TokenRequest<AccessTokenRequestConfig>\n  implements AccessTokenRequestConfig {\n  readonly code: string;\n  readonly redirectUri: string;\n\n  constructor(options: AccessTokenRequestConfig) {\n    invariant(\n      options.redirectUri,\n      `\\`AccessTokenRequest\\` requires a valid \\`redirectUri\\` (it must also match the one used in the auth request). Example: ${Platform.select(\n        {\n          web: 'https://yourwebsite.com/redirect',\n          default: 'myapp://redirect',\n        }\n      )}`\n    );\n\n    invariant(\n      options.code,\n      `\\`AccessTokenRequest\\` requires a valid authorization \\`code\\`. This is what's received from the authorization server after an auth request.`\n    );\n    super(options, GrantType.AuthorizationCode);\n    this.code = options.code;\n    this.redirectUri = options.redirectUri;\n  }\n\n  getQueryBody() {\n    const queryBody: Record<string, string> = super.getQueryBody();\n\n    if (this.redirectUri) {\n      queryBody.redirect_uri = this.redirectUri;\n    }\n\n    if (this.code) {\n      queryBody.code = this.code;\n    }\n\n    return queryBody;\n  }\n\n  getRequestConfig() {\n    return {\n      clientId: this.clientId,\n      clientSecret: this.clientSecret,\n      grantType: this.grantType,\n      code: this.code,\n      redirectUri: this.redirectUri,\n      extraParams: this.extraParams,\n      scopes: this.scopes,\n    };\n  }\n}\n\n/**\n * Refresh request.\n *\n * [Section 6](https://tools.ietf.org/html/rfc6749#section-6)\n */\nexport class RefreshTokenRequest extends TokenRequest<RefreshTokenRequestConfig>\n  implements RefreshTokenRequestConfig {\n  readonly refreshToken?: string;\n\n  constructor(options: RefreshTokenRequestConfig) {\n    invariant(options.refreshToken, `\\`RefreshTokenRequest\\` requires a valid \\`refreshToken\\`.`);\n    super(options, GrantType.RefreshToken);\n    this.refreshToken = options.refreshToken;\n  }\n\n  getQueryBody() {\n    const queryBody = super.getQueryBody();\n\n    if (this.refreshToken) {\n      queryBody.refresh_token = this.refreshToken;\n    }\n\n    return queryBody;\n  }\n\n  getRequestConfig() {\n    return {\n      clientId: this.clientId,\n      clientSecret: this.clientSecret,\n      grantType: this.grantType,\n      refreshToken: this.refreshToken,\n      extraParams: this.extraParams,\n      scopes: this.scopes,\n    };\n  }\n}\n\n/**\n * Revocation request for a given token.\n *\n * [Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)\n */\nexport class RevokeTokenRequest extends Request<RevokeTokenRequestConfig, boolean>\n  implements RevokeTokenRequestConfig {\n  readonly clientId?: string;\n  readonly clientSecret?: string;\n  readonly token: string;\n  readonly tokenTypeHint?: TokenTypeHint;\n\n  constructor(request: RevokeTokenRequestConfig) {\n    super(request);\n    invariant(request.token, `\\`RevokeTokenRequest\\` requires a valid \\`token\\` to revoke.`);\n    this.clientId = request.clientId;\n    this.clientSecret = request.clientSecret;\n    this.token = request.token;\n    this.tokenTypeHint = request.tokenTypeHint;\n  }\n\n  getHeaders(): Headers {\n    const headers: Headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\n    if (typeof this.clientSecret !== 'undefined' && this.clientId) {\n      // If client secret exists, it should be converted to base64\n      // https://tools.ietf.org/html/rfc6749#section-2.3.1\n      const encodedClientId = encodeURIComponent(this.clientId);\n      const encodedClientSecret = encodeURIComponent(this.clientSecret);\n      const credentials = `${encodedClientId}:${encodedClientSecret}`;\n      const basicAuth = Base64.encodeNoWrap(credentials);\n      headers.Authorization = `Basic ${basicAuth}`;\n    }\n\n    return headers;\n  }\n\n  /**\n   * Perform a token revocation request.\n   *\n   * @param discovery The `revocationEndpoint` for a provider.\n   */\n  async performAsync(discovery: Pick<ServiceConfig.DiscoveryDocument, 'revocationEndpoint'>) {\n    invariant(\n      discovery.revocationEndpoint,\n      `Cannot invoke \\`performAsync()\\` without a valid revocationEndpoint`\n    );\n    await requestAsync<boolean>(discovery.revocationEndpoint, {\n      method: 'POST',\n      headers: this.getHeaders(),\n      body: this.getQueryBody(),\n    });\n\n    return true;\n  }\n\n  getRequestConfig() {\n    return {\n      clientId: this.clientId,\n      clientSecret: this.clientSecret,\n      token: this.token,\n      tokenTypeHint: this.tokenTypeHint,\n    };\n  }\n\n  getQueryBody(): Record<string, string> {\n    const queryBody: Record<string, string> = { token: this.token };\n    if (this.tokenTypeHint) {\n      queryBody.token_type_hint = this.tokenTypeHint;\n    }\n    // Include client creds https://tools.ietf.org/html/rfc6749#section-2.3.1\n    if (this.clientId) {\n      queryBody.client_id = this.clientId;\n    }\n    if (this.clientSecret) {\n      queryBody.client_secret = this.clientSecret;\n    }\n    return queryBody;\n  }\n}\n\n/**\n * Exchange an auth code for an access token that can be used to get data from the provider.\n *\n * @param config\n * @param discovery The `tokenEndpoint` for a provider.\n */\nexport function exchangeCodeAsync(\n  config: AccessTokenRequestConfig,\n  discovery: Pick<ServiceConfig.DiscoveryDocument, 'tokenEndpoint'>\n): Promise<TokenResponse> {\n  const request = new AccessTokenRequest(config);\n  return request.performAsync(discovery);\n}\n\n/**\n * Refresh an access token. Often this just requires the `refreshToken` and `scopes` parameters.\n *\n * [Section 6](https://tools.ietf.org/html/rfc6749#section-6)\n *\n * @param config\n * @param discovery The `tokenEndpoint` for a provider.\n */\nexport function refreshAsync(\n  config: RefreshTokenRequestConfig,\n  discovery: Pick<ServiceConfig.DiscoveryDocument, 'tokenEndpoint'>\n): Promise<TokenResponse> {\n  const request = new RefreshTokenRequest(config);\n  return request.performAsync(discovery);\n}\n\n/**\n * Revoke a token with a provider.\n * This makes the token unusable, effectively requiring the user to login again.\n *\n * @param config\n * @param discovery The `revocationEndpoint` for a provider.\n */\nexport function revokeAsync(\n  config: RevokeTokenRequestConfig,\n  discovery: Pick<ServiceConfig.DiscoveryDocument, 'revocationEndpoint'>\n): Promise<boolean> {\n  const request = new RevokeTokenRequest(config);\n  return request.performAsync(discovery);\n}\n\n/**\n * Fetch generic user info from the provider's OpenID Connect `userInfoEndpoint` (if supported).\n *\n * [UserInfo](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo)\n *\n * @param config The `accessToken` for a user, returned from a code exchange or auth request.\n * @param discovery The `userInfoEndpoint` for a provider.\n */\nexport function fetchUserInfoAsync(\n  config: Pick<TokenResponse, 'accessToken'>,\n  discovery: Pick<ServiceConfig.DiscoveryDocument, 'userInfoEndpoint'>\n): Promise<Record<string, any>> {\n  if (!discovery.userInfoEndpoint) {\n    throw new Error('User info endpoint is not defined in the service config discovery document');\n  }\n  return requestAsync<Record<string, any>>(discovery.userInfoEndpoint, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Authorization: `Bearer ${config.accessToken}`,\n    },\n    dataType: 'json',\n    method: 'GET',\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}