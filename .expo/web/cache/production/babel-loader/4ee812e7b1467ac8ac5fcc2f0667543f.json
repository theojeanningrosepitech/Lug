{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";var removeFirstNextSong=function removeFirstNextSong(copySongs,setCopySongs,setSongs){if(copySongs.length==1){setSongs([]);setCopySongs([]);}else{var dup=_toConsumableArray(copySongs);dup.shift();setSongs(dup);setCopySongs(dup);}};var addSongToPast=function addSongToPast(copySong,copyPast,setCopyPast,setPast){var dup=[].concat(_toConsumableArray(copyPast),[copySong]);setCopyPast(dup);setPast(dup);};export var nextSong=function nextSong(copySong,setCopySong,copySongs,setCopySongs,copyPast,setCopyPast,setSong,setSongs,setPast){console.log(copySongs[0]);addSongToPast(copySong,copyPast,setCopyPast,setPast);setSong(copySongs[0]);setCopySong(copySongs[0]);removeFirstNextSong(copySongs,setCopySongs,setSongs);};var removeLastPastSong=function removeLastPastSong(copyPast,setCopyPast,setPast){if(copyPast.length==1){setPast([]);setCopyPast([]);}else{var dup=_toConsumableArray(copyPast);dup.pop();setPast(dup);setCopyPast(dup);}};var addSongToNext=function addSongToNext(copySong,copySongs,setCopySongs,setSongs){var a=[copySong];var dup=a.concat(_toConsumableArray(copySongs));setCopySongs(dup);setSongs(dup);};export var previousSong=function previousSong(copySong,setCopySong,copySongs,setCopySongs,copyPast,setCopyPast,setSong,setSongs,setPast){addSongToNext(copySong,copySongs,setCopySongs,setSongs);setSong(copyPast[copyPast.length-1]);setCopySong(copyPast[copyPast.length-1]);removeLastPastSong(copyPast,setCopyPast,setPast);};","map":{"version":3,"sources":["/home/jeanningros/lug/components/PlaylistManip.js"],"names":["removeFirstNextSong","copySongs","setCopySongs","setSongs","length","dup","shift","addSongToPast","copySong","copyPast","setCopyPast","setPast","nextSong","setCopySong","setSong","console","log","removeLastPastSong","pop","addSongToNext","a","concat","previousSong"],"mappings":"yEAAA,GAAMA,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,SAAD,CAAYC,YAAZ,CAA0BC,QAA1B,CAAuC,CACjE,GAAIF,SAAS,CAACG,MAAV,EAAoB,CAAxB,CAA2B,CACzBD,QAAQ,CAAC,EAAD,CAAR,CACAD,YAAY,CAAC,EAAD,CAAZ,CACD,CAHD,IAGO,CACL,GAAMG,CAAAA,GAAG,oBAAOJ,SAAP,CAAT,CACAI,GAAG,CAACC,KAAJ,GACAH,QAAQ,CAACE,GAAD,CAAR,CACAH,YAAY,CAACG,GAAD,CAAZ,CACD,CACF,CAVD,CAYA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,CAAWC,QAAX,CAAqBC,WAArB,CAAkCC,OAAlC,CAA8C,CAClE,GAAMN,CAAAA,GAAG,8BAAOI,QAAP,GAAiBD,QAAjB,EAAT,CACAE,WAAW,CAACL,GAAD,CAAX,CACAM,OAAO,CAACN,GAAD,CAAP,CACD,CAJD,CAMA,MAAO,IAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACJ,QAAD,CAAWK,WAAX,CAAwBZ,SAAxB,CAAmCC,YAAnC,CAAiDO,QAAjD,CAA2DC,WAA3D,CAAwEI,OAAxE,CAAiFX,QAAjF,CAA2FQ,OAA3F,CAAuG,CAE7HI,OAAO,CAACC,GAAR,CAAYf,SAAS,CAAC,CAAD,CAArB,EACAM,aAAa,CAACC,QAAD,CAAWC,QAAX,CAAqBC,WAArB,CAAkCC,OAAlC,CAAb,CACAG,OAAO,CAACb,SAAS,CAAC,CAAD,CAAV,CAAP,CACAY,WAAW,CAACZ,SAAS,CAAC,CAAD,CAAV,CAAX,CACAD,mBAAmB,CAACC,SAAD,CAAYC,YAAZ,CAA0BC,QAA1B,CAAnB,CACD,CAPM,CASP,GAAMc,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACR,QAAD,CAAWC,WAAX,CAAwBC,OAAxB,CAAoC,CAC7D,GAAIF,QAAQ,CAACL,MAAT,EAAmB,CAAvB,CAA0B,CACxBO,OAAO,CAAC,EAAD,CAAP,CACAD,WAAW,CAAC,EAAD,CAAX,CACD,CAHD,IAGO,CACL,GAAML,CAAAA,GAAG,oBAAOI,QAAP,CAAT,CACAJ,GAAG,CAACa,GAAJ,GACAP,OAAO,CAACN,GAAD,CAAP,CACAK,WAAW,CAACL,GAAD,CAAX,CACD,CACF,CAVD,CAYA,GAAMc,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACX,QAAD,CAAWP,SAAX,CAAsBC,YAAtB,CAAoCC,QAApC,CAAiD,CACrE,GAAMiB,CAAAA,CAAC,CAAG,CAACZ,QAAD,CAAV,CACA,GAAMH,CAAAA,GAAG,CAAGe,CAAC,CAACC,MAAF,oBAAapB,SAAb,EAAZ,CACAC,YAAY,CAACG,GAAD,CAAZ,CACAF,QAAQ,CAACE,GAAD,CAAR,CACD,CALD,CAOA,MAAO,IAAMiB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACd,QAAD,CAAWK,WAAX,CAAwBZ,SAAxB,CAAmCC,YAAnC,CAAiDO,QAAjD,CAA2DC,WAA3D,CAAwEI,OAAxE,CAAiFX,QAAjF,CAA2FQ,OAA3F,CAAuG,CACjIQ,aAAa,CAACX,QAAD,CAAWP,SAAX,CAAsBC,YAAtB,CAAoCC,QAApC,CAAb,CACAW,OAAO,CAACL,QAAQ,CAACA,QAAQ,CAACL,MAAT,CAAkB,CAAnB,CAAT,CAAP,CACAS,WAAW,CAACJ,QAAQ,CAACA,QAAQ,CAACL,MAAT,CAAkB,CAAnB,CAAT,CAAX,CACAa,kBAAkB,CAACR,QAAD,CAAWC,WAAX,CAAwBC,OAAxB,CAAlB,CACD,CALM","sourcesContent":["const removeFirstNextSong = (copySongs, setCopySongs, setSongs) => {\n  if (copySongs.length == 1) {\n    setSongs([]);\n    setCopySongs([]);\n  } else {  \n    const dup = [...copySongs];\n    dup.shift();\n    setSongs(dup);\n    setCopySongs(dup);\n  }\n};\n\nconst addSongToPast = (copySong, copyPast, setCopyPast, setPast) => {\n  const dup = [...copyPast, copySong];\n  setCopyPast(dup);\n  setPast(dup);\n};\n\nexport const nextSong = (copySong, setCopySong, copySongs, setCopySongs, copyPast, setCopyPast, setSong, setSongs, setPast) => {\n  // Change this to a backend request\n  console.log(copySongs[0]);\n  addSongToPast(copySong, copyPast, setCopyPast, setPast)\n  setSong(copySongs[0]);\n  setCopySong(copySongs[0]);\n  removeFirstNextSong(copySongs, setCopySongs, setSongs);\n};\n\nconst removeLastPastSong = (copyPast, setCopyPast, setPast) => {\n  if (copyPast.length == 1) {\n    setPast([]);\n    setCopyPast([]);\n  } else {\n    const dup = [...copyPast];\n    dup.pop();\n    setPast(dup);\n    setCopyPast(dup);\n  }\n};\n\nconst addSongToNext = (copySong, copySongs, setCopySongs, setSongs) => {\n  const a = [copySong]\n  const dup = a.concat([...copySongs])\n  setCopySongs(dup);\n  setSongs(dup);\n};\n\nexport const previousSong = (copySong, setCopySong, copySongs, setCopySongs, copyPast, setCopyPast, setSong, setSongs, setPast) => {\n  addSongToNext(copySong, copySongs, setCopySongs, setSongs);\n  setSong(copyPast[copyPast.length - 1]);\n  setCopySong(copyPast[copyPast.length - 1]);\n  removeLastPastSong(copyPast, setCopyPast, setPast);\n}"]},"metadata":{},"sourceType":"module"}