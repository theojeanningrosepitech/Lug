{"ast":null,"code":"'use strict';var utils=require(\"./utils\");var has=Object.prototype.hasOwnProperty;var isArray=Array.isArray;var defaults={allowDots:false,allowPrototypes:false,allowSparse:false,arrayLimit:20,charset:'utf-8',charsetSentinel:false,comma:false,decoder:utils.decode,delimiter:'&',depth:5,ignoreQueryPrefix:false,interpretNumericEntities:false,parameterLimit:1000,parseArrays:true,plainObjects:false,strictNullHandling:false};var interpretNumericEntities=function interpretNumericEntities(str){return str.replace(/&#(\\d+);/g,function($0,numberStr){return String.fromCharCode(parseInt(numberStr,10));});};var parseArrayValue=function parseArrayValue(val,options){if(val&&typeof val==='string'&&options.comma&&val.indexOf(',')>-1){return val.split(',');}return val;};var isoSentinel='utf8=%26%2310003%3B';var charsetSentinel='utf8=%E2%9C%93';var parseValues=function parseQueryStringValues(str,options){var obj={};var cleanStr=options.ignoreQueryPrefix?str.replace(/^\\?/,''):str;var limit=options.parameterLimit===Infinity?undefined:options.parameterLimit;var parts=cleanStr.split(options.delimiter,limit);var skipIndex=-1;var i;var charset=options.charset;if(options.charsetSentinel){for(i=0;i<parts.length;++i){if(parts[i].indexOf('utf8=')===0){if(parts[i]===charsetSentinel){charset='utf-8';}else if(parts[i]===isoSentinel){charset='iso-8859-1';}skipIndex=i;i=parts.length;}}}for(i=0;i<parts.length;++i){if(i===skipIndex){continue;}var part=parts[i];var bracketEqualsPos=part.indexOf(']=');var pos=bracketEqualsPos===-1?part.indexOf('='):bracketEqualsPos+1;var key,val;if(pos===-1){key=options.decoder(part,defaults.decoder,charset,'key');val=options.strictNullHandling?null:'';}else{key=options.decoder(part.slice(0,pos),defaults.decoder,charset,'key');val=utils.maybeMap(parseArrayValue(part.slice(pos+1),options),function(encodedVal){return options.decoder(encodedVal,defaults.decoder,charset,'value');});}if(val&&options.interpretNumericEntities&&charset==='iso-8859-1'){val=interpretNumericEntities(val);}if(part.indexOf('[]=')>-1){val=isArray(val)?[val]:val;}if(has.call(obj,key)){obj[key]=utils.combine(obj[key],val);}else{obj[key]=val;}}return obj;};var parseObject=function parseObject(chain,val,options,valuesParsed){var leaf=valuesParsed?val:parseArrayValue(val,options);for(var i=chain.length-1;i>=0;--i){var obj;var root=chain[i];if(root==='[]'&&options.parseArrays){obj=[].concat(leaf);}else{obj=options.plainObjects?Object.create(null):{};var cleanRoot=root.charAt(0)==='['&&root.charAt(root.length-1)===']'?root.slice(1,-1):root;var index=parseInt(cleanRoot,10);if(!options.parseArrays&&cleanRoot===''){obj={0:leaf};}else if(!isNaN(index)&&root!==cleanRoot&&String(index)===cleanRoot&&index>=0&&options.parseArrays&&index<=options.arrayLimit){obj=[];obj[index]=leaf;}else{obj[cleanRoot]=leaf;}}leaf=obj;}return leaf;};var parseKeys=function parseQueryStringKeys(givenKey,val,options,valuesParsed){if(!givenKey){return;}var key=options.allowDots?givenKey.replace(/\\.([^.[]+)/g,'[$1]'):givenKey;var brackets=/(\\[[^[\\]]*])/;var child=/(\\[[^[\\]]*])/g;var segment=options.depth>0&&brackets.exec(key);var parent=segment?key.slice(0,segment.index):key;var keys=[];if(parent){if(!options.plainObjects&&has.call(Object.prototype,parent)){if(!options.allowPrototypes){return;}}keys.push(parent);}var i=0;while(options.depth>0&&(segment=child.exec(key))!==null&&i<options.depth){i+=1;if(!options.plainObjects&&has.call(Object.prototype,segment[1].slice(1,-1))){if(!options.allowPrototypes){return;}}keys.push(segment[1]);}if(segment){keys.push('['+key.slice(segment.index)+']');}return parseObject(keys,val,options,valuesParsed);};var normalizeParseOptions=function normalizeParseOptions(opts){if(!opts){return defaults;}if(opts.decoder!==null&&opts.decoder!==undefined&&typeof opts.decoder!=='function'){throw new TypeError('Decoder has to be a function.');}if(typeof opts.charset!=='undefined'&&opts.charset!=='utf-8'&&opts.charset!=='iso-8859-1'){throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');}var charset=typeof opts.charset==='undefined'?defaults.charset:opts.charset;return{allowDots:typeof opts.allowDots==='undefined'?defaults.allowDots:!!opts.allowDots,allowPrototypes:typeof opts.allowPrototypes==='boolean'?opts.allowPrototypes:defaults.allowPrototypes,allowSparse:typeof opts.allowSparse==='boolean'?opts.allowSparse:defaults.allowSparse,arrayLimit:typeof opts.arrayLimit==='number'?opts.arrayLimit:defaults.arrayLimit,charset:charset,charsetSentinel:typeof opts.charsetSentinel==='boolean'?opts.charsetSentinel:defaults.charsetSentinel,comma:typeof opts.comma==='boolean'?opts.comma:defaults.comma,decoder:typeof opts.decoder==='function'?opts.decoder:defaults.decoder,delimiter:typeof opts.delimiter==='string'||utils.isRegExp(opts.delimiter)?opts.delimiter:defaults.delimiter,depth:typeof opts.depth==='number'||opts.depth===false?+opts.depth:defaults.depth,ignoreQueryPrefix:opts.ignoreQueryPrefix===true,interpretNumericEntities:typeof opts.interpretNumericEntities==='boolean'?opts.interpretNumericEntities:defaults.interpretNumericEntities,parameterLimit:typeof opts.parameterLimit==='number'?opts.parameterLimit:defaults.parameterLimit,parseArrays:opts.parseArrays!==false,plainObjects:typeof opts.plainObjects==='boolean'?opts.plainObjects:defaults.plainObjects,strictNullHandling:typeof opts.strictNullHandling==='boolean'?opts.strictNullHandling:defaults.strictNullHandling};};module.exports=function(str,opts){var options=normalizeParseOptions(opts);if(str===''||str===null||typeof str==='undefined'){return options.plainObjects?Object.create(null):{};}var tempObj=typeof str==='string'?parseValues(str,options):str;var obj=options.plainObjects?Object.create(null):{};var keys=Object.keys(tempObj);for(var i=0;i<keys.length;++i){var key=keys[i];var newObj=parseKeys(key,tempObj[key],options,typeof str==='string');obj=utils.merge(obj,newObj,options);}if(options.allowSparse===true){return obj;}return utils.compact(obj);};","map":{"version":3,"sources":["/home/jeanningros/lug/node_modules/expo-linking/node_modules/qs/lib/parse.js"],"names":["utils","require","has","Object","prototype","hasOwnProperty","isArray","Array","defaults","allowDots","allowPrototypes","allowSparse","arrayLimit","charset","charsetSentinel","comma","decoder","decode","delimiter","depth","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","plainObjects","strictNullHandling","str","replace","$0","numberStr","String","fromCharCode","parseInt","parseArrayValue","val","options","indexOf","split","isoSentinel","parseValues","parseQueryStringValues","obj","cleanStr","limit","Infinity","undefined","parts","skipIndex","i","length","part","bracketEqualsPos","pos","key","slice","maybeMap","encodedVal","call","combine","parseObject","chain","valuesParsed","leaf","root","concat","create","cleanRoot","charAt","index","isNaN","parseKeys","parseQueryStringKeys","givenKey","brackets","child","segment","exec","parent","keys","push","normalizeParseOptions","opts","TypeError","isRegExp","module","exports","tempObj","newObj","merge","compact"],"mappings":"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","sourcesContent":["'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n"]},"metadata":{},"sourceType":"script"}