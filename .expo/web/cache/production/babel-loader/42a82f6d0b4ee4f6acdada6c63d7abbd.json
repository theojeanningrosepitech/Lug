{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useState,Component}from\"react\";import Image from\"react-native-web/dist/exports/Image\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Button from\"react-native-web/dist/exports/Button\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TextButton from\"./common/TextButton.js\";import CustomInput from\"./common/CustomInput.js\";var SettingPage=function SettingPage(_ref){var route=_ref.route,navigation=_ref.navigation;function setSetting(_email,_new_email,_new_email_confirm,_mdp,_new_mdp,_new_mdp_confirm,_new_pseudo){return _regeneratorRuntime.async(function setSetting$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"--- getTrack() ---\");fetch('http://shangrila.pythonanywhere.com/settings',{method:'POST',body:{email:_email,new_email:_new_email,new_email_confirm:_new_email_confirm,mdp:_mdp,new_mdp:_new_mdp,new_mdp_confirm:_new_mdp_confirm,new_pseudo:_new_pseudo}}).then(function(response){return response.json();}).then(function(response){console.log(\"Server said: \"+response);});case 2:case\"end\":return _context.stop();}}},null,null,null,Promise);}var _useState=useState(''),_useState2=_slicedToArray(_useState,2),_email=_useState2[0],onChangeEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),_mdp=_useState4[0],onChangeMdp=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),_pseudo=_useState6[0],onChangePseudo=_useState6[1];return React.createElement(View,{style:styles.container},React.createElement(View,{style:styles.topTitle},\"Reglages et informations\"),React.createElement(View,{style:styles.userNameAll},React.createElement(View,{style:styles.userNameTitle},\"Ton pseudo\"),React.createElement(View,{style:styles.userNamePerso},React.createElement(CustomInput,{useStateFunction:onChangePseudo,useStateValue:_pseudo,placeholder:\"Bobobo bobo\"})),React.createElement(View,{style:styles.userNameModify},\"Modifier ton pseudo\")),React.createElement(View,{style:styles.userNameAll},React.createElement(View,{style:styles.userNameTitle},\"Ton adresse email\",React.createElement(CustomInput,{useStateFunction:onChangeEmail,useStateValue:_email,placeholder:\"cocoDu74@caramail.com\"})),React.createElement(View,{style:styles.userNamePerso}),React.createElement(View,{style:styles.userNameModify},\"Modifier ton mail\")),React.createElement(View,{style:styles.userNameAll},React.createElement(View,{style:styles.userNameTitle},\"Ton mot de passe \"),React.createElement(View,{style:styles.userNamePerso},React.createElement(CustomInput,{useStateFunction:onChangeMdp,useStateValue:_mdp,placeholder:\"*********\"})),React.createElement(View,{style:styles.userNameModify},\"Modifier ton mdp \")),React.createElement(TextButton,{content:\"Valider\",action:function action(){setSetting(_email,_mdp,_pseudo);}}));};var styles=StyleSheet.create({container:{flexDirection:\"column\",backgroundColor:\"#120841\",color:\"white\",justifyContent:\"center\",alignItems:\"center\",flex:1,flexDirection:\"column\",fontSize:25,padding:20},topTitle:{textAlign:\"center\",textAlignVertical:\"center\",fontWeight:\"bold\",fontSize:40,fontFamily:\"Roboto_700Bold\",marginBottom:20},userNameAll:{marginLeft:\"15%\",marginRight:\"15%\",minWidth:\"60%\",minHeight:\"20%\",marginBottom:5,marginTop:15,borderBottomColor:'white',borderBottomWidth:1},userNameTitle:{fontWeight:\"bold\",justifyContent:\"flex-start\",fontFamily:\"Roboto_700Bold\",marginBottom:5},userNamePerso:{paddingLeft:\"10%\",fontFamily:\"Roboto_700Bold\",fontSize:16},userNameModify:{fontSize:10,color:\"grey\",paddingLeft:\"40%\",fontFamily:\"Roboto_300Light\",marginTop:5}});export default SettingPage;","map":{"version":3,"sources":["/home/jeanningros/lug/components/SettingPage.js"],"names":["React","useState","Component","TextButton","CustomInput","SettingPage","route","navigation","setSetting","_email","_new_email","_new_email_confirm","_mdp","_new_mdp","_new_mdp_confirm","_new_pseudo","console","log","fetch","method","body","email","new_email","new_email_confirm","mdp","new_mdp","new_mdp_confirm","new_pseudo","then","response","json","onChangeEmail","onChangeMdp","_pseudo","onChangePseudo","styles","container","topTitle","userNameAll","userNameTitle","userNamePerso","userNameModify","StyleSheet","create","flexDirection","backgroundColor","color","justifyContent","alignItems","flex","fontSize","padding","textAlign","textAlignVertical","fontWeight","fontFamily","marginBottom","marginLeft","marginRight","minWidth","minHeight","marginTop","borderBottomColor","borderBottomWidth","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState, Component } from \"react\";\nimport {\n  Image,\n  StyleSheet,\n  Text,\n  View,\n  Button,\n  TouchableOpacity,\n  TextInput,\n} from \"react-native\";\n\n\n\nimport TextButton from \"./common/TextButton.js\";\nimport CustomInput from \"./common/CustomInput.js\";\n\n\nconst SettingPage = ({ route, navigation }) => {\n    async function setSetting(_email, _new_email, _new_email_confirm, _mdp, _new_mdp, _new_mdp_confirm, _new_pseudo ) {\n        console.log(\"--- getTrack() ---\");\n        fetch( 'http://shangrila.pythonanywhere.com/settings',  {\n            method: 'POST',\n            body: { \n                email: _email,\n                new_email: _new_email,\n                new_email_confirm: _new_email_confirm,\n                mdp: _mdp,\n                new_mdp: _new_mdp,\n                new_mdp_confirm: _new_mdp_confirm,\n                new_pseudo: _new_pseudo,\n            }\n        })\n\n       \n        .then(response => response.json())\n        .then((response) => {\n            console.log(\"Server said: \" + response);\n        });\n      }\n\n      const [_email, onChangeEmail] = useState('');\n      const [_mdp, onChangeMdp] = useState('');\n      const [_pseudo, onChangePseudo] = useState('');\n  \n  \n  \n\n\n        return (\n        <View style={styles.container}> \n\n        \n            <View style={styles.topTitle}> \n                Reglages et informations\n            </View>\n                <View style={styles.userNameAll}>\n                    <View style={styles.userNameTitle}>\n                        Ton pseudo\n                    </View>\n                    <View style={styles.userNamePerso}>\n                        <CustomInput useStateFunction={onChangePseudo} useStateValue={_pseudo} placeholder=\"Bobobo bobo\"/>\n\n                    </View>\n                    <View style={styles.userNameModify} >\n                        Modifier ton pseudo\n                    </View>\n                </View>\n\n\n                <View style={styles.userNameAll}>\n                    <View style={styles.userNameTitle}>\n                     Ton adresse email\n                     <CustomInput useStateFunction ={onChangeEmail} useStateValue={_email} placeholder=\"cocoDu74@caramail.com\" />\n                    </View>\n                    {/* <CustomInput useStateFunction ={onChangeEmail} useStateValue={new_email} placeholder=\"\">\n                 \n                    <CustomInput useStateFunction ={onChangeEmail} useStateValue={new_email} placeholder=\"\">\n                    <CustomInput useStateFunction ={onChangeEmail} useStateValue={new_email} placeholder=\"\">\n                    <CustomInput useStateFunction ={onChangeEmail} useStateValue={new_email} placeholder=\"\">\n                    */}\n                    <View style={styles.userNamePerso}>\n                        {/* cocoDu74@caramail.com */}\n                    </View>\n                    <View style={styles.userNameModify} >\n                        Modifier ton mail\n                    </View>\n                    {/* <CustomInput useStateFunction={onChangeTextPseudo} useStateValue={_new_email} placeholder=\"Email\"/> */}\n                </View>\n\n                <View style={styles.userNameAll}>\n                    <View style={styles.userNameTitle}>\n                        Ton mot de passe </View>\n\n                    <View style={styles.userNamePerso}>\n                    <CustomInput useStateFunction={onChangeMdp} useStateValue={_mdp} placeholder=\"*********\"/>\n                    </View>\n                    <View style={styles.userNameModify} >\n                        Modifier ton mdp </View>\n                </View>\n                \n                <TextButton content=\"Valider\" action={() => { \n                setSetting(_email, _mdp, _pseudo )}} />\n            {/* Textbutton avec toutes les valeurs possible <TextButton content=\"Valider les modifications\" action={() => { \n                setSetting(_email, _new_email, _new_email_confirm, _mdp, _new_mdp, _new_mdp_confirm, _pseudo _new_pseudo )}} /> */}\n\n        </View>\n        \n            );\n        \n    };\n\n\n    const styles = StyleSheet.create({\n        container: {\n          flexDirection: \"column\",\n          backgroundColor: \"#120841\",\n          color: \"white\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flex: 1,\n          flexDirection: \"column\",\n          fontSize: 25,\n          padding: 20,\n\n        },\n\n        topTitle: {\n            textAlign: \"center\",\n            textAlignVertical: \"center\",\n            fontWeight: \"bold\",\n            fontSize: 40,\n            fontFamily: \"Roboto_700Bold\",\n            marginBottom: 20,\n          },\n\n        userNameAll: {\n           \n            marginLeft: \"15%\",\n            marginRight: \"15%\",\n            minWidth: \"60%\",\n            minHeight: \"20%\",\n            marginBottom: 5,\n            marginTop: 15,\n            borderBottomColor: 'white',\n            borderBottomWidth: 1,\n        },\n\n        userNameTitle: {\n            fontWeight: \"bold\",\n            justifyContent: \"flex-start\",\n            // flex: 2,\n            fontFamily: \"Roboto_700Bold\",\n            marginBottom: 5,\n\n        },\n\n        userNamePerso: {\n            // flex: 3,\n            paddingLeft: \"10%\",\n       \n            fontFamily: \"Roboto_700Bold\",\n            fontSize:16,\n          \n        },\n\n        userNameModify: {\n            fontSize: 10,\n            color: \"grey\",\n            // fontWeight: \"light\",\n            // textAlign: 'right',\n            paddingLeft: \"40%\",\n            fontFamily: \"Roboto_300Light\",\n            marginTop: 5,\n        }\n    });      \n\n\nexport default SettingPage\n"]},"metadata":{},"sourceType":"module"}