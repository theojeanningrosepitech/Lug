{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{CodedError}from'@unimodules/core';import{CryptoEncoding}from\"./Crypto.types\";export default{get name(){return'ExpoCrypto';},digestStringAsync:function digestStringAsync(algorithm,data,options){var encoder,buffer,hashedData;return _regeneratorRuntime.async(function digestStringAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(crypto.subtle){_context.next=2;break;}throw new CodedError('ERR_CRYPTO_UNAVAILABLE','Access to the WebCrypto API is restricted to secure origins (https).');case 2:encoder=new TextEncoder();buffer=encoder.encode(data);_context.next=6;return _regeneratorRuntime.awrap(crypto.subtle.digest(algorithm,buffer));case 6:hashedData=_context.sent;if(!(options.encoding===CryptoEncoding.HEX)){_context.next=11;break;}return _context.abrupt(\"return\",hexString(hashedData));case 11:if(!(options.encoding===CryptoEncoding.BASE64)){_context.next=13;break;}return _context.abrupt(\"return\",btoa(String.fromCharCode.apply(String,_toConsumableArray(new Uint8Array(hashedData)))));case 13:throw new CodedError('ERR_CRYPTO_DIGEST','Invalid encoding type provided.');case 14:case\"end\":return _context.stop();}}},null,null,null,Promise);}};function hexString(buffer){var byteArray=new Uint8Array(buffer);var hexCodes=_toConsumableArray(byteArray).map(function(value){var hexCode=value.toString(16);var paddedHexCode=hexCode.padStart(2,'0');return paddedHexCode;});return hexCodes.join('');}","map":{"version":3,"sources":["../src/ExpoCrypto.web.ts"],"names":[],"mappings":"qIAAA,OAAS,UAAT,KAA2B,kBAA3B,CAEA,OAAgC,cAAhC,sBAEA,cAAe,CACb,GAAI,CAAA,IAAJ,EAAQ,CACN,MAAO,YAAP,CACD,CAHY,CAIP,iBAJO,4BAKX,SALW,CAMX,IANW,CAOX,OAPW,8JASN,MAAM,CAAC,MATD,8BAUH,IAAI,CAAA,UAAJ,CACJ,wBADI,CAEJ,sEAFI,CAVG,QAeL,OAfK,CAeK,GAAI,CAAA,WAAJ,EAfL,CAgBL,MAhBK,CAgBI,OAAO,CAAC,MAAR,CAAe,IAAf,CAhBJ,kDAiBc,MAAM,CAAC,MAAP,CAAc,MAAd,CAAqB,SAArB,CAAgC,MAAhC,CAjBd,SAiBL,UAjBK,oBAkBP,OAAO,CAAC,QAAR,GAAqB,cAAc,CAAC,GAlB7B,2DAmBF,SAAS,CAAC,UAAD,CAnBP,eAoBA,OAAO,CAAC,QAAR,GAAqB,cAAc,CAAC,MApBpC,2DAqBF,IAAI,CAAC,MAAM,CAAC,YAAP,OAAA,MAAM,oBAAiB,GAAI,CAAA,UAAJ,CAAe,UAAf,CAAjB,EAAP,CArBF,eAuBL,IAAI,CAAA,UAAJ,CAAe,mBAAf,CAAoC,iCAApC,CAvBK,wEAAf,CA2BA,QAAS,CAAA,SAAT,CAAmB,MAAnB,CAAsC,CACpC,GAAM,CAAA,SAAS,CAAG,GAAI,CAAA,UAAJ,CAAe,MAAf,CAAlB,CAEA,GAAM,CAAA,QAAQ,CAAG,mBAAI,SAAJ,EAAe,GAAf,CAAmB,SAAA,KAAK,CAAG,CAC1C,GAAM,CAAA,OAAO,CAAG,KAAK,CAAC,QAAN,CAAe,EAAf,CAAhB,CACA,GAAM,CAAA,aAAa,CAAG,OAAO,CAAC,QAAR,CAAiB,CAAjB,CAAoB,GAApB,CAAtB,CACA,MAAO,CAAA,aAAP,CACD,CAJgB,CAAjB,CAMA,MAAO,CAAA,QAAQ,CAAC,IAAT,CAAc,EAAd,CAAP,CACD","sourcesContent":["import { CodedError } from '@unimodules/core';\n\nimport { CryptoDigestAlgorithm, CryptoEncoding, CryptoDigestOptions } from './Crypto.types';\n\nexport default {\n  get name(): string {\n    return 'ExpoCrypto';\n  },\n  async digestStringAsync(\n    algorithm: CryptoDigestAlgorithm,\n    data: string,\n    options: CryptoDigestOptions\n  ): Promise<string> {\n    if (!crypto.subtle) {\n      throw new CodedError(\n        'ERR_CRYPTO_UNAVAILABLE',\n        'Access to the WebCrypto API is restricted to secure origins (https).'\n      );\n    }\n    const encoder = new TextEncoder();\n    const buffer = encoder.encode(data);\n    const hashedData = await crypto.subtle.digest(algorithm, buffer);\n    if (options.encoding === CryptoEncoding.HEX) {\n      return hexString(hashedData);\n    } else if (options.encoding === CryptoEncoding.BASE64) {\n      return btoa(String.fromCharCode(...new Uint8Array(hashedData)));\n    }\n    throw new CodedError('ERR_CRYPTO_DIGEST', 'Invalid encoding type provided.');\n  },\n};\n\nfunction hexString(buffer: ArrayBuffer): string {\n  const byteArray = new Uint8Array(buffer);\n\n  const hexCodes = [...byteArray].map(value => {\n    const hexCode = value.toString(16);\n    const paddedHexCode = hexCode.padStart(2, '0');\n    return paddedHexCode;\n  });\n\n  return hexCodes.join('');\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}