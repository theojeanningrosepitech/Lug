{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jeanningros/lug/components/CreateRoom.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport TextButton from \"./common/TextButton.js\";\nimport CustomInput from \"./common/CustomInput.js\";\nimport { setCurrentPartyCode, setCurrentPartyId } from \"../redux/user.js\";\n\nvar CreateRoom = function CreateRoom(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      textRoom = _useState2[0],\n      setTextRoom = _useState2[1];\n\n  var user = useSelector(function (state) {\n    return state.user.user;\n  });\n  var dispatch = useDispatch();\n\n  function getCode(_party_id, _token) {\n    var response;\n    return _regeneratorRuntime.async(function getCode$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://shangrila.pythonanywhere.com/code?token=\" + _token + \"&party_id=\" + _party_id).then(function (response) {\n              return response.json();\n            }).then(function (json) {\n              console.log(\"res test fun === \", json);\n              return {\n                codeParty: json.code\n              };\n            }).catch(function (error) {\n              console.error(error);\n            }));\n\n          case 3:\n            response = _context.sent;\n            console.log(\"res test fun === \", response);\n            return _context.abrupt(\"return\", response);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 11:\n            ;\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  }\n\n  function setRoomToAp(_creator_id, _name, _token) {\n    var response;\n    return _regeneratorRuntime.async(function setRoomToAp$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://shangrila.pythonanywhere.com/createParty?token=\" + _token + \"&name=\" + _name).then(function (response) {\n              return response.json();\n            }).then(function (json) {\n              console.log(\"json ===== ===== \", json);\n              return {\n                idParty: json.party_id\n              };\n            }).catch(function (error) {\n              console.error(error);\n            }));\n\n          case 3:\n            response = _context2.sent;\n            console.log(\"res ======!!======\", response);\n            return _context2.abrupt(\"return\", response);\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n\n          case 11:\n            ;\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.intitule,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.head,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Devenir leader\")), React.createElement(View, {\n    style: styles.intitule2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.head2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Connecte ton compte\")), React.createElement(View, {\n    style: styles.imagerie,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/spotify.jpg\"),\n    resizeMode: \"contain\",\n    style: styles.tinyLogo,\n    imageStyle: styles.image_imageStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), React.createElement(Image, {\n    source: require(\"../assets/deezer.jpg\"),\n    resizeMode: \"contain\",\n    style: styles.tinyLogo,\n    imageStyle: styles.image_imageStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.down,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.someText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Donne un nom \\xE0 ta salle\")), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), React.createElement(CustomInput, {\n    placeholder: \"Nom public de la salle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.mainButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, React.createElement(TextButton, {\n    content: \"Cr\\xE9er la salle\",\n    action: function _callee() {\n      var response, responseCode;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(setRoomToAp(user.id, textRoom, user.token));\n\n            case 2:\n              response = _context3.sent;\n\n              if (!(response != undefined && response.idParty != undefined)) {\n                _context3.next = 12;\n                break;\n              }\n\n              _context3.next = 6;\n              return _regeneratorRuntime.awrap(getCode(response.idParty, user.token));\n\n            case 6:\n              responseCode = _context3.sent;\n              dispatch(setCurrentPartyId(response));\n              dispatch(setCurrentPartyCode(responseCode));\n              navigation.push(\"InitialMood\");\n              _context3.next = 13;\n              break;\n\n            case 12:\n              console.log(\"Put pop up\");\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    backgroundColor: '#120841',\n    justifyContent: \"space-between\",\n    flex: 1\n  },\n  flexing: {\n    flex: 1\n  },\n  intitule: {\n    marginTop: 20\n  },\n  intitule2: {\n    marginTop: 10,\n    marginBottom: 60\n  },\n  tinyLogo: {\n    width: 120,\n    height: 120\n  },\n  head: {\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n    fontSize: 25,\n    fontWeight: \"bold\",\n    color: \"white\",\n    fontFamily: \"Roboto_700Bold\"\n  },\n  head2: {\n    color: \"white\",\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n    fontSize: 15,\n    fontFamily: \"Roboto_300Light\"\n  },\n  imagerie: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginBottom: 60\n  },\n  down: {\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n    marginBottom: 20\n  },\n  mainButton: {\n    marginBottom: 40\n  },\n  someText: {\n    padding: 2,\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    color: \"white\"\n  },\n  someInput: {\n    justifyContent: \"flex-end\",\n    height: 40,\n    alignContent: \"center\",\n    padding: 2\n  }\n});\nexport default CreateRoom;","map":{"version":3,"sources":["/home/jeanningros/lug/components/CreateRoom.js"],"names":["React","useState","useDispatch","useSelector","TextButton","CustomInput","setCurrentPartyCode","setCurrentPartyId","CreateRoom","navigation","textRoom","setTextRoom","user","state","dispatch","getCode","_party_id","_token","fetch","then","response","json","console","log","codeParty","code","catch","error","setRoomToAp","_creator_id","_name","idParty","party_id","styles","container","intitule","head","intitule2","head2","imagerie","require","tinyLogo","image_imageStyle","down","someText","mainButton","id","token","undefined","responseCode","push","StyleSheet","create","flexDirection","backgroundColor","justifyContent","flex","flexing","marginTop","marginBottom","width","height","textAlignVertical","textAlign","fontSize","fontWeight","color","fontFamily","padding","someInput","alignContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Image,\n  StyleSheet,\n  Text,\n  View,\n  Button,\n  TouchableOpacity,\n  TextInput,\n} from \"react-native\";\nimport { useDispatch, useSelector } from 'react-redux';\n\n\n// import fontStyles from 'assets/fonts/Roboto-Light.ttf';\n\n\n\nimport TextButton from \"./common/TextButton.js\";\nimport CustomInput from \"./common/CustomInput.js\";\nimport { setCurrentPartyCode, setCurrentPartyId } from \"../redux/user.js\";\n\n// {\n  /* <IconButton action={function}/>\n        <Icon/>\n      </IconButton> */\n// }\n\n// {\n  /* TO DO: le texte du placeholder est généré automatiquement selon le nom spotify du créateur du salon.\nFaire comprendre visuellement que l'utilisateur peut simplement cliquer sur suivant sans avoir à rentrer du texte pour le nom de la salle\n  */\n// }\n\n\n\nconst CreateRoom = ({ navigation }) => {\n  const [textRoom, setTextRoom] = useState(\"\");\n  const user = useSelector((state) => state.user.user);\n  const dispatch = useDispatch();\n  \n  async function getCode (_party_id, _token) {\n    try {\n      let response = await fetch(`https://shangrila.pythonanywhere.com/code?token=${_token}&party_id=${_party_id}`)\n      .then((response) => response.json())\n      .then((json) => {\n      console.log (\"res test fun === \", json)\n  \n        return ({\n          codeParty: json.code,\n        })\n      })\n  .catch((error) => { console.error(error) });\n      console.log (\"res test fun === \", response)\n      return response;\n    } catch (error) {\n      console.error(error);\n    };\n  }\n\n  async function setRoomToAp (_creator_id, _name, _token) {\n    try {\n      let response = await fetch(`https://shangrila.pythonanywhere.com/createParty?token=${_token}&name=${_name}`)\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(\"json ===== ===== \", json)\n        return ({\n          idParty: json.party_id, \n          \n        })\n      })\n     \n  .catch((error) => { console.error(error) });\n      console.log (\"res ======!!======\",response)\n      return response;\n    } catch (error) {\n      console.error(error);\n    };\n  \n}\n  return (\n    <View style={styles.container}>\n      <View>\n        <View style={styles.intitule}>\n          <Text style={styles.head}>Devenir leader</Text>\n        </View>\n        <View style={styles.intitule2}>  \n          <Text style={styles.head2}>Connecte ton compte</Text>\n        </View>\n        <View style={styles.imagerie}>\n          <Image\n            source={require(\"../assets/spotify.jpg\")}\n            resizeMode=\"contain\"\n            style={styles.tinyLogo}\n            imageStyle={styles.image_imageStyle}\n          />\n          <Image\n            source={require(\"../assets/deezer.jpg\")}\n            resizeMode=\"contain\"\n            style={styles.tinyLogo}\n            imageStyle={styles.image_imageStyle}\n          />\n        </View>\n        <View style={styles.down}>\n          <Text style={styles.someText}>Donne un nom à ta salle</Text>\n        </View>\n        <View>\n          {/* <TextInput\n            style={styles.someInput}\n            placeholder=\" Nom d'utilisateur \"\n            onChangeText={(textRoom) => setTextRoom(textRoom)}\n            defaultValue={textRoom}\n          /> */}\n        </View>\n        <CustomInput placeholder=\"Nom public de la salle\"/>\n      </View>\n      <View style={styles.mainButton}>\n        <TextButton\n          content=\"Créer la salle\" \n          action={async () => {\n\n            let response = await setRoomToAp(user.id, textRoom, user.token);\n\n            if (response != undefined && response.idParty != undefined) {\n              let responseCode = await getCode( response.idParty, user.token)\n              dispatch(setCurrentPartyId(response));\n              dispatch(setCurrentPartyCode(responseCode));\n\n              navigation.push(\"InitialMood\")\n            } else {\n              console.log(\"Put pop up\");\n            }\n          }}  \n        />\n\n\n      </View>\n    </View>\n  );\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    backgroundColor: '#120841',\n    justifyContent: \"space-between\",\n    flex: 1,\n  },\n  flexing: {\n    flex: 1,\n  },\n  intitule: {\n    marginTop: 20,\n  },\n  intitule2: {\n    marginTop: 10,\n    marginBottom: 60,\n  },\n  tinyLogo: {\n    width: 120,\n    height: 120,\n  },\n  \n  head: {\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n    fontSize: 25,\n    fontWeight: \"bold\",\n    color: \"white\",\n    fontFamily: \"Roboto_700Bold\"\n  },\n  head2: {\n    color: \"white\",\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n    fontSize: 15,\n    fontFamily: \"Roboto_300Light\"    \n  },\n  imagerie: {\n    flexDirection: \"row\",\n    justifyContent:\"space-around\",\n    marginBottom: 60,\n  },\n  down: {\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n    marginBottom: 20,\n  },\n  mainButton: {\n    marginBottom: 40,\n  },\n  someText: {\n    padding: 2,\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    color: \"white\",\n  },\n  someInput: {\n    justifyContent: \"flex-end\",\n    height: 40,\n    alignContent: \"center\",\n    padding: 2,\n  },\n\n});\n export default CreateRoom;"]},"metadata":{},"sourceType":"module"}