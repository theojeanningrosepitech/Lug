{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/jeanningros/lug/components/common/OutlineIconButton.js\";\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport var OutlineIconButton = function OutlineIconButton(_ref) {\n  var children = _ref.children,\n      action = _ref.action;\n\n  if (String(children.type).slice(0, 12) === \"function Svg\") {\n    var clone = React.cloneElement(children, {\n      color: 'white',\n      height: 30,\n      width: 30\n    });\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: action,\n      style: styles.buttonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, clone));\n  } else if (String(children.type).slice(0, 24) === \"function FontAwesomeIcon\") {\n    var _clone = React.cloneElement(children, {\n      color: 'white',\n      size: 28\n    });\n\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: action,\n      style: styles.buttonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, _clone));\n  } else {\n    return React.createElement(TouchableOpacity, {\n      onPress: action,\n      style: styles.buttonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    });\n  }\n};\nexport var CharButton = function CharButton(_ref2) {\n  var children = _ref2.children,\n      action = _ref2.action;\n\n  if (String(children.type).slice(0, 12) === \"function Svg\") {\n    var clone = React.cloneElement(children, {\n      color: 'white',\n      height: 15,\n      width: 15\n    });\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: action,\n      style: styles.smallButtonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, clone));\n  } else if (String(children.type).slice(0, 24) === \"function FontAwesomeIcon\") {\n    var _clone2 = React.cloneElement(children, {\n      color: 'white',\n      size: 14\n    });\n\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: action,\n      style: styles.smallButtonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, _clone2));\n  } else {\n    return React.createElement(TouchableOpacity, {\n      onPress: action,\n      style: styles.smallButtonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    });\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row'\n  },\n  buttonContainer: {\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: \"white\",\n    borderRadius: 20\n  },\n  smallButtonContainer: {\n    width: 20,\n    height: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: \"orange\"\n  }\n});","map":{"version":3,"sources":["/home/jeanningros/lug/components/common/OutlineIconButton.js"],"names":["React","OutlineIconButton","children","action","String","type","slice","clone","cloneElement","color","height","width","styles","container","buttonContainer","size","CharButton","smallButtonContainer","StyleSheet","create","flexDirection","justifyContent","alignItems","borderWidth","borderColor","borderRadius","backgroundColor"],"mappings":"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","sourcesContent":["// Utilisation:\n// <OutlineIconButton action={function}/>\n//   <Icon/>\n// </OutlineIconButton>\n\nimport React from 'react';\nimport { StyleSheet, View, TouchableOpacity } from 'react-native';\n\nexport const OutlineIconButton = ({ children, action }) => {\n  if (String(children.type).slice(0,12) === \"function Svg\") {\n    const clone = React.cloneElement(children, {color:'white', height: 30, width: 30}, );\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          onPress={action}\n          style={styles.buttonContainer}>\n          {clone}\n        </TouchableOpacity>\n      </View>\n    );\n  } else if (String(children.type).slice(0,24) === \"function FontAwesomeIcon\") {\n    const clone = React.cloneElement(children, {color:'white', size: 28}, );\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          onPress={action}\n          style={styles.buttonContainer}>\n          {clone}\n        </TouchableOpacity>\n      </View>\n    );\n  } else {\n    return (\n      <TouchableOpacity\n        onPress={action}\n        style={styles.buttonContainer}>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport const CharButton = ({ children, action }) => {\n  if (String(children.type).slice(0,12) === \"function Svg\") {\n    const clone = React.cloneElement(children, {color:'white', height: 15, width: 15}, );\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          onPress={action}\n          style={styles.smallButtonContainer}>\n          {clone}\n        </TouchableOpacity>\n      </View>\n    );\n  } else if (String(children.type).slice(0,24) === \"function FontAwesomeIcon\") {\n    const clone = React.cloneElement(children, {color:'white', size: 14}, );\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          onPress={action}\n          style={styles.smallButtonContainer}>\n          {clone}\n        </TouchableOpacity>\n      </View>\n    );\n  } else {\n    return (\n      <TouchableOpacity\n        onPress={action}\n        style={styles.smallButtonContainer}>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row'\n  },\n  buttonContainer: {\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: \"white\",\n    borderRadius: 20\n  },\n  smallButtonContainer: {\n    width: 20,\n    height: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: \"orange\",\n  },\n});\n\n"]},"metadata":{},"sourceType":"module"}