{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jeanningros/lug/components/ConnectAccount.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextButton from \"./common/TextButton\";\nimport Header from \"./common/Header\";\nimport CustomInput from \"./common/CustomInput.js\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser, userConnected } from \"../redux/user\";\n\nvar ConnectAccount = function ConnectAccount(_ref) {\n  var navigation = _ref.navigation;\n  var response;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      onChangeTextEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mdp = _useState4[0],\n      onChangeTextMdp = _useState4[1];\n\n  function loginToApi(email, mdp) {\n    var _response;\n\n    return _regeneratorRuntime.async(function loginToApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://shangrila.pythonanywhere.com/login?email=\" + email + \"&mdp=\" + mdp).then(function (response) {\n              return response.json();\n            }).then(function (json) {\n              return {\n                token: json.token,\n                email: json.user.email,\n                id: json.user.user_id,\n                pseudo: json.user.pseudo\n              };\n            }).catch(function (error) {\n              console.error(error);\n            }));\n\n          case 3:\n            _response = _context.sent;\n            console.log(\"res ======!!======\", _response);\n            return _context.abrupt(\"return\", _response);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 11:\n            ;\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  }\n\n  var request;\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.Text1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.devenezLeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Te voil\\xE0 de retour parmi nous !\")), React.createElement(View, {\n    style: styles.MainButton1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, React.createElement(CustomInput, {\n    useStateFunction: onChangeTextEmail,\n    useStateValue: email,\n    placeholder: \"Email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.MainButton1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(CustomInput, {\n    useStateFunction: onChangeTextMdp,\n    useStateValue: mdp,\n    placeholder: \"Mot de passe\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }))), React.createElement(View, {\n    style: styles.SecondaryButton1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, React.createElement(TextButton, {\n    content: \"Se connecter\",\n    action: function _callee() {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"text\", email);\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(loginToApi(email, mdp));\n\n            case 3:\n              response = _context2.sent;\n              console.log(\"response === \", response);\n\n              if (response.email != null && response.token != null) {\n                console.log(\"resss body === \", response.email);\n                dispatch(setUser(response));\n                navigation.push('ConnectService');\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#120841\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  image: {\n    justifyContent: 'space-around',\n    flexDirection: 'row'\n  },\n  imageLogo: {\n    width: 325,\n    height: 325\n  },\n  Text1: {\n    padding: 20\n  },\n  devenezLeader: {\n    fontFamily: \"Roboto_700Bold\",\n    textAlign: 'center',\n    color: 'white'\n  },\n  devenirLeader: {\n    width: 264,\n    height: 81,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 20,\n    shadowColor: \"rgba(228,66,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    fontFamily: \"CarterOne_400Regular\",\n    color: \"rgba(18,8,65,1)\",\n    textAlign: \"center\"\n  },\n  imageLogo: {\n    width: 325,\n    height: 325\n  },\n  Text1: {\n    fontFamily: \"Roboto_300Light\",\n    padding: 20\n  },\n  devenezLeader: {\n    fontFamily: \"Roboto_700Bold\",\n    textAlign: 'center',\n    color: 'white'\n  },\n  SecondaryButton1: {\n    marginBottom: 40\n  }\n});\nexport default ConnectAccount;","map":{"version":3,"sources":["/home/jeanningros/lug/components/ConnectAccount.js"],"names":["React","Component","useState","TextButton","Header","CustomInput","useDispatch","useSelector","setUser","userConnected","ConnectAccount","navigation","response","email","onChangeTextEmail","mdp","onChangeTextMdp","loginToApi","fetch","then","json","token","user","id","user_id","pseudo","catch","error","console","log","request","dispatch","styles","container","Text1","devenezLeader","MainButton1","SecondaryButton1","push","StyleSheet","create","flex","backgroundColor","flexDirection","justifyContent","image","imageLogo","width","height","padding","fontFamily","textAlign","color","devenirLeader","borderRadius","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","marginBottom"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import { StyleSheet, Text, View, Button, Image, TouchableOpacity } from 'react-native';\n\n// const Hub = ({ navigation }) => {\n//   return (\n//     <View style={styles.alignIt}>\n      \n//       <Image\n//       style={styles.containImage}\n//         source={require('../assets/MainLogo.png')}\n//         />\n//         <View style={styles.container}>\n//         <Button\n//           title='DEVENIR LEADER'\n//           onPress={() => navigation.push('CreateRoom')}\n//         />\n//         <Text>Déja Leader ? </Text>\n//         <Button style={styles.MainButton}\n//           title='Se connecter'\n//           onPress={() => navigation.push('JoinRoom')}\n//         />\n//       </View>\n\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 5,\n//     backgroundColor: '#461C86',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontFamily: \"Canter Bold\"\n//   },\n//   alignIt: {\n//     backgroundColor: '#461C86',\n//     flex: 3,\n//     fontFamily: \"Canter Bold\"\n//   },\n//   containImage: {\n//     flex: 1, height: undefined, width: undefined, resizeMode: 'contain' \n//   },\n//   MainButton: {\n//     flex: 1,\n//     fontFamily: \"Canter Bold\"\n//   }\n\n// });\n\n// export default Hub;\n\n\nimport React, { Component, useState } from \"react\";\nimport { StyleSheet, View, Text, Image, ImageBackground, Button } from \"react-native\";\nimport TextButton from \"./common/TextButton\";\nimport Header from \"./common/Header\";\nimport CustomInput from \"./common/CustomInput.js\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser, userConnected } from '../redux/user';\n\n\nconst ConnectAccount = ({ navigation }) => {\n  var response;\n  const [email, onChangeTextEmail] = useState('');\n  const [mdp, onChangeTextMdp] = useState('');\n\n  async function loginToApi (email, mdp) {\n    try {\n      let response = await fetch(`https://shangrila.pythonanywhere.com/login?email=${email}&mdp=${mdp}`)\n      .then((response) => response.json())\n      .then((json) => {\n        return ({\n          token: json.token, \n          email: json.user.email,\n          id: json.user.user_id,\n          pseudo: json.user.pseudo\n        })\n      })\n  .catch((error) => { console.error(error) });\n      console.log (\"res ======!!======\",response)\n      return response;\n    } catch (error) {\n      console.error(error);\n    };\n  }\n    \n  var request; \n  \n  const dispatch = useDispatch();\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <View style={styles.Text1}>\n          <Text style={styles.devenezLeader}>\n            Te voilà de retour parmi nous !\n          </Text>\n        </View>\n        <View style={styles.MainButton1}>\n          <CustomInput useStateFunction={onChangeTextEmail} useStateValue={email} placeholder=\"Email\"/>\n        </View>\n        <View style={styles.MainButton1}>\n        <CustomInput useStateFunction={onChangeTextMdp} useStateValue={mdp} placeholder=\"Mot de passe\"/>\n        </View>\n      </View>\n\n      <View style={styles.SecondaryButton1}>\n      <TextButton content=\"Se connecter\" action={async () => {\n          console.log (\"text\",email);\n          let response = await loginToApi (email, mdp);\n          console.log(\"response === \",response);\n          if (response.email!= null && response.token != null) {\n            console.log(\"resss body === \", response.email);\n            dispatch (setUser(response))\n            //dispatch(userConnected());\n            navigation.push('ConnectService'); \n          }\n        } \n      }/>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#120841\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  image: {\n    justifyContent: 'space-around',\n    flexDirection: 'row'\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    padding: 20,\n  },\n  devenezLeader: {\n    fontFamily: \"Roboto_700Bold\",\n    textAlign: 'center',\n    color: 'white',\n  },\n  devenirLeader: {\n    width: 264,\n    height: 81,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 20,\n    shadowColor: \"rgba(228,66,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    fontFamily: \"CarterOne_400Regular\",\n    color: \"rgba(18,8,65,1)\",\n    textAlign: \"center\",\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    fontFamily: \"Roboto_300Light\",\n    padding: 20,\n   },\n  devenezLeader: {\n   fontFamily: \"Roboto_700Bold\",\n   textAlign: 'center',\n   color: 'white'\n  },\n  SecondaryButton1: {\n    marginBottom: 40,\n  },\n});\n\nexport default ConnectAccount;"]},"metadata":{},"sourceType":"module"}