{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jeanningros/lug/components/ViewCurrentSong.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FullFooter from \"./FullFooter\";\nimport { getCurrentPhoto } from \"./Player\";\nimport { useSelector } from 'react-redux';\n\nvar ViewCurrentSong = function ViewCurrentSong(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var token = useSelector(function (state) {\n    return state.user.spotify_token;\n  });\n  var _route$params = route.params,\n      song = _route$params.song,\n      setSong = _route$params.setSong,\n      songs = _route$params.songs,\n      setSongs = _route$params.setSongs,\n      past = _route$params.past,\n      setPast = _route$params.setPast;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(song.photo),\n      _useState4 = _slicedToArray(_useState3, 2),\n      photo = _useState4[0],\n      setPhoto = _useState4[1];\n\n  if (isLoading) {\n    setLoading(false);\n    getCurrentPhoto(token).then(function (current) {\n      setPhoto(current);\n    });\n  }\n\n  ;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.beg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.backgroundImage,\n    source: {\n      uri: photo\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })), React.createElement(FullFooter, {\n    song: song,\n    setSong: setSong,\n    songs: songs,\n    setSongs: setSongs,\n    past: past,\n    setPast: setPast,\n    setImage: setPhoto,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: \"flex-end\"\n  },\n  beg: {\n    flex: 1,\n    backgroundColor: '#E44200',\n    justifyContent: 'flex-start',\n    width: \"100%\",\n    paddingBottom: 70,\n    alignItems: 'center'\n  },\n  backgroundImage: {\n    width: Dimensions.get('window').height - 165,\n    height: Dimensions.get('window').height - 165,\n    backgroundColor: '#E44200'\n  }\n});\nexport default ViewCurrentSong;","map":{"version":3,"sources":["/home/jeanningros/lug/components/ViewCurrentSong.js"],"names":["React","useState","FullFooter","getCurrentPhoto","useSelector","ViewCurrentSong","route","navigation","token","state","user","spotify_token","params","song","setSong","songs","setSongs","past","setPast","isLoading","setLoading","photo","setPhoto","then","current","styles","container","beg","backgroundImage","uri","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","paddingBottom","Dimensions","get","height"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, Text, View, Button, Image, Dimensions } from 'react-native';\nimport FullFooter from './FullFooter'\nimport {getCurrentPhoto} from './Player'\nimport { useSelector } from 'react-redux';\n\nconst ViewCurrentSong = ({ route, navigation }) => {\n  const token = useSelector((state) => state.user.spotify_token);\n  const {song, setSong, songs, setSongs, past, setPast} = route.params\n  const [isLoading, setLoading] = useState(true);\n  const [photo, setPhoto] = useState(song.photo);\n  if (isLoading) {\n    setLoading(false);\n    getCurrentPhoto(token).then((current) => {\n      setPhoto(current);\n    })\n  };\n  return (\n    <View style={styles.container}>\n      <View style={styles.beg}>\n        <Image\n          style={styles.backgroundImage}\n          source={{uri: photo}}\n        />\n      </View>\n      <FullFooter song={song} setSong={setSong} songs={songs} setSongs={setSongs} past={past} setPast={setPast} setImage={setPhoto}/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: \"flex-end\",\n  },\n  beg: {\n    flex: 1,\n    backgroundColor: '#E44200',\n    justifyContent: 'flex-start',\n    width: \"100%\",\n    paddingBottom: 70,\n    alignItems: 'center',\n  },\n  backgroundImage: {\n    width: Dimensions.get('window').height-165,\n    height: Dimensions.get('window').height-165,\n    backgroundColor: '#E44200',\n  },\n});\n\nexport default ViewCurrentSong;"]},"metadata":{},"sourceType":"module"}