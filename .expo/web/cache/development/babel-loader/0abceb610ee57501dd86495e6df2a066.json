{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jeanningros/lug/components/SettingPage.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, Component } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TextButton from \"./common/TextButton.js\";\nimport CustomInput from \"./common/CustomInput.js\";\n\nvar SettingPage = function SettingPage(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  function setSetting(_email, _new_email, _new_email_confirm, _mdp, _new_mdp, _new_mdp_confirm, _new_pseudo) {\n    return _regeneratorRuntime.async(function setSetting$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"--- getTrack() ---\");\n            fetch('http://shangrila.pythonanywhere.com/settings', {\n              method: 'POST',\n              body: {\n                email: _email,\n                new_email: _new_email,\n                new_email_confirm: _new_email_confirm,\n                mdp: _mdp,\n                new_mdp: _new_mdp,\n                new_mdp_confirm: _new_mdp_confirm,\n                new_pseudo: _new_pseudo\n              }\n            }).then(function (response) {\n              return response.json();\n            }).then(function (response) {\n              console.log(\"Server said: \" + response);\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      _email = _useState2[0],\n      onChangeEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      _mdp = _useState4[0],\n      onChangeMdp = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      _pseudo = _useState6[0],\n      onChangePseudo = _useState6[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.topTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Reglages et informations\"), React.createElement(View, {\n    style: styles.userNameAll,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.userNameTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Ton pseudo\"), React.createElement(View, {\n    style: styles.userNamePerso,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, React.createElement(CustomInput, {\n    useStateFunction: onChangePseudo,\n    useStateValue: _pseudo,\n    placeholder: \"Bobobo bobo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.userNameModify,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Modifier ton pseudo\")), React.createElement(View, {\n    style: styles.userNameAll,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.userNameTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Ton adresse email\", React.createElement(CustomInput, {\n    useStateFunction: onChangeEmail,\n    useStateValue: _email,\n    placeholder: \"cocoDu74@caramail.com\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 22\n    }\n  })), React.createElement(View, {\n    style: styles.userNamePerso,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.userNameModify,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Modifier ton mail\")), React.createElement(View, {\n    style: styles.userNameAll,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.userNameTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Ton mot de passe \"), React.createElement(View, {\n    style: styles.userNamePerso,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, React.createElement(CustomInput, {\n    useStateFunction: onChangeMdp,\n    useStateValue: _mdp,\n    placeholder: \"*********\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.userNameModify,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Modifier ton mdp \")), React.createElement(TextButton, {\n    content: \"Valider\",\n    action: function action() {\n      setSetting(_email, _mdp, _pseudo);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    backgroundColor: \"#120841\",\n    color: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flex: 1,\n    flexDirection: \"column\",\n    fontSize: 25,\n    padding: 20\n  },\n  topTitle: {\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    fontWeight: \"bold\",\n    fontSize: 40,\n    fontFamily: \"Roboto_700Bold\",\n    marginBottom: 20\n  },\n  userNameAll: {\n    marginLeft: \"15%\",\n    marginRight: \"15%\",\n    minWidth: \"60%\",\n    minHeight: \"20%\",\n    marginBottom: 5,\n    marginTop: 15,\n    borderBottomColor: 'white',\n    borderBottomWidth: 1\n  },\n  userNameTitle: {\n    fontWeight: \"bold\",\n    justifyContent: \"flex-start\",\n    fontFamily: \"Roboto_700Bold\",\n    marginBottom: 5\n  },\n  userNamePerso: {\n    paddingLeft: \"10%\",\n    fontFamily: \"Roboto_700Bold\",\n    fontSize: 16\n  },\n  userNameModify: {\n    fontSize: 10,\n    color: \"grey\",\n    paddingLeft: \"40%\",\n    fontFamily: \"Roboto_300Light\",\n    marginTop: 5\n  }\n});\nexport default SettingPage;","map":{"version":3,"sources":["/home/jeanningros/lug/components/SettingPage.js"],"names":["React","useState","Component","TextButton","CustomInput","SettingPage","route","navigation","setSetting","_email","_new_email","_new_email_confirm","_mdp","_new_mdp","_new_mdp_confirm","_new_pseudo","console","log","fetch","method","body","email","new_email","new_email_confirm","mdp","new_mdp","new_mdp_confirm","new_pseudo","then","response","json","onChangeEmail","onChangeMdp","_pseudo","onChangePseudo","styles","container","topTitle","userNameAll","userNameTitle","userNamePerso","userNameModify","StyleSheet","create","flexDirection","backgroundColor","color","justifyContent","alignItems","flex","fontSize","padding","textAlign","textAlignVertical","fontWeight","fontFamily","marginBottom","marginLeft","marginRight","minWidth","minHeight","marginTop","borderBottomColor","borderBottomWidth","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState, Component } from \"react\";\nimport {\n  Image,\n  StyleSheet,\n  Text,\n  View,\n  Button,\n  TouchableOpacity,\n  TextInput,\n} from \"react-native\";\n\n\n\nimport TextButton from \"./common/TextButton.js\";\nimport CustomInput from \"./common/CustomInput.js\";\n\n\nconst SettingPage = ({ route, navigation }) => {\n    async function setSetting(_email, _new_email, _new_email_confirm, _mdp, _new_mdp, _new_mdp_confirm, _new_pseudo ) {\n        console.log(\"--- getTrack() ---\");\n        fetch( 'http://shangrila.pythonanywhere.com/settings',  {\n            method: 'POST',\n            body: { \n                email: _email,\n                new_email: _new_email,\n                new_email_confirm: _new_email_confirm,\n                mdp: _mdp,\n                new_mdp: _new_mdp,\n                new_mdp_confirm: _new_mdp_confirm,\n                new_pseudo: _new_pseudo,\n            }\n        })\n\n       \n        .then(response => response.json())\n        .then((response) => {\n            console.log(\"Server said: \" + response);\n        });\n      }\n\n      const [_email, onChangeEmail] = useState('');\n      const [_mdp, onChangeMdp] = useState('');\n      const [_pseudo, onChangePseudo] = useState('');\n  \n  \n  \n\n\n        return (\n        <View style={styles.container}> \n\n        \n            <View style={styles.topTitle}> \n                Reglages et informations\n            </View>\n                <View style={styles.userNameAll}>\n                    <View style={styles.userNameTitle}>\n                        Ton pseudo\n                    </View>\n                    <View style={styles.userNamePerso}>\n                        <CustomInput useStateFunction={onChangePseudo} useStateValue={_pseudo} placeholder=\"Bobobo bobo\"/>\n\n                    </View>\n                    <View style={styles.userNameModify} >\n                        Modifier ton pseudo\n                    </View>\n                </View>\n\n\n                <View style={styles.userNameAll}>\n                    <View style={styles.userNameTitle}>\n                     Ton adresse email\n                     <CustomInput useStateFunction ={onChangeEmail} useStateValue={_email} placeholder=\"cocoDu74@caramail.com\" />\n                    </View>\n                    {/* <CustomInput useStateFunction ={onChangeEmail} useStateValue={new_email} placeholder=\"\">\n                 \n                    <CustomInput useStateFunction ={onChangeEmail} useStateValue={new_email} placeholder=\"\">\n                    <CustomInput useStateFunction ={onChangeEmail} useStateValue={new_email} placeholder=\"\">\n                    <CustomInput useStateFunction ={onChangeEmail} useStateValue={new_email} placeholder=\"\">\n                    */}\n                    <View style={styles.userNamePerso}>\n                        {/* cocoDu74@caramail.com */}\n                    </View>\n                    <View style={styles.userNameModify} >\n                        Modifier ton mail\n                    </View>\n                    {/* <CustomInput useStateFunction={onChangeTextPseudo} useStateValue={_new_email} placeholder=\"Email\"/> */}\n                </View>\n\n                <View style={styles.userNameAll}>\n                    <View style={styles.userNameTitle}>\n                        Ton mot de passe </View>\n\n                    <View style={styles.userNamePerso}>\n                    <CustomInput useStateFunction={onChangeMdp} useStateValue={_mdp} placeholder=\"*********\"/>\n                    </View>\n                    <View style={styles.userNameModify} >\n                        Modifier ton mdp </View>\n                </View>\n                \n                <TextButton content=\"Valider\" action={() => { \n                setSetting(_email, _mdp, _pseudo )}} />\n            {/* Textbutton avec toutes les valeurs possible <TextButton content=\"Valider les modifications\" action={() => { \n                setSetting(_email, _new_email, _new_email_confirm, _mdp, _new_mdp, _new_mdp_confirm, _pseudo _new_pseudo )}} /> */}\n\n        </View>\n        \n            );\n        \n    };\n\n\n    const styles = StyleSheet.create({\n        container: {\n          flexDirection: \"column\",\n          backgroundColor: \"#120841\",\n          color: \"white\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flex: 1,\n          flexDirection: \"column\",\n          fontSize: 25,\n          padding: 20,\n\n        },\n\n        topTitle: {\n            textAlign: \"center\",\n            textAlignVertical: \"center\",\n            fontWeight: \"bold\",\n            fontSize: 40,\n            fontFamily: \"Roboto_700Bold\",\n            marginBottom: 20,\n          },\n\n        userNameAll: {\n           \n            marginLeft: \"15%\",\n            marginRight: \"15%\",\n            minWidth: \"60%\",\n            minHeight: \"20%\",\n            marginBottom: 5,\n            marginTop: 15,\n            borderBottomColor: 'white',\n            borderBottomWidth: 1,\n        },\n\n        userNameTitle: {\n            fontWeight: \"bold\",\n            justifyContent: \"flex-start\",\n            // flex: 2,\n            fontFamily: \"Roboto_700Bold\",\n            marginBottom: 5,\n\n        },\n\n        userNamePerso: {\n            // flex: 3,\n            paddingLeft: \"10%\",\n       \n            fontFamily: \"Roboto_700Bold\",\n            fontSize:16,\n          \n        },\n\n        userNameModify: {\n            fontSize: 10,\n            color: \"grey\",\n            // fontWeight: \"light\",\n            // textAlign: 'right',\n            paddingLeft: \"40%\",\n            fontFamily: \"Roboto_300Light\",\n            marginTop: 5,\n        }\n    });      \n\n\nexport default SettingPage\n"]},"metadata":{},"sourceType":"module"}