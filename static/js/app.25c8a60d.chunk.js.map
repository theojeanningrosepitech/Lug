{"version":3,"sources":["assets/Logo_Lug.png","assets/playlistSoiree.png","redux/user.js","redux/store.js","components/common/TextButton.js","components/common/CustomInput.js","components/SettingPage.js","components/common/Header.js","components/UserProfile.js","components/common/IconButton.js","components/common/ImageButton.js","components/Hub.js","components/Test.js","components/CreateUser.js","components/ConnectService.js","components/JoinRoom.js","components/JoinRoomCode.js","components/CreateRoom.js","components/InitialMood.js","components/QRCode.js","components/common/TransparentIconButton.js","components/common/OutlineIconButton.js","components/Music.js","components/common/Footer.js","components/Player.js","components/Room.js","components/PlaylistManip.js","components/FullFooter.js","components/ViewCurrentSong.js","components/FirstTime.js","components/CreateAccount.js","components/ConnectAccount.js","components/AnalyseMood.js","App.js","assets/basicWhiteGirl.jpg","assets/spotifyBlanc.png","assets/spotify.jpg","assets/deezer.jpg","assets/déchirure 2.png","assets/déchirure 3.png","assets/déchirure 4.png","assets/déchirure 5.png","assets/déchirure 8.png","assets/déchirure 1.png","assets/headphone.png"],"names":["module","exports","userSlice","createSlice","name","initialState","connected","user","token","email","id","pseudo","spotify_token","party","code","reducers","userConnected","state","action","setSpotifyToken","payload","setCurrentPartyId","idParty","setCurrentPartyCode","codeParty","setUser","actions","configureStore","reducer","userReducer","styles","StyleSheet","create","container","flexDirection","justifyContent","buttonContainer","backgroundColor","width","height","alignItems","borderRadius","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","textButton","color","fontSize","fontFamily","TextButton","content","View","style","TouchableOpacity","onPress","Text","flexWrap","textAlign","paddingLeft","textAlignVertical","marginBottom","borderWidth","borderColor","CustomInput","useStateFunction","UseStateValue","placeholder","useState","isActive","setActive","customText","SafeAreaView","TextInput","onFocus","onBlur","onChangeText","value","placeholderTextColor","flex","padding","topTitle","fontWeight","userNameAll","marginLeft","marginRight","minWidth","minHeight","marginTop","borderBottomColor","borderBottomWidth","userNameTitle","userNamePerso","userNameModify","SettingPage","route","navigation","_email","onChangeEmail","_mdp","onChangeMdp","_pseudo","onChangePseudo","useStateValue","_new_email","_new_email_confirm","_new_mdp","_new_mdp_confirm","_new_pseudo","a","async","console","log","fetch","method","body","new_email","new_email_confirm","mdp","new_mdp","new_mdp_confirm","new_pseudo","then","response","json","setSetting","header","logoHeader","Header","Image","source","require","resizeMode","profileTop","topTextImage","alignContent","topDescription","paddingTop","topName","paddingBottom","playlistAll","onePlaylist","imageInPlaylist","borderTopLeftRadius","borderBottomLeftRadius","textInPlaylist","borderTopRightRadius","textInPTitle","textInPDate","paddingRight","textinPDescription","imagerie","down","tinyLogo","UserProfile","imageStyle","image_imageStyle","textInPDescription","image","position","alignIt","imageLogo","Text1","devenezLeader","devenirLeader","SecondaryButton1","Hub","MainButton1","push","WebBrowser","discovery","authorizationEndpoint","tokenEndpoint","spotLogo","mediumLogo","connectation","ConnectService","useSelector","dispatch","useDispatch","useAuthRequest","responseType","ResponseType","Token","clientId","scopes","usePKCE","redirectUri","makeRedirectUri","native","Linking","request","promptAsync","React","useEffect","type","url","codeChallenge","access_token","params","JSON","stringify","rejoindreLaSalle","input","bas","icon2","icon","icon2Row","scanUnQrCode","scanUnQrCode1","ou2","JoinRoom","hasPermission","setHasPermission","scanned","setScanned","BarCodeScanner","requestPermissionsAsync","status","onBarCodeScanned","undefined","data","alert","absoluteFillObject","Button","title","JoinRoomCode","onChangeTextCode","loginToRoom","_token","_code","party_id","catch","error","flexing","intitule","intitule2","head","head2","mainButton","someText","someInput","CreateRoom","textRoom","getCode","_party_id","setRoomToAp","_creator_id","_name","responseCode","placeholderimage","margin","imageline","initialMood","QRCode","TransparentIconButton","children","String","slice","clone","cloneElement","size","CharButton","smallButtonContainer","ActiveMusicTitle","numberOfLines","ellipsizeMode","ActiveMusicArtist","artist","centerPiece","progressBar","Footer","Alert","faDice","playSong","songId","headers","Authorization","parse","getStatus","is_playing","currentSong","liked","photo","upNextSongs","backgroundImage","Dimensions","get","roomName","roomTitleLeft","alignUsers","users","addUsers","usersNb","roomTitleRight","roomTitleCenter","currentSongImage","activeRow","feeling","activeInfo","advancement","upNext","list","upNextClosed","closedFull","upNextImageContainer","upNextImage","upNextInfoContainer","like","nbLikes","seeMore","upNextSong","voteTitle","voteImages","voteTitles","noVoteTitles","voteMusicTitle","voteImage","noVoteImage","moodChange","moodChangeRow","moodChangeItem","Room","open","setOpen","songs","setSongs","song","setSong","past","setPast","isLoading","setLoading","item","artists","album","images","getCurrentSong","res","useLayoutEffect","setOptions","headerLeft","popToTop","toggleLikeSongs","dup","index","findIndex","sort","b","suggestions","filter","Math","random","ImageBackground","blurRadius","uri","ScrollView","FlatList","renderItem","faHeart","keyExtractor","length","nextSong","copySong","setCopySong","copySongs","setCopySongs","copyPast","setCopyPast","addSongToPast","shift","removeFirstNextSong","previousSong","concat","addSongToNext","pop","removeLastPastSong","half","half2","buttonContainer2","buttonContainer3","buttonContainer4","music","bar","progressBar1","progressBar2","ball","times","t1","t2","time1","time2","FullFooter","setImage","active","Fontisto","pause","resume","beg","ViewCurrentSong","setPhoto","getCurrentPhoto","current","FirstTime","CreateAccount","onChangeTextEmail","onChangeTextMdp","registerToApi","user_id","ConnectAccount","loginToApi","AnalyseMood","Stack","createStackNavigator","NavDepo","NavigationContainer","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","component","options","headerTitle","props","InitialMood","App","useFonts","Roboto_700Bold","Roboto_300Light","CarterOne_400Regular","store"],"mappings":"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","file":"static/js/app.25c8a60d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo_Lug.cfa9fc81.png\";","module.exports = __webpack_public_path__ + \"static/media/playlistSoiree.1e60d8ba.png\";","import { createSlice } from '@reduxjs/toolkit'\n\nexport const userSlice = createSlice({\n  name: 'userData',\n  initialState: {\n    connected: false,\n    user: {\n      token: \"\", \n      email: \"\",\n      id: \"\",\n      pseudo: \"\",\n    },\n    spotify_token: \"\",\n    party: {\n      id: \"\",\n      code: \"\"\n    }\n  },\n  reducers: {\n    userConnected: (state, action) => {\n      state.connected = true;\n    },\n    setSpotifyToken: (state, action) => {\n      state.spotify_token = action.payload;\n    },\n    setCurrentPartyId: (state, action) => {\n      state.party.id = action.payload.idParty;\n    },\n    setCurrentPartyCode: (state, action) => {\n      state.party.code = action.payload.codeParty;\n    },\n    setUser: (state, action) => {\n      state.user.token = action.payload.token;\n      state.user.email = action.payload.email;\n      state.user.id = action.payload.id;\n      state.user.pseudo = action.payload.pseudo; \n    },\n  }\n})\n\nexport const { userConnected, setSpotifyToken, setUser, setCurrentPartyId, setCurrentPartyCode } = userSlice.actions\n\nexport default userSlice.reducer","import { configureStore } from '@reduxjs/toolkit'\nimport userReducer from './user';\n\nexport default configureStore({\n  reducer: {\n    user: userReducer\n  }\n})\n","// Utilisation:\n// <TextButton content=\"text\" action={function}/>\n\nimport React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nconst TextButton = ({ content, action }) => {\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity\n        onPress={action}\n        style={styles.buttonContainer}>\n        <Text style={styles.textButton}>{content}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n  \nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  },\n  buttonContainer: {\n    backgroundColor: 'rgba(255,255,255,1)',\n    width: \"70%\",\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n    shadowColor: \"rgba(228,66,0,1)\",\n    shadowOffset: { width: 3, height: 3 },\n    elevation: 30,\n    shadowOpacity: 1,\n    shadowRadius: 10\n  },\n  textButton: {\n    color:'#120841',\n    fontSize: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontFamily: \"CarterOne_400Regular\",\n  }\n});\n\nexport default TextButton;\n\n/* MainButton: {\n  width: 264,\n  height: 81,\n  backgroundColor: \"rgba(255,255,255,1)\",\n  borderRadius: 20,\n  shadowColor: \"rgba(228,66,0,1)\",\n  shadowOffset: { width: 3, height: 3 },\n  elevation: 30,\n  shadowOpacity: 1,\n  shadowRadius: 10\n}, */","// Utilisation:\n// <CustomInput onChangeText=useStateFunction value=UseStateValue placeholder=\"text\"/>\n\nimport React, {useState} from 'react';\nimport {StyleSheet, TextInput, View, SafeAreaView } from 'react-native';\n\n\n\nconst CustomInput = ({ useStateFunction, UseStateValue, placeholder }) => {\n  const [isActive, setActive] = useState(false)\n  const customStyle = isActive ? styles.customText : {};\n\n  return (\n    <SafeAreaView >\n      <View style={styles.container}>\n      {/* const { isActive } = this.state;\n      const customStyle = isActive ? styles.customText : {}; */}\n\n<TextInput\n          onFocus={() => setActive(true)}\n          onBlur={() => setActive(false)}\n          style={styles.buttonContainer}\n          onChangeText={useStateFunction}\n          value={UseStateValue}\n          placeholder={placeholder}\n          placeholderTextColor={'#D0D0D0'}\n        />\n      </View>\n    </SafeAreaView>\n  );\n}\n  \nconst styles = StyleSheet.create({\n  container: {\n\n    flexDirection: 'row',\n    flexWrap:  'wrap',\n    justifyContent:  'center',\n    alignItems: \"center\",\n  },\n\n\n  buttonContainer: {\n    backgroundColor: '#120841',\n    width: \"70%\",\n    height: 45,\n    textAlign: 'left',\n    borderRadius: 30,\n    paddingLeft: 25,\n    color: 'white',\n    // fontFamily: \"Robotto\",\n    fontSize: 16,\n    shadowColor: 'black',\n    shadowOffset: {width: 1, height: 3},\n    shadowOpacity: 0.9,\n    shadowRadius: 5,\n   \n    textAlignVertical: \"bottom\",\n    justifyContent:  'center',\n    alignItems:  'center',\n    marginBottom:  15,\n\n    borderWidth:  1.4,\n    borderColor: \"white\",\n\n  },\n});\n\nexport default CustomInput;","import React, { useState, Component } from \"react\";\nimport {\n  Image,\n  StyleSheet,\n  Text,\n  View,\n  Button,\n  TouchableOpacity,\n  TextInput,\n} from \"react-native\";\n\n\n\nimport TextButton from \"./common/TextButton.js\";\nimport CustomInput from \"./common/CustomInput.js\";\n\n\nconst SettingPage = ({ route, navigation }) => {\n    async function setSetting(_email, _new_email, _new_email_confirm, _mdp, _new_mdp, _new_mdp_confirm, _new_pseudo ) {\n        console.log(\"--- getTrack() ---\");\n        fetch( 'http://shangrila.pythonanywhere.com/settings',  {\n            method: 'POST',\n            body: { \n                email: _email,\n                new_email: _new_email,\n                new_email_confirm: _new_email_confirm,\n                mdp: _mdp,\n                new_mdp: _new_mdp,\n                new_mdp_confirm: _new_mdp_confirm,\n                new_pseudo: _new_pseudo,\n            }\n        })\n\n       \n        .then(response => response.json())\n        .then((response) => {\n            console.log(\"Server said: \" + response);\n        });\n      }\n\n      const [_email, onChangeEmail] = useState('');\n      const [_mdp, onChangeMdp] = useState('');\n      const [_pseudo, onChangePseudo] = useState('');\n  \n  \n  \n\n\n        return (\n        <View style={styles.container}> \n\n        \n            <View style={styles.topTitle}> \n                Reglages et informations\n            </View>\n                <View style={styles.userNameAll}>\n                    <View style={styles.userNameTitle}>\n                        Ton pseudo\n                    </View>\n                    <View style={styles.userNamePerso}>\n                        <CustomInput useStateFunction={onChangePseudo} useStateValue={_pseudo} placeholder=\"Bobobo bobo\"/>\n\n                    </View>\n                    <View style={styles.userNameModify} >\n                        Modifier ton pseudo\n                    </View>\n                </View>\n\n\n                <View style={styles.userNameAll}>\n                    <View style={styles.userNameTitle}>\n                     Ton adresse email\n                     <CustomInput useStateFunction ={onChangeEmail} useStateValue={_email} placeholder=\"cocoDu74@caramail.com\" />\n                    </View>\n                    {/* <CustomInput useStateFunction ={onChangeEmail} useStateValue={new_email} placeholder=\"\">\n                 \n                    <CustomInput useStateFunction ={onChangeEmail} useStateValue={new_email} placeholder=\"\">\n                    <CustomInput useStateFunction ={onChangeEmail} useStateValue={new_email} placeholder=\"\">\n                    <CustomInput useStateFunction ={onChangeEmail} useStateValue={new_email} placeholder=\"\">\n                    */}\n                    <View style={styles.userNamePerso}>\n                        {/* cocoDu74@caramail.com */}\n                    </View>\n                    <View style={styles.userNameModify} >\n                        Modifier ton mail\n                    </View>\n                    {/* <CustomInput useStateFunction={onChangeTextPseudo} useStateValue={_new_email} placeholder=\"Email\"/> */}\n                </View>\n\n                <View style={styles.userNameAll}>\n                    <View style={styles.userNameTitle}>\n                        Ton mot de passe </View>\n\n                    <View style={styles.userNamePerso}>\n                    <CustomInput useStateFunction={onChangeMdp} useStateValue={_mdp} placeholder=\"*********\"/>\n                    </View>\n                    <View style={styles.userNameModify} >\n                        Modifier ton mdp </View>\n                </View>\n                \n                <TextButton content=\"Valider\" action={() => { \n                setSetting(_email, _mdp, _pseudo )}} />\n            {/* Textbutton avec toutes les valeurs possible <TextButton content=\"Valider les modifications\" action={() => { \n                setSetting(_email, _new_email, _new_email_confirm, _mdp, _new_mdp, _new_mdp_confirm, _pseudo _new_pseudo )}} /> */}\n\n        </View>\n        \n            );\n        \n    };\n\n\n    const styles = StyleSheet.create({\n        container: {\n          flexDirection: \"column\",\n          backgroundColor: \"#120841\",\n          color: \"white\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flex: 1,\n          flexDirection: \"column\",\n          fontSize: 25,\n          padding: 20,\n\n        },\n\n        topTitle: {\n            textAlign: \"center\",\n            textAlignVertical: \"center\",\n            fontWeight: \"bold\",\n            fontSize: 40,\n            fontFamily: \"Roboto_700Bold\",\n            marginBottom: 20,\n          },\n\n        userNameAll: {\n           \n            marginLeft: \"15%\",\n            marginRight: \"15%\",\n            minWidth: \"60%\",\n            minHeight: \"20%\",\n            marginBottom: 5,\n            marginTop: 15,\n            borderBottomColor: 'white',\n            borderBottomWidth: 1,\n        },\n\n        userNameTitle: {\n            fontWeight: \"bold\",\n            justifyContent: \"flex-start\",\n            // flex: 2,\n            fontFamily: \"Roboto_700Bold\",\n            marginBottom: 5,\n\n        },\n\n        userNamePerso: {\n            // flex: 3,\n            paddingLeft: \"10%\",\n       \n            fontFamily: \"Roboto_700Bold\",\n            fontSize:16,\n          \n        },\n\n        userNameModify: {\n            fontSize: 10,\n            color: \"grey\",\n            // fontWeight: \"light\",\n            // textAlign: 'right',\n            paddingLeft: \"40%\",\n            fontFamily: \"Roboto_300Light\",\n            marginTop: 5,\n        }\n    });      \n\n\nexport default SettingPage\n","// Utilisation:\n//>\nimport React, { Component } from \"react\";\nimport { StyleSheet, Text, View, Image } from \"react-native\";\nimport MaterialCommunityIconsIcon from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport MaterialIconsIcon from \"react-native-vector-icons/MaterialIcons\";\n\nconst Header = () => {\n  return (\n    <View style={styles.header}>\n\n        {/* <View style={styles.return}>\n          <MaterialCommunityIconsIcon\n            name=\"account\"\n            style={styles.icon}\n          ></MaterialCommunityIconsIcon>\n        </View> */}\n\n        <View>\n            <Image\n                source={require(\"../../assets/Logo_Lug.png\")}\n                resizeMode=\"contain\"\n                style={styles.logoHeader}\n            ></Image>\n        </View>\n\n        {/* <View style={styles.account}>\n          <MaterialIconsIcon\n            name=\"keyboard-return\"\n            style={styles.icon2}\n          ></MaterialIconsIcon>\n        </View> */}\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    // flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#120841',\n    flex: 1,\n  },\n\n  logoHeader: {\n      width: 60,\n      height: 60,\n  },\n\n});\n\nexport default Header;","import React, { useState } from \"react\";\nimport {\n  Image,\n  StyleSheet,\n  Text,\n  View,\n  Button,\n  TouchableOpacity,\n  TextInput,\n} from \"react-native\";\n\nimport TextButton from \"./common/TextButton\";\nimport Header from \"./common/Header\";\n\nconst UserProfile = ({ route, navigation }) => {\n  return (\n    <View style={styles.container}>\n      <View style={styles.profileTop}>\n        <View style={styles.topTitle}>Profil de Karen</View>\n\n        <View style={styles.topTextImage}>\n          <Image\n            source={require(\"../assets/basicWhiteGirl.jpg\")}\n            resizeMode=\"contain\"\n            style={styles.tinyLogo}\n            imageStyle={styles.image_imageStyle}\n          />\n\n          <View style={styles.topName}>\n            \n\n\n            \n           Karen Wilson </View>\n\n          <View style={styles.topDescription}>\n            \n\n\n            \n            Modifier mes infos </View>\n\n          {/* <TextButton\n      content=\"join the room\" \n      action={() => navigation.push(\"Room\")}\n      /> */}\n        </View>\n      </View>\n\n      <View style={styles.playlistAll}>\n        <View style={styles.topName}>  \n          Playlists des soirées précédentes  \n        </View>\n        <View style={styles.onePlaylist}> \n\n          <View style={styles.imageInPlaylist}>\n          <Image \n            source={require(\"../assets/playlistSoiree.png\")}\n            resizeMode=\"contain\"\n            style={styles.tinyLogo}\n            imageStyle={styles.image_imageStyle}\n          />\n          </View>\n    \n            <View style={styles.textInPlaylist}>\n\n              <View style={styles.textInPTitle}> \n                Soirée chez Marc\n              </View>\n              <View style={styles.textInPDate}> \n                25 mars 2021\n              </View>\n\n            <View style={styles.textInPDescription}> \n            10 participants\n            </View>\n       \n            </View>\n          \n        </View>\n\n        <View style={styles.onePlaylist}> \n\n<View style={styles.imageInPlaylist}>\n<Image\n  source={require(\"../assets/playlistSoiree.png\")}\n  resizeMode=\"contain\"\n  style={styles.tinyLogo}\n  imageStyle={styles.image_imageStyle}\n/>\n</View>\n\n  <View style={styles.textInPlaylist}>\n\n    <View style={styles.textInPTitle}> \n      Soirée chez Jean\n    </View>\n    <View style={styles.textInPDate}> \n      10 fevrier 2021\n    </View>\n\n  <View style={styles.textInPDescription}> \n  6 participants\n  </View>\n\n  </View>\n\n</View>\n      \n\n    \n      </View>\n      <Text> \"blabla\"</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    backgroundColor: \"#120841\",\n    color: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flex: 1,\n    flexDirection: \"column\",\n    fontSize: 25,\n    padding: 20,\n  },\n\n  profileTop: {\n    // backgroundColor: \"#100891\",\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n    fontSize: 25,\n    fontWeight: \"bold\",\n    color: \"white\",\n    backgroundColor: \"red\",\n    height: \"100\",\n    marginBottom: 20,\n    fontFamily: \"Roboto_700Bold\",\n    flex: 2,\n    fontSize: 50,\n    minWidth: \"80%\",\n  },\n  topTitle: {\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    fontWeight: \"bold\",\n    fontSize: 30,\n    minWidth: \"80%\",\n  },\n\n  topTextImage: {\n    alignContent: \"center\",\n    padding: 20,\n\n    flexDirection: \"column\",\n    flex: 2,\n    // minHeight: \"20%\",\n  },\n\n  topDescription: {\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    color: \"grey\",\n    fontSize: 8,\n    paddingTop: 5,\n  },\n\n  topName: {\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    color: \"white\",\n    fontSize: 18,\n    paddingTop: 5,\n    fontWeight: \"bold\",\n    paddingBottom: 5,\n  },\n\n\n  playlistAll: {\n    color: \"white\",\n\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n    fontSize: 15,\n    fontFamily: \"Roboto_300Light\",\n    flex: 2,\n    minWidth: \"80%\",\n    minHeight: 430,\n    // minHeight: \"40%\",\n    //fontStyle: \"bold\",\n    padding: 20,\n  },\n\n\n\n\n  onePlaylist: {\n    flexDirection: \"row\",\n    minWidth: 200,\n    minHeight: 100,\n    flex: 1,\n   backgroundColor: \"#122841\",\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#fff',\n    \n    // resizeMode: 'contain',\n\n    // flexWrap: 'wrap',\n\n    marginBottom: 20,\n  },\n\n  imageInPlaylist: {\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    flex: 2,\n    // backgroundColor: \"red\",\n    // flexBasis: 30,\n    padding: 5,\n    alignContent: \"center\",\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n\n  },\n\n  textInPlaylist:\n  {\n\n    // backgroundColor: \"purple\",\n    flexDirection: \"column\",\n    // flexbasis: 70,\n    flex: 6,\n    borderTopRightRadius: 10,\n   // borderBotomRighRadius: 10,\n  },\n\n  textInPTitle: {\n\n    fontWeight: \"bold\",\n    fontSize: 15,\n    textAlign: \"center\",\n\n  },\n\n  textInPDate: {\n    color: \"grey\",\n    fontSize: 9,\n    textAlign: \"right\",\n    paddingRight: 20,\n  },\n\n  textinPDescription:{\n    //fontWeight: \"light\",\n    fontSize: 10,\n    textAlign: \"center\",\n    \n  },\n\n  imagerie: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginBottom: 60,\n  },\n\n  down: {\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n    marginBottom: 20,\n  },\n\n  tinyLogo: {\n    minWidth: 150,\n    minHeight: 150,\n    borderRadius: 50,\n    // resizeMode: 'contain',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n\nexport default UserProfile;\n","// Utilisation:\n// <IconButton action={function}/>\n//   <Icon/>\n// </IconButton>\n\nimport React from 'react';\nimport { StyleSheet, View, TouchableOpacity } from 'react-native';\n\n\nconst IconButton = ({ children, action }) => {\n  if (String(children.type).slice(0,12) !== \"function Svg\") {\n    return (\n      <TouchableOpacity\n        onPress={action}\n        style={styles.buttonContainer}>\n      </TouchableOpacity>\n    );\n  } else {\n    const clone = React.cloneElement(children, {height: 100, width: 100, color:'black'});\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          onPress={action}\n          style={styles.buttonContainer}>\n          {clone}\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n  \nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row'\n  },\n  buttonContainer: {\n    backgroundColor: '#9C9C9C',\n    width: 125,\n    height: 125,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 15\n    \n    \n  },\n});\n\nexport default IconButton;\n\n","// Utilisation:\n// <ImageButton action={function}/>\n//   <Image style={{}} source={require('../assets/image.jpg')}/>\n// </IconButton>\n\nimport React from 'react';\nimport { StyleSheet, View, TouchableOpacity } from 'react-native';\n\nconst ImageButton = ({ children, action }) => {\n  if (!children || String(children.type.displayName) !== \"Image\") {\n    return (\n      <TouchableOpacity\n        onPress={action}\n        style={styles.buttonContainer}>\n      </TouchableOpacity>\n    );\n  } else {\n    const clone = React.cloneElement(children, styles.buttonContainer);\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          onPress={action}\n          style={styles.buttonContainer}>\n          {clone}\n        </TouchableOpacity>\n      </View>\n    );      \n  }\n}\n  \nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row'\n  },\n  buttonContainer: {\n    backgroundColor: '#9C9C9C',\n    width: 125,\n    height: 125,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 25,\n    borderColor: 'white',\n  },\n  image: {\n    height: 150,\n    width: 150,\n    position: 'absolute',\n  }\n});\n\nexport default ImageButton;","// import React from 'react';\n// import { StyleSheet, Text, View, Button, Image, TouchableOpacity } from 'react-native';\n\n// const Hub = ({ navigation }) => {\n//   return (\n//     <View style={styles.alignIt}>\n      \n//       <Image\n//       style={styles.containImage}\n//         source={require('../assets/MainLogo.png')}\n//         />\n//         <View style={styles.container}>\n//         <Button\n//           title='DEVENIR LEADER'\n//           onPress={() => navigation.push('CreateRoom')}\n//         />\n//         <Text>Déja Leader ? </Text>\n//         <Button style={styles.MainButton}\n//           title='Se connecter'\n//           onPress={() => navigation.push('JoinRoom')}\n//         />\n//       </View>\n\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 5,\n//     backgroundColor: '#461C86',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontFamily: \"Canter Bold\"\n//   },\n//   alignIt: {\n//     backgroundColor: '#461C86',\n//     flex: 3,\n//     fontFamily: \"Canter Bold\"\n//   },\n//   containImage: {\n//     flex: 1, height: undefined, width: undefined, resizeMode: 'contain' \n//   },\n//   MainButton: {\n//     flex: 1,\n//     fontFamily: \"Canter Bold\"\n//   }\n\n// });\n\n// export default Hub;\n\n\nimport React, { Component } from \"react\";\nimport { StyleSheet, View, Text, Image, ImageBackground, Button } from \"react-native\";\nimport TextButton from \"./common/TextButton\";\nimport Header from \"./common/Header\";\n\nconst Hub = ({ navigation }) => {\n   return (\n    <View style={styles.container}>\n      <View>\n        <View style={styles.image} >\n          <Image\n            source={require(\"../assets/Logo_Lug.png\")}\n            resizeMode=\"contain\"\n            style={styles.imageLogo}\n          />\n        </View>\n        <View style={styles.Text1}>\n          <Text style={styles.devenezLeader}>\n            Devenez Leader pour gérer votre soirée\n          </Text>\n        </View>\n        <View style={styles.MainButton1}>\n          <TextButton content=\"Créer une salle\" action={() => navigation.push('CreateRoom')}/>\n        </View>\n      </View>\n      <View style={styles.SecondaryButton1}>\n        <TextButton content=\"Rejoindre une salle\" action={() => navigation.push('JoinRoomCode')}/>\n        </View>\n      \n\n\n      <TextButton\n    content=\"Test page Setting\" \n    action={() => navigation.push(\"SettingPage\")}\n    />\n\n<TextButton\n    content=\"Test Page Profil\" \n    action={() => navigation.push(\"UserProfile\")}\n    />\n    </View>\n  );\n   }\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#120841\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  image: {\n    justifyContent: 'space-around',\n    flexDirection: 'row'\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    padding: 20,\n  },\n  devenezLeader: {\n    fontFamily: \"Roboto_700Bold\",\n    textAlign: 'center',\n    color: 'white',\n  },\n  devenirLeader: {\n    width: 264,\n    height: 81,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 20,\n    shadowColor: \"rgba(228,66,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    fontFamily: \"CarterOne_400Regular\",\n    color: \"rgba(18,8,65,1)\",\n    textAlign: \"center\",\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    fontFamily: \"Roboto_300Light\",\n    padding: 20,\n   },\n  devenezLeader: {\n   fontFamily: \"Roboto_700Bold\",\n   textAlign: 'center',\n   color: 'white'\n  },\n  SecondaryButton1: {\n    marginBottom: 40,\n  },\n});\n\nexport default Hub;","import React, {useState} from 'react';\nimport { StyleSheet, Text, View, Button, Alert, Image, TextInput } from 'react-native';\nimport IconButton from './common/IconButton';\nimport TextButton from './common/TextButton'\nimport ImageButton from './common/ImageButton'\nimport CustomInput from './common/CustomInput'\nimport { Edit } from \"react-native-feather\";\n\nconst Test = ({ navigation }) => {\n  const [text, onChangeText] = useState('')\n\n  return (\n    <View style={styles.alignIt}>\n      <View style={styles.container}>\n        <TextButton \n          content=\"Final version\"\n          action={() => Alert.alert('ooh yeah')}\n        />\n        <Text></Text>\n        {/* <IconButton action={() => Alert.alert('test')}>\n          <Edit/>\n        </IconButton> */}\n        {/* <ImageButton action={() => Alert.alert('test')}>\n          <Image style={{}} source={require('../assets/spotify.jpg')}/>\n        </ImageButton> */}\n        <CustomInput\n          onChangeText={onChangeText}\n          value={text}\n          placeholder=\"Input text here\"\n        />\n      </View>\n      <View style={styles.alignIt}/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 5,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  alignIt: {\n    backgroundColor: '#fff',\n    flex: 3\n  },\n});\n\nexport default Test;","import React from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\n\nconst CreateUser = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      <Button\n        title='create user'\n        onPress={() => navigation.push('ConnectService')}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n   \n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: '#120841',\n    // fontFamily: 'Roboto',\n    padding: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n\n\n  },\n});\n\nexport default CreateUser;","\nimport React, {useState} from 'react';\nimport { TouchableOpacity, Image, StyleSheet, Text, View, Button} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userConnected, setSpotifyToken } from '../redux/user';\nimport * as Linking from 'expo-linking';\n\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, useAuthRequest, ResponseType } from 'expo-auth-session';\n\nWebBrowser.maybeCompleteAuthSession();\n\nconst discovery = {\n  authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n  tokenEndpoint: 'https://accounts.spotify.com/api/token',\n};\n\nconst ConnectService = ({ navigation }) => {\n  const storeToken = useSelector((state) => state.user.spotify_token);\n  const dispatch = useDispatch();\n ///TODO: FIX URI Redirection\n //const prefix = Linking.createURL('/spotifypage');\n\n  const [request, response, promptAsync] = useAuthRequest(\n    {\n      responseType: ResponseType.Token,\n      clientId: '67234dda13844207a07446c5f1672ca6',\n      scopes: ['user-read-recently-played', 'user-read-playback-position', 'user-read-email', 'playlist-modify-public', 'user-read-private', 'playlist-read-private', 'user-library-read', 'user-library-modify','user-top-read','playlist-read-collaborative','playlist-modify-private', 'ugc-image-upload', 'user-follow-read', 'user-follow-modify', 'user-read-playback-state', 'user-modify-playback-state', 'user-read-currently-playing'],\n      // In order to follow the \"Authorization Code Flow\" to fetch token after authorizationEndpoint\n      // this must be set to false\n      usePKCE: false,\n      // redirectUri: makeRedirectUri({\n      //   scheme: 'jukehome.app://callback'\n      //   }),\n//      redirectUri: makeRedirectUri({ scheme: 'com.jukehome' }) == null ? makeRedirectUri({ scheme: 'com.jukehome' }) : \"http://localhost:19006/callback/\"\n      redirectUri: makeRedirectUri({ native: Linking.getInitialURL })\n  \n    },\n    discovery\n  );\n  //console.log(\"prefix\", {prefix});\n\n  async function getTrack() {\n    // const token = JSON.parse(localStorage.getItem('token'));\n    const token = JSON.parse(storeToken);\n    console.log(\"--- getTrack() ---\");\n    fetch( 'https://api.spotify.com/v1/tracks/id=' + token,  {\n        method: 'GET',\n    })\n    .then(response => response.json())\n    .then((response) => {\n        console.log(\"Server said: \" + response);\n    });\n  }\n\n  React.useEffect(() => {\n    console.log(\"response ======== \", response);\n    if (response?.type === 'success') {\n      console.log(\"request  \"  +request.url);\n      console.log(\"request  \"  +request.codeChallenge);\n      const { access_token } = response.params;\n      console.log(access_token);\n      const token = access_token;\n      // localStorage.setItem('token', JSON.stringify(token));\n      dispatch(setSpotifyToken(JSON.stringify(token)));\n    }\n  }, [response]);\n\n  /// \n  const user = useSelector((state) => state.user.user);\n\n  if (response == null || response.type == \"dismiss\") {\n    console.log(\"user\", user)\n    return (\n      <View style={styles.container}>\n        \n        {/* <Button\n          title='connect to Spotify'\n          onPress={() => dispatch(userConnected())}\n        /> */}\n        <Text style={styles.connectation}> Connect via </Text>\n        <View>\n          <TouchableOpacity onPress={async ()=> {\n              await promptAsync();\n            \n            }\n            \n            }>\n            <Image\n              source={require(\"../assets/spotifyBlanc.png\")}\n              resizeMode=\"contain\"\n              style={styles.spotLogo}\n              imageStyle={styles.image_imageStyle}\n            /> \n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n\n  } else {\n    console.log(\"user\", user)\n    console.log(\"responsebbbbbb\", response)\n    return (\n      <View style={styles.container}>\n        \n        {/* <Button\n          title='connect to Spotify'\n          onPress={() => dispatch(userConnected())}\n        /> */}\n        <Text style={styles.connectation}> Connect via </Text>\n        <View>\n          <TouchableOpacity onPress={\n            dispatch(userConnected())\n            }>\n           <Text style={styles.connectation}> GO </Text>\n\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: '#120841',\n    // fontFamily: 'Roboto',\n    padding: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  spotLogo: {\n    width: 300,\n    height: 90,\n  },\n  mediumLogo: {\n    width: 66,\n    height: 90,\n  },\n\n  connectation: {\n    alignItems: 'center',\n    fontSize: 20,\n    color: \"white\",\n    fontWeight: \"bold\",\n    paddingBottom: 10,\n  }\n  \n\n});\n\nexport default ConnectService;","// import React from 'react';\n// import { StyleSheet, Text, View, Button, TextInput } from 'react-native';\n\n// const JoinRoom = ({ navigation }) => {\n//   return (\n//     <View style={styles.container}>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Room Code\"\n//         keyboardType=\"numeric\"\n//       />\n//         <Button style ={styles.button}\n//         title='Scanner un QR Code'\n//       />\n//       <Button style ={styles.button}\n//         title='validate room code'\n//         onPress={() => navigation.push('Room')}\n//       />\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#461C86',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   },\n\n//   input : {\n//     flex: 1,\n//     backgroundColor: '#461C86'\n//   },\n\n//   button: {\n//     flex: 1\n//   }\n// });\n\n// export default JoinRoom;\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport { StyleSheet, View, Text, TextInput, Button } from \"react-native\";\nimport FontAwesomeIcon from \"react-native-vector-icons/FontAwesome\";\nimport MaterialCommunityIconsIcon from \"react-native-vector-icons/MaterialCommunityIcons\";\n// import { RNCamera } from 'react-native-camera';\nimport TextButton from \"./common/TextButton\"\nimport CustomInput from \"./common/CustomInput\"\n\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\nconst JoinRoom = ({ navigation }) => {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [scanned, setScanned] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n\n  const handleBarCodeScanned = ({ type, data }) => {\n    setScanned(true);\n    alert(`Bar code with type ${type} and data ${data} has been scanned!`);\n  };\n\n  if (hasPermission === null) {\n    return <Text>Requesting for camera permission</Text>;\n  }\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n\n  return (\n    <View style={styles.container}>\n      <BarCodeScanner\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n        style={StyleSheet.absoluteFillObject}\n      />\n      {scanned && <Button title={'Tap to Scan Again'} onPress={() => setScanned(false)} />}\n    </View>\n  );\n}\n\n\n/* const JoinRoom = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      <View style={styles.rejoindreLaSalle}>\n        <Text style={styles.scanUnQrCode1}>Entre le numéro de la salle</Text>\n    \n\n    \n        <CustomInput\n\n          placeholder=\"Room Code\"\n          keyboardType=\"numeric\"\n          maxLength={6} />\n     \n\n        \n          <View>\n            <Text style={styles.ou2}>ou</Text>\n          </View>\n\n        \n          <Text style={styles.scanUnQrCode}>Scan un QR Code</Text>\n      </View>\n      <View>\n        \n        <View style={styles.icon2Row} onPress={() => navigation.push('Room')}>\n          <FontAwesomeIcon name=\"camera\" style={styles.icon2}></FontAwesomeIcon>\n          <MaterialCommunityIconsIcon name=\"qrcode-scan\" style={styles.icon}></MaterialCommunityIconsIcon>\n        </View>\n\n        <TextButton content=\"Rejoindre la salle\" action={() => navigation.push('Room')}/>\n        </View> */\n\n{/*         <QRCodeScanner\n        onRead={this.onSuccess}\n        flashMode={RNCamera.Constants.FlashMode.torch}\n        topContent={\n          <Text style={styles.centerText}>\n            Go to{' '}\n            <Text style={styles.textBold}>wikipedia.org/wiki/QR_code</Text> on\n            your computer and scan the QR code.\n          </Text>\n        }\n        bottomContent={\n          <TouchableOpacity style={styles.buttonTouchable}>\n            <Text style={styles.buttonText}>OK. Got it!</Text>\n          </TouchableOpacity>\n        }\n      /> */}\n{/*     </View>\n  );\n} */}\n\n const styles = StyleSheet.create({\n\n  container: {\n    flex: 1,\n    backgroundColor: \"#120841\",\n    padding: 50,\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    // alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  rejoindreLaSalle: {\n    fontFamily: \"CarterOne-Regular\",\n    color: \"rgba(18,8,65,1)\",\n    textAlign: \"center\",\n    fontSize: 24,\n    alignItems: 'center',\n\n  },\n\n  input: {\n    width: 270,\n    height: 80,\n    borderWidth: 2,\n    borderColor: \"rgba(255,255,255,1)\",\n    borderRadius: 25,\n    color: \"white\",\n    textAlign: 'center',\n    // placeholderTextColor: \"white\"\n  },\n\n  bas: {\n    flex: 3,\n  },\n  \n  icon2: {\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 80,\n    marginTop: 7\n  },\n\n  icon: {\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 80,\n  },\n\n  icon2Row: {\n    height: 87,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    textAlign: 'center'\n  },\n\n\n  scanUnQrCode: {\n    fontFamily: \"Roboto_700Bold\",\n    color: \"rgba(255,255,255,1)\",\n    height: 30,\n    width: 270,\n    textAlign: \"center\",\n  },\n\n  scanUnQrCode1: {\n    fontFamily: \"Roboto_700Bold\",\n    color: \"rgba(255,255,255,1)\",\n    height: 34,\n    width: 270,\n    textAlign: \"center\",\n  },\n\n  ou2: {\n    fontFamily: \"Roboto_700Bold\",\n    color: \"rgba(255,255,255,1)\",\n    height: 29,\n    width: 270,\n    textAlign: \"center\",\n  }\n\n}); \n\nexport default JoinRoom;","import React, { Component, useState } from \"react\";\nimport { StyleSheet, View, Text, Image, ImageBackground, Button } from \"react-native\";\nimport TextButton from \"./common/TextButton\";\nimport Header from \"./common/Header\";\nimport CustomInput from \"./common/CustomInput.js\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser, userConnected, setCurrentPartyId } from '../redux/user';\n\n\nconst JoinRoomCode = ({ navigation }) => {\n  var response;\n  const [code, onChangeTextCode] = useState('');\n//   const [mdp, onChangeTextMdp] = useState('');\n\n  async function loginToRoom (_token, _code) {\n    try {\n      let response = await fetch(`https://shangrila.pythonanywhere.com/joinParty?token=${_token}&code=${_code}`)\n      .then((response) => response.json())\n      .then((json) => {\n        return ({\n          idParty: json.party_id,\n          })\n      })\n  .catch((error) => { console.error(error) });\n      console.log (\"res ======!!======\",response)\n      return response;\n    } catch (error) {\n      console.error(error);\n    };\n  }\n    \n  var request; \n  \n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.user.user.token);\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <View style={styles.Text1}>\n          <Text style={styles.devenezLeader}>\n            Rejoins la salle de ton pote !\n          </Text>\n        </View>\n        <View style={styles.MainButton1}>\n          <CustomInput useStateFunction={onChangeTextCode} useStateValue={code} placeholder=\"Le Code de la salle (6 caractères)\"/>\n        </View>\n      </View>\n\n      <View style={styles.SecondaryButton1}>\n      <TextButton content=\"Se rendre dans la salle\" action={async () => {\n          console.log (\"text\",code);\n          let response = await loginToRoom (token, code);\n          console.log(\"response === \",response);\n          if (response.idParty!= null) {\n            console.log(\"resss body === \", response.idParty);\n            dispatch(setCurrentPartyId(response));\n            //dispatch(userConnected());\n            navigation.push('Room'); \n          }\n        } \n      }/>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#120841\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  image: {\n    justifyContent: 'space-around',\n    flexDirection: 'row'\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    padding: 20,\n  },\n  devenezLeader: {\n    fontFamily: \"Roboto_700Bold\",\n    textAlign: 'center',\n    color: 'white',\n  },\n  devenirLeader: {\n    width: 264,\n    height: 81,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 20,\n    shadowColor: \"rgba(228,66,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    fontFamily: \"CarterOne_400Regular\",\n    color: \"rgba(18,8,65,1)\",\n    textAlign: \"center\",\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    fontFamily: \"Roboto_300Light\",\n    padding: 20,\n   },\n  devenezLeader: {\n   fontFamily: \"Roboto_700Bold\",\n   textAlign: 'center',\n   color: 'white'\n  },\n  SecondaryButton1: {\n    marginBottom: 40,\n  },\n});\n\nexport default JoinRoomCode;","import React, { useState } from \"react\";\nimport {\n  Image,\n  StyleSheet,\n  Text,\n  View,\n  Button,\n  TouchableOpacity,\n  TextInput,\n} from \"react-native\";\nimport { useDispatch, useSelector } from 'react-redux';\n\n\n// import fontStyles from 'assets/fonts/Roboto-Light.ttf';\n\n\n\nimport TextButton from \"./common/TextButton.js\";\nimport CustomInput from \"./common/CustomInput.js\";\nimport { setCurrentPartyCode, setCurrentPartyId } from \"../redux/user.js\";\n\n// {\n  /* <IconButton action={function}/>\n        <Icon/>\n      </IconButton> */\n// }\n\n// {\n  /* TO DO: le texte du placeholder est généré automatiquement selon le nom spotify du créateur du salon.\nFaire comprendre visuellement que l'utilisateur peut simplement cliquer sur suivant sans avoir à rentrer du texte pour le nom de la salle\n  */\n// }\n\n\n\nconst CreateRoom = ({ navigation }) => {\n  const [textRoom, setTextRoom] = useState(\"\");\n  const user = useSelector((state) => state.user.user);\n  const dispatch = useDispatch();\n  \n  async function getCode (_party_id, _token) {\n    try {\n      let response = await fetch(`https://shangrila.pythonanywhere.com/code?token=${_token}&party_id=${_party_id}`)\n      .then((response) => response.json())\n      .then((json) => {\n      console.log (\"res test fun === \", json)\n  \n        return ({\n          codeParty: json.code,\n        })\n      })\n  .catch((error) => { console.error(error) });\n      console.log (\"res test fun === \", response)\n      return response;\n    } catch (error) {\n      console.error(error);\n    };\n  }\n\n  async function setRoomToAp (_creator_id, _name, _token) {\n    try {\n      let response = await fetch(`https://shangrila.pythonanywhere.com/createParty?token=${_token}&name=${_name}`)\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(\"json ===== ===== \", json)\n        return ({\n          idParty: json.party_id, \n          \n        })\n      })\n     \n  .catch((error) => { console.error(error) });\n      console.log (\"res ======!!======\",response)\n      return response;\n    } catch (error) {\n      console.error(error);\n    };\n  \n}\n  return (\n    <View style={styles.container}>\n      <View>\n        <View style={styles.intitule}>\n          <Text style={styles.head}>Devenir leader</Text>\n        </View>\n        <View style={styles.intitule2}>  \n          <Text style={styles.head2}>Connecte ton compte</Text>\n        </View>\n        <View style={styles.imagerie}>\n          <Image\n            source={require(\"../assets/spotify.jpg\")}\n            resizeMode=\"contain\"\n            style={styles.tinyLogo}\n            imageStyle={styles.image_imageStyle}\n          />\n          <Image\n            source={require(\"../assets/deezer.jpg\")}\n            resizeMode=\"contain\"\n            style={styles.tinyLogo}\n            imageStyle={styles.image_imageStyle}\n          />\n        </View>\n        <View style={styles.down}>\n          <Text style={styles.someText}>Donne un nom à ta salle</Text>\n        </View>\n        <View>\n          {/* <TextInput\n            style={styles.someInput}\n            placeholder=\" Nom d'utilisateur \"\n            onChangeText={(textRoom) => setTextRoom(textRoom)}\n            defaultValue={textRoom}\n          /> */}\n        </View>\n        <CustomInput placeholder=\"Nom public de la salle\"/>\n      </View>\n      <View style={styles.mainButton}>\n        <TextButton\n          content=\"Créer la salle\" \n          action={async () => {\n\n            let response = await setRoomToAp(user.id, textRoom, user.token);\n\n            if (response != undefined && response.idParty != undefined) {\n              let responseCode = await getCode( response.idParty, user.token)\n              dispatch(setCurrentPartyId(response));\n              dispatch(setCurrentPartyCode(responseCode));\n\n              navigation.push(\"InitialMood\")\n            } else {\n              console.log(\"Put pop up\");\n            }\n          }}  \n        />\n\n\n      </View>\n    </View>\n  );\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    backgroundColor: '#120841',\n    justifyContent: \"space-between\",\n    flex: 1,\n  },\n  flexing: {\n    flex: 1,\n  },\n  intitule: {\n    marginTop: 20,\n  },\n  intitule2: {\n    marginTop: 10,\n    marginBottom: 60,\n  },\n  tinyLogo: {\n    width: 120,\n    height: 120,\n  },\n  \n  head: {\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n    fontSize: 25,\n    fontWeight: \"bold\",\n    color: \"white\",\n    fontFamily: \"Roboto_700Bold\"\n  },\n  head2: {\n    color: \"white\",\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n    fontSize: 15,\n    fontFamily: \"Roboto_300Light\"    \n  },\n  imagerie: {\n    flexDirection: \"row\",\n    justifyContent:\"space-around\",\n    marginBottom: 60,\n  },\n  down: {\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n    marginBottom: 20,\n  },\n  mainButton: {\n    marginBottom: 40,\n  },\n  someText: {\n    padding: 2,\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    color: \"white\",\n  },\n  someInput: {\n    justifyContent: \"flex-end\",\n    height: 40,\n    alignContent: \"center\",\n    padding: 2,\n  },\n\n});\n export default CreateRoom;","import React, { useState } from \"react\";\nimport { StyleSheet, View, Text, Image, ImageBackground, Button } from \"react-native\";\nimport TextButton from \"./common/TextButton\";\nimport Header from \"./common/Header\";\n\nconst initialMood = ({ navigation }) => {\n  const [one, setOne] = useState(false);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.image} >\n        <View style={styles.imageline}>\n          <Image\n            source={require(\"../assets/déchirure 2.png\")}\n            resizeMode=\"contain\"\n            style={styles.placeholderimage}\n          />\n          <Image\n            source={require(\"../assets/déchirure 3.png\")}\n            resizeMode=\"contain\"\n            style={styles.placeholderimage}\n          />\n        </View>\n        <View style={styles.imageline}>\n          <Image\n            source={require(\"../assets/déchirure 4.png\")}\n            resizeMode=\"contain\"\n            style={styles.placeholderimage}\n          />\n          <Image\n            source={require(\"../assets/déchirure 5.png\")}\n            resizeMode=\"contain\"\n            style={styles.placeholderimage}\n          />\n        </View>\n        <View style={styles.imageline}>\n          <Image\n            source={require(\"../assets/déchirure 8.png\")}\n            resizeMode=\"contain\"\n            style={styles.placeholderimage}\n          />\n          <Image\n            source={require(\"../assets/déchirure 1.png\")}\n            resizeMode=\"contain\"\n            style={styles.placeholderimage}\n          />\n        </View>\n      </View>\n      <View style={styles.SecondaryButton1}>\n        <TextButton content=\"C'est mon mood\" action={() => navigation.push('QRCode')}/>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  placeholderimage: {\n    width: 100,\n    height: 100,\n    // backgroundColor: 'pink',\n    margin: 10,\n  },\n\n  container: {\n    backgroundColor: \"#120841\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: 'center',\n    flex: 1,\n  },\n  image: {\n    // justifyContent: 'space-around',\n    flexDirection: 'column',\n    width: '80%',\n  },\n  imageline: {\n    justifyContent: 'space-between',\n    flexDirection: 'row'\n  },\n\n\n\n\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    padding: 20,\n  },\n  devenezLeader: {\n    fontFamily: \"Roboto_700Bold\",\n    textAlign: 'center',\n    color: 'white',\n  },\n  devenirLeader: {\n    width: 264,\n    height: 81,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 20,\n    shadowColor: \"rgba(228,66,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    fontFamily: \"CarterOne_400Regular\",\n    color: \"rgba(18,8,65,1)\",\n    textAlign: \"center\",\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    fontFamily: \"Roboto_300Light\",\n    padding: 20,\n   },\n  devenezLeader: {\n   fontFamily: \"Roboto_700Bold\",\n   textAlign: 'center',\n   color: 'white'\n  },\n  SecondaryButton1: {\n    marginBottom: 40,\n    width: \"100%\",\n  },\n});\n\nexport default initialMood;","// import React from 'react';\n// import { StyleSheet, Text, View, Button, Image, TouchableOpacity } from 'react-native';\n\n// const Hub = ({ navigation }) => {\n//   return (\n//     <View style={styles.alignIt}>\n      \n//       <Image\n//       style={styles.containImage}\n//         source={require('../assets/MainLogo.png')}\n//         />\n//         <View style={styles.container}>\n//         <Button\n//           title='DEVENIR LEADER'\n//           onPress={() => navigation.push('CreateRoom')}\n//         />\n//         <Text>Déja Leader ? </Text>\n//         <Button style={styles.MainButton}\n//           title='Se connecter'\n//           onPress={() => navigation.push('JoinRoom')}\n//         />\n//       </View>\n \n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 5,\n//     backgroundColor: '#461C86',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontFamily: \"Canter Bold\"\n//   },\n//   alignIt: {\n//     backgroundColor: '#461C86',\n//     flex: 3,\n//     fontFamily: \"Canter Bold\"\n//   },\n//   containImage: {\n//     flex: 1, height: undefined, width: undefined, resizeMode: 'contain' \n//   },\n//   MainButton: {\n//     flex: 1,\n//     fontFamily: \"Canter Bold\"\n//   }\n\n// });\n\n// export default Hub;\n\n\nimport React, { Component, useEffect } from \"react\";\nimport { StyleSheet, View, Text, Image, ImageBackground, Button } from \"react-native\";\nimport TextButton from \"./common/TextButton\";\nimport Header from \"./common/Header\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setStatusBarNetworkActivityIndicatorVisible } from \"expo-status-bar\";\n\n\nconst QRCode = ({ navigation, }) => {\n\n//   async function getQrcode (_party_id, _token) {\n//     try {\n//       let response = await fetch(`https://shangrila.pythonanywhere.com/qrcode?token=${_token}&party_id=${_party_id}`)\n      \n//       .then((response) => response)\n//       .then((json) => {\n//         console.log(\"json ===== ===== \", json)\n//         return ({\n//           qrCode: json, \n          \n//         })\n//       })\n     \n//   .catch((error) => { console.error(error) });\n//       console.log (\"res ======!!======\",response)\n//       return response;\n//     } catch (error) {\n//       console.error(error);\n//     };\n  \n// }\n\n\nconst code = useSelector((state) => state.user.party.code);\n\n\n// Code de Theo pour\n\n  // return (\n \n  //   <View style={styles.container}>\n  //       <View style={styles.Text1} >\n  //         <Text style={styles.devenezLeader}>\n  //           {code}\n  //         </Text>\n  //       </View>\n  //   </View>\n  // );\n// } else {\n\n// // Code de Theo pour\n\n  return (\n \n    <View style={styles.container}>\n      \n       <View>\n        <View style={styles.image} >\n           {/* <Image\n            source={require(\"../assets/déchirure 9.png\")}\n            resizeMode=\"contain\"\n            style={styles.imageLogo}\n          />  */}\n          <Text style={styles.devenezLeader}>\n            {code}\n          </Text>\n              \n        </View>\n        <View style={styles.Text1}>\n          <Text style={styles.devenezLeader}>\n            Voici ton QR Code, partage le à tes amis\n          </Text>\n        </View>\n        <View style={styles.MainButton1}>\n          <TextButton content=\"Lancer l'analyse\" action={() => navigation.push('AnalyseMood')}/>\n        </View>\n      </View> \n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#120841\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  image: {\n    justifyContent: 'space-around',\n    flexDirection: 'row'\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    padding: 20,\n  },\n  devenezLeader: {\n    fontFamily: \"Roboto_700Bold\",\n    textAlign: 'center',\n    color: 'white',\n  },\n  devenirLeader: {\n    width: 264,\n    height: 81,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 20,\n    shadowColor: \"rgba(228,66,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    fontFamily: \"CarterOne_400Regular\",\n    color: \"rgba(18,8,65,1)\",\n    textAlign: \"center\",\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    fontFamily: \"Roboto_300Light\",\n    padding: 20,\n   },\n  devenezLeader: {\n   fontFamily: \"Roboto_700Bold\",\n   textAlign: 'center',\n   color: 'white'\n  },\n  SecondaryButton1: {\n    marginBottom: 40,\n  },\n});\n\nexport default QRCode;","// Utilisation:\n// <TransparentIconButton action={function}/>\n//   <Icon/>\n// </TransparentIconButton>\n\nimport React from 'react';\nimport { StyleSheet, View, TouchableOpacity } from 'react-native';\n\nconst TransparentIconButton = ({ children, action }) => {\n  if (String(children.type).slice(0,12) === \"function Svg\") {\n    const clone = React.cloneElement(children, {color:'white', height: 30, width: 30}, );\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          onPress={action}\n          style={styles.buttonContainer}>\n          {clone}\n        </TouchableOpacity>\n      </View>\n    );\n  } else if (String(children.type).slice(0,24) === \"function FontAwesomeIcon\") {\n    const clone = React.cloneElement(children, {color:'white', size: 28}, );\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          onPress={action}\n          style={styles.buttonContainer}>\n          {clone}\n        </TouchableOpacity>\n      </View>\n    );\n  } else {\n    return (\n      <TouchableOpacity\n        onPress={action}\n        style={styles.buttonContainer}>\n      </TouchableOpacity>\n    );\n  }\n}\n  \nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row'\n  },\n  buttonContainer: {\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default TransparentIconButton;\n\n","// Utilisation:\n// <OutlineIconButton action={function}/>\n//   <Icon/>\n// </OutlineIconButton>\n\nimport React from 'react';\nimport { StyleSheet, View, TouchableOpacity } from 'react-native';\n\nexport const OutlineIconButton = ({ children, action }) => {\n  if (String(children.type).slice(0,12) === \"function Svg\") {\n    const clone = React.cloneElement(children, {color:'white', height: 30, width: 30}, );\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          onPress={action}\n          style={styles.buttonContainer}>\n          {clone}\n        </TouchableOpacity>\n      </View>\n    );\n  } else if (String(children.type).slice(0,24) === \"function FontAwesomeIcon\") {\n    const clone = React.cloneElement(children, {color:'white', size: 28}, );\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          onPress={action}\n          style={styles.buttonContainer}>\n          {clone}\n        </TouchableOpacity>\n      </View>\n    );\n  } else {\n    return (\n      <TouchableOpacity\n        onPress={action}\n        style={styles.buttonContainer}>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport const CharButton = ({ children, action }) => {\n  if (String(children.type).slice(0,12) === \"function Svg\") {\n    const clone = React.cloneElement(children, {color:'white', height: 15, width: 15}, );\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          onPress={action}\n          style={styles.smallButtonContainer}>\n          {clone}\n        </TouchableOpacity>\n      </View>\n    );\n  } else if (String(children.type).slice(0,24) === \"function FontAwesomeIcon\") {\n    const clone = React.cloneElement(children, {color:'white', size: 14}, );\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          onPress={action}\n          style={styles.smallButtonContainer}>\n          {clone}\n        </TouchableOpacity>\n      </View>\n    );\n  } else {\n    return (\n      <TouchableOpacity\n        onPress={action}\n        style={styles.smallButtonContainer}>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row'\n  },\n  buttonContainer: {\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: \"white\",\n    borderRadius: 20\n  },\n  smallButtonContainer: {\n    width: 20,\n    height: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: \"orange\",\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\n\nexport const ActiveMusicTitle = ({ children }) => {\n  return (\n    <Text style={styles.title} numberOfLines={1} ellipsizeMode=\"tail\">\n      {children}\n    </Text>\n  );\n}\n\nexport const ActiveMusicArtist = ({ children }) => {\n  return (\n    <Text style={styles.artist} numberOfLines={1} ellipsizeMode=\"tail\">\n      {children}\n    </Text>\n  );\n}\n  \nconst styles = StyleSheet.create({\n  title: {\n    fontWeight: 'bold',\n    color: \"white\",\n    fontSize: 20,\n  },\n  artist: {\n    color: 'white',\n    fontSize: 15,\n  }\n});\n\n\n","import React from 'react';\nimport { StyleSheet, Text, View, Button, Alert } from 'react-native';\nimport { OutlineIconButton } from './OutlineIconButton';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome'\nimport { faDice } from '@fortawesome/free-solid-svg-icons'\nimport Icon from 'react-native-vector-icons/Entypo';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { ActiveMusicTitle, ActiveMusicArtist } from '../Music';\n\nconst Footer = ({ navigation, title, artist}) => {\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity action={() => Alert.alert(\"test\")} style={styles.buttonContainer}><FontAwesomeIcon icon={ faDice } size={30} color=\"white\"/></TouchableOpacity>\n      <View style={styles.centerPiece}>\n        <Text style={styles.title}>{title}</Text>\n        <Text style={styles.artist}>{artist}</Text>\n        <View style={styles.progressBar}/>\n      </View>\n      <TouchableOpacity onPress={() => Alert.alert(\"test\")} style={styles.buttonContainer}><Icon name=\"note\" color=\"white\" size={30}/></TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#120841',\n    width: \"100%\",\n    alignItems: \"flex-end\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    padding: 10,\n    height: 90,\n    paddingBottom: 35,\n    marginTop: -65,\n    marginBottom: -25,\n    borderRadius: 25,\n  },\n  buttonContainer: {\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: \"white\",\n    borderRadius: 20,\n    marginLeft: 10,\n    marginRight: 10,\n  },\n  centerPiece: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  title: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  artist: {\n    color: \"white\",\n    fontSize: 14,\n    marginBottom: 5,\n  },\n  progressBar: {\n    height: 2,\n    width: \"100%\",\n    backgroundColor: \"white\",\n  },\n});\n\nexport default Footer;","import React from 'react'\n\nexport const resume = (token) => {\n  fetch('https://api.spotify.com/v1/me/player/play', {\n    method: 'PUT',\n    headers: {\n      Authorization: \"Bearer \"+JSON.parse(token)\n    }\n  })\n    .catch((error) => { console.error(error) });\n}\n\nexport const pause = (token) => {\n  fetch('https://api.spotify.com/v1/me/player/pause', {\n    method: 'PUT',\n    headers: {\n      // header={\"Authorization\": \"Bearer {}\".format(\"access_token\"])} \n      Authorization: \"Bearer \"+JSON.parse(token)\n    }\n  })\n    .catch((error) => { console.error(error) });\n}\n\nexport const playSong = (token, songId) => {\n  console.log(token, songId)\n  fetch('https://api.spotify.com/v1/me/player/play', {\n    method: 'PUT',\n    headers: {\n      Authorization: \"Bearer \"+JSON.parse(token)\n    },\n    body: JSON.stringify({\n      \"uris\": [\"spotify:track:\"+songId]\n    })\n  })\n    .catch((error) => { console.error(error) });\n}\n\nexport const getStatus = (token) => {\n  return fetch('https://api.spotify.com/v1/me/player', {\n    method: 'GET',\n    headers: {\n      Authorization: \"Bearer \"+JSON.parse(token)\n    },\n  })\n    .then((response) => response.json())\n    .then((json) => {\n      return (json.is_playing)\n    })\n    .catch((error) => { console.error(error) });\n}\n\nexport const getCurrentPhoto = (token) => {\n  return fetch('https://api.spotify.com/v1/me/player', {\n    method: 'GET',\n    headers: {\n      Authorization: \"Bearer \"+JSON.parse(token)\n    },\n  })\n  .then((response) => response.json())\n  .then((json) => {\n    console.log(json.item.name)\n    return (json.item.album.images[0].url)\n  })\n  .catch((error) => { console.error(error) });\n}\n\nexport const getCurrentSong = (token) => {\n  return fetch('https://api.spotify.com/v1/me/player', {\n    method: 'GET',\n    headers: {\n      Authorization: \"Bearer \"+JSON.parse(token)\n    },\n  })\n  .then((response) => response.json())\n  .then((json) => {\n    return ({\n      title: json.item.name,\n      artist: json.item.artists[0].name,\n      liked: false,\n      photo: json.item.album.images[0].url,\n      id: json.item.id,\n    })\n  })\n  .catch((error) => { console.error(error) });\n}","import React, { useState } from 'react';\nimport { StyleSheet, Alert, View, Button, Text, Animated, ScrollView, FlatList, TouchableOpacity, Image, ImageBackground, Dimensions } from 'react-native';\nimport { ThumbsDown, ThumbsUp, Heart, Plus, Minus, Users, UserPlus } from \"react-native-feather\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\nimport TransparentIconButton from './common/TransparentIconButton';\nimport { CharButton } from './common/OutlineIconButton';\nimport { ActiveMusicTitle, ActiveMusicArtist } from './Music';\nimport Footer from './common/Footer'\nimport {playSong, getStatus, getCurrentSong} from './Player'\nimport { useSelector } from 'react-redux';\n\nconst currentSong = {\n    title: \"Again\",\n    artist: \"YUI\",\n    liked: false,\n    photo: \"https://i.scdn.co/image/ab67616d00001e02fdec3ee19da7cd9b1b02ca9c\",\n    id: \"4OQq1bcP12GQQXJNupxqfR\",\n};\n\nconst upNextSongs = [\n  {\n    title: \"Old Town Road\",\n    artist: \"Lil Nas X\",\n    liked: false,\n    photo: \"https://i.scdn.co/image/ab67616d00001e02c0e7bf5cdd630f314f20586a\",\n    id: \"0F7FA14euOIX8KcbEturGH\"\n  },\n  {\n    title: \"Bad Guy\",\n    artist: \"Billie Eilish\",\n    liked: false,\n    photo: \"https://i.scdn.co/image/ab67616d00001e0250a3147b4edd7701a876c6ce\",\n    id: \"2Fxmhks0bxGSBdJ92vM42m\"\n  },\n  {\n    title: \"Billie Jean\",\n    artist: \"Mickeal Jackson\",\n    liked: false,\n    photo: \"https://i.scdn.co/image/ab67616d00001e024121faee8df82c526cbab2be\",\n    id: \"5ChkMS8OtdzJeqyybCc9R5\"\n  },\n  {\n    title: \"Four\",\n    artist: \"Chill Bump\",\n    liked: false,\n    photo: \"https://i.scdn.co/image/ab67616d00001e02ebe87a32cbd59019ea78ebef\",\n    id: \"4aR43dhmFwhcUikb5PyUKH\"\n  },\n  {\n    title: \"Les lacs du connemara\",\n    artist: \"Michel Sardou\",\n    liked: false,\n    photo: \"https://i.scdn.co/image/ab67616d00001e028ce9b85d2c378387883c6cc0\",\n    id: \"3vHswuqTNO0hIiW6am0tKB\"\n  },\n  {\n    title: \"Les démons de minuit\",\n    artist: \"Images\",\n    liked: false,\n    photo: \"https://i.scdn.co/image/ab67616d00001e02a54a8acf1bf370b3e0da0376\",\n    id: \"2ShTk16F2cHvhQtHGlxTR7\"\n  },\n  {\n    title: \"L'aventurier\",\n    artist: \"Indochine\",\n    liked: false,\n    photo: \"https://i.scdn.co/image/ab67616d00001e02f80fe67d0f4293be5b8f5251\",\n    id: \"2UC5XnHA1Wn9FjQmbjNca9\"\n  }\n];\n\nconst Room = ({ navigation }) => {\n  const token = useSelector((state) => state.user.spotify_token);\n  const [open, setOpen] = useState(false);\n  const [songs, setSongs] = useState(upNextSongs);\n  const [song, setSong] = useState(currentSong);\n  const [past, setPast] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  if (isLoading) {\n    setLoading(false)\n    getStatus(token).then((status) => {\n      if (status === true) {\n        getCurrentSong(token).then((res) => {\n          if (res.id !== song.id) {\n            setSongs([song, ...songs]);\n            setSong(res);\n          }\n        })\n      } else {\n        playSong(token, song.id);\n      }     \n    })\n  };\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerLeft: () => (\n        <Button\n          onPress={() => navigation.popToTop()}\n          title=\"Leave\"\n        />\n      ),\n    });\n  }, [navigation]);\n  // const expandAnim = useRef(new Animated.Value(110)).current;\n\n  // const openSeeMore = () => {\n  //   Animated.timing(expandAnim, {\n  //     toValue: \n  //   })\n  // }\n\n  const toggleLikeSongs = (id) => {\n    const dup = [...songs];\n    const index = dup.findIndex((item) => item.id === id);\n    dup[index].liked = !dup[index].liked;\n    dup.sort((a, b) => {\n      if (a.liked > b.liked) {\n        return -1\n      } else {\n        return 1\n      }\n    });\n    setSongs(dup);\n  }\n\n  const songItem = ({item}) => {\n    return (\n      <View style={styles.upNextSong}>\n        <View style={styles.upNextImageContainer}>\n          <Image\n            style={styles.upNextImage}\n            source={{uri: item.photo}}\n          />\n        </View>\n        <View style={styles.upNextInfoContainer}>\n          <ActiveMusicTitle>{item.title}</ActiveMusicTitle>\n          <ActiveMusicArtist>{item.artist}</ActiveMusicArtist>\n        </View>\n        <View style={styles.like}>\n          <Text style={styles.nbLikes}>{item.liked ? 1 : 0}</Text>\n          <TransparentIconButton action={() => toggleLikeSongs(item.id)}>\n            {item.liked ? <FontAwesomeIcon icon={ faHeart } /> : <Heart/>}\n          </TransparentIconButton>\n        </View>\n      </View>\n    );\n  };\n\n  const suggestions = [...songs].filter(item => !item.liked).sort(() => Math.random() - 0.5)\n  return (\n    <View style={{flex: 1}}>\n      <View style={styles.container}>\n        <ImageBackground style={styles.backgroundImage} blurRadius={25} source={{uri: song.photo}}>\n          <ScrollView>\n            <View style={styles.content}>\n              <View style={styles.roomName}>\n                <View style={styles.roomTitleLeft}>\n                  <View style={styles.alignUsers}>\n                    <Text style={styles.usersNb}>1</Text>\n                    <Users style={styles.users}/>\n                  </View>\n                </View>\n                <View style={styles.roomTitleCenter}><ActiveMusicTitle>Anniv de Paul</ActiveMusicTitle></View>\n                <View style={styles.roomTitleRight}>\n                  <TouchableOpacity onPress={() => Alert.alert('menu')} style={styles.addUsers}>\n                    <UserPlus style={styles.users}/>\n                  </TouchableOpacity>\n                </View>\n              </View>\n              <TouchableOpacity onPress={() => {\n                navigation.push(\"ViewCurrentSong\", {\"song\": song, \"setSong\": setSong, \"songs\": songs, \"setSongs\": setSongs, \"past\": past, \"setPast\": setPast});\n              }}>\n                <Image\n                  style={styles.currentSongImage}\n                  source={{uri: song.photo}}\n                />\n              </TouchableOpacity>\n              <View style={styles.activeRow}>\n                <View style={styles.feeling}>\n                  <TransparentIconButton action={() => Alert.alert('test')}>\n                    <ThumbsDown/>\n                  </TransparentIconButton>\n                </View>\n                <View style={styles.activeInfo}>\n                  <ActiveMusicTitle>{song.title}</ActiveMusicTitle>\n                  <ActiveMusicArtist>{song.artist}</ActiveMusicArtist>\n                </View>\n                <View style={styles.feeling}>\n                  <TransparentIconButton action={() => Alert.alert('test')}>\n                    <ThumbsUp/>\n                  </TransparentIconButton>\n                </View>\n              </View>\n              <View style={styles.advancement}></View>\n              <View style={styles.upNext}>\n                {!open ?\n                  <View style={styles.upNextClosed}>\n                    {songs.length > 0 ? <View style={styles.closedFull}>\n                      <View style={styles.upNextImageContainer}>\n                        <Image\n                          style={styles.upNextImage}\n                          source={{uri: songs[0].photo}}\n                        />\n                      </View>\n                      <View style={styles.upNextInfoContainer}>\n                        <ActiveMusicTitle>{songs[0].title}</ActiveMusicTitle>\n                        <ActiveMusicArtist>{songs[0].artist}</ActiveMusicArtist>\n                      </View>\n                      <View style={styles.like}>\n                        <Text style={styles.nbLikes}>{songs[0].liked ? 1 : 0}</Text>\n                        <TransparentIconButton action={() => toggleLikeSongs(songs[0].id)}>\n                          {songs[0].liked ? <FontAwesomeIcon icon={ faHeart } /> : <Heart/>}\n                        </TransparentIconButton>\n                      </View>\n                    </View> :\n                    <View></View>}\n                  </View> :\n                  <View>\n                    <FlatList \n                      data={songs}\n                      renderItem={songItem}\n                      keyExtractor={item => item.id}\n                      style={styles.list}\n                    />\n                    <View style={styles.voteTitle}><ActiveMusicTitle>Add a like to one of these songs</ActiveMusicTitle></View>\n                    {suggestions.length >= 1 ?\n                      <View style={styles.voteImages}>\n                        <TouchableOpacity onPress={() => toggleLikeSongs(suggestions[0].id)}>\n                          <Image\n                            style={styles.voteImage}\n                            source={{uri: suggestions[0].photo}}\n                          />\n                        </TouchableOpacity>\n                        {suggestions.length >= 2 ?\n                          <TouchableOpacity onPress={() => toggleLikeSongs(suggestions[1].id)}>\n                            <Image\n                              style={styles.voteImage}\n                              source={{uri: suggestions[1].photo}}\n                            />\n                          </TouchableOpacity> :\n                        <View style={styles.noVoteImage}></View>\n                        }\n                        {suggestions.length >= 3 ?\n                          <TouchableOpacity onPress={() => toggleLikeSongs(suggestions[2].id)}>\n                            <Image\n                              style={styles.voteImage}\n                              source={{uri: suggestions[2].photo}}\n                            />\n                          </TouchableOpacity> :\n                          <View style={styles.noVoteImage}></View>                  \n                        }\n                      </View> :\n                      <View></View>\n                    }\n                    {suggestions.length >= 1 ?\n                      <View style={styles.voteTitles}>\n                        <View style={styles.voteMusicTitle}><ActiveMusicArtist>{suggestions[0].title}</ActiveMusicArtist></View>\n                        {suggestions.length >= 2 ?\n                          <View style={styles.voteMusicTitle}><ActiveMusicArtist>{suggestions[1].title}</ActiveMusicArtist></View> : \n                          <View style={styles.voteMusicTitle}></View>\n                        }\n                        {suggestions.length >= 3 ?\n                          <View style={styles.voteMusicTitle}><ActiveMusicArtist>{suggestions[2].title}</ActiveMusicArtist></View> :\n                          <View style={styles.voteMusicTitle}></View>\n                        }\n                      </View> :\n                      <View style={styles.noVoteTitles}><ActiveMusicArtist>No songs to show...</ActiveMusicArtist></View>\n                    }\n                  </View>\n                }\n              </View>\n              {!open ?\n              <View style={styles.seeMore}>\n                <CharButton action={() => setOpen(true)}>\n                  <Plus style={{marginLeft: 0.5}}/>\n                </CharButton>\n              </View>:\n              <View style={styles.seeMore}>\n                <CharButton action={() => setOpen(false)}>\n                  <Minus style={{marginLeft: 0.5}}/>\n                </CharButton>\n              </View>}\n              <View style={styles.moodChange}>\n                <View style={styles.moodChangeRow}>\n                  <View style={styles.moodChangeItem}></View>\n                  <View style={styles.moodChangeItem}></View>\n                </View>\n                <View style={styles.moodChangeRow}>\n                  <View style={styles.moodChangeItem}></View>\n                  <View style={styles.moodChangeItem}></View>\n                </View>\n              </View>\n            </View>\n          </ScrollView>\n        </ImageBackground>\n      </View>\n      <Footer title={song.title} artist={song.artist}/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#E44200',\n    alignItems: 'center',\n    \n  },\n  backgroundImage: {\n    width: Dimensions.get('window').height,\n    height: Dimensions.get('window').height,\n  },\n  content: {\n    backgroundColor: '#rgba(228,66,0,0.3)',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    paddingBottom: 70,\n  },\n  roomName: {\n    marginTop: 15,\n    flexDirection: \"row\",\n    width: \"100%\",\n  },\n  roomTitleLeft: {\n    flex: 4,\n    alignItems: \"flex-end\",\n    justifyContent: \"center\",\n\n  },\n  alignUsers: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  users: {\n    color: \"white\",\n    width: 25,\n    height: 25\n  },\n  addUsers: {\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  usersNb: {\n    fontSize: 15,\n    color: \"white\",\n    marginRight: 5,\n  },\n  roomTitleRight: {\n    flex: 4,\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n  },\n  roomTitleCenter: {\n    flex: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  currentSongImage: {\n    width: 200,\n    height: 200,\n    marginTop: 15,\n  },\n  activeRow: {\n    flexDirection: \"row\",\n    margin: 10,\n  },\n  feeling: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  activeInfo: {\n    width: 200,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  advancement: {\n    width: \"80%\",\n    height: 2,\n    backgroundColor: \"white\",\n    margin: 10,\n  },\n  upNext: {\n    width: \"100%\",\n    backgroundColor: \"#fff7\",\n    marginTop: 10,\n    padding: 15,\n    flex: 1,\n  },\n  list: {\n    height: 285\n  },\n  upNextClosed: {\n  },\n  closedFull: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  upNextImageContainer: {\n    marginLeft: 20,\n  },\n  upNextImage: {\n    width: 80,\n    height: 80,\n  },\n  upNextInfoContainer: {\n    flexDirection: \"column\",\n    marginLeft: 20,\n    width: \"45%\",\n  },\n  like: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    marginRight: 20,\n    flexDirection: \"row\",\n  },\n  nbLikes: {\n    fontSize: 20,\n    color: \"white\",\n  },\n  seeMore: {\n    marginTop: -10,\n  },\n  upNextSong: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 15,\n  },\n  voteTitle: {\n    alignItems: \"center\",\n  },\n  voteImages: {\n    justifyContent: \"space-around\",\n    flexDirection: \"row\",\n    marginTop: 15,\n    marginBottom: 5,\n  },\n  voteTitles: {\n    justifyContent: \"space-around\",\n    flexDirection: \"row\",\n    marginBottom: 15,\n  },\n  noVoteTitles: {\n    marginBottom: 15,\n    alignItems: \"center\",\n  },\n  voteMusicTitle: {\n    width: 110,\n    textAlign: \"center\",\n  },\n  voteImage: {\n    width: 80,\n    height: 80,\n  },\n  noVoteImage: {\n    width: 80,\n    height: 80,\n  },\n  moodChange: {\n    marginTop: 10,\n  },\n  moodChangeRow: {\n    flexDirection: \"row\",\n  },\n  moodChangeItem: {\n    width: 150,\n    height: 150,\n    backgroundColor: \"pink\",\n    margin: 10,\n  },\n});\n\nexport default Room;","const removeFirstNextSong = (copySongs, setCopySongs, setSongs) => {\n  if (copySongs.length == 1) {\n    setSongs([]);\n    setCopySongs([]);\n  } else {  \n    const dup = [...copySongs];\n    dup.shift();\n    setSongs(dup);\n    setCopySongs(dup);\n  }\n};\n\nconst addSongToPast = (copySong, copyPast, setCopyPast, setPast) => {\n  const dup = [...copyPast, copySong];\n  setCopyPast(dup);\n  setPast(dup);\n};\n\nexport const nextSong = (copySong, setCopySong, copySongs, setCopySongs, copyPast, setCopyPast, setSong, setSongs, setPast) => {\n  // Change this to a backend request\n  console.log(copySongs[0]);\n  addSongToPast(copySong, copyPast, setCopyPast, setPast)\n  setSong(copySongs[0]);\n  setCopySong(copySongs[0]);\n  removeFirstNextSong(copySongs, setCopySongs, setSongs);\n};\n\nconst removeLastPastSong = (copyPast, setCopyPast, setPast) => {\n  if (copyPast.length == 1) {\n    setPast([]);\n    setCopyPast([]);\n  } else {\n    const dup = [...copyPast];\n    dup.pop();\n    setPast(dup);\n    setCopyPast(dup);\n  }\n};\n\nconst addSongToNext = (copySong, copySongs, setCopySongs, setSongs) => {\n  const a = [copySong]\n  const dup = a.concat([...copySongs])\n  setCopySongs(dup);\n  setSongs(dup);\n};\n\nexport const previousSong = (copySong, setCopySong, copySongs, setCopySongs, copyPast, setCopyPast, setSong, setSongs, setPast) => {\n  addSongToNext(copySong, copySongs, setCopySongs, setSongs);\n  setSong(copyPast[copyPast.length - 1]);\n  setCopySong(copyPast[copyPast.length - 1]);\n  removeLastPastSong(copyPast, setCopyPast, setPast);\n}","import React, {useState} from 'react';\nimport { StyleSheet, Text, View, Button, Alert } from 'react-native';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome'\nimport { faDice } from '@fortawesome/free-solid-svg-icons'\nimport Icon from 'react-native-vector-icons/Entypo';\nimport { Fontisto } from \"@expo/vector-icons\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport {resume, pause, playSong, getStatus} from './Player'\nimport { useSelector } from 'react-redux';\nimport {nextSong, previousSong} from './PlaylistManip'\n\nconst FullFooter = ({ navigation, song, setSong, songs, setSongs, past, setPast, setImage}) => {\n  const token = useSelector((state) => state.user.spotify_token);\n  const [isLoading, setLoading] = useState(true);\n  const [active, setActive] = useState(true);\n  if (isLoading) {\n    setLoading(false);\n    setActive(getStatus(token).then((status) => {\n      setActive(status);\n    }));\n  };\n  const [copySong, setCopySong] = useState(song);\n  const [copySongs, setCopySongs] = useState(songs);\n  const [copyPast, setCopyPast] = useState(past);\n\n  console.log(active);\n  return (\n    <View style={styles.container}>\n      <View style={styles.half}>\n        <View style={styles.centerPiece}>\n          <Text style={styles.music}>{copySong.title} - {copySong.artist}</Text>\n          <View style={styles.bar}>\n            <View style={styles.progressBar1}/>\n            <View style={styles.ball}/>\n            <View style={styles.progressBar2}/>\n          </View>\n          <View style={styles.times}>\n            <View style={styles.t1}><Text style={styles.time1}>2:09</Text></View>\n            <View style={styles.t2}><Text style={styles.time2}>2:43</Text></View>\n          </View>\n        </View>\n      </View>\n      <View style={styles.half2}>\n        <TouchableOpacity onPress={() => Alert.alert(\"test\")} style={styles.buttonContainer}><FontAwesomeIcon icon={ faDice } size={30} color=\"white\"/></TouchableOpacity>\n        {copyPast.length > 0 ? <TouchableOpacity onPress={() => {\n          playSong(token, copyPast[copyPast.length - 1].id);\n          previousSong(copySong, setCopySong, copySongs, setCopySongs, copyPast, setCopyPast, setSong, setSongs, setPast);\n          setImage(copyPast[copyPast.length - 1].photo)\n        }} style={styles.buttonContainer2}><Fontisto name='step-backwrad' size={20} color=\"#fff\"/></TouchableOpacity> :\n        <View style={styles.buttonContainer2}><Fontisto name='step-backwrad' size={20} color=\"#fff8\"/></View>}\n        {!active ?\n          <TouchableOpacity onPress={() => {\n            getStatus(token).then((status) => {\n              console.log(\"now play\", status, active)\n              resume(token);\n              setActive(!active);\n            })\n          }} style={styles.buttonContainer3}><Fontisto name='play' size={20} color=\"#120841\"/></TouchableOpacity> :\n          <TouchableOpacity onPress={() => {\n            getStatus(token).then((status) => {\n              console.log(\"now pause\", status, active)\n              pause(token);\n              setActive(!active);\n            });\n          }} style={styles.buttonContainer4}><Fontisto name='pause' size={20} color=\"#120841\"/></TouchableOpacity>\n        }\n        {copySongs.length > 0 ? <TouchableOpacity onPress={() => {\n          playSong(token, copySongs[0].id);\n          nextSong(copySong, setCopySong, copySongs, setCopySongs, copyPast, setCopyPast, setSong, setSongs, setPast);\n          setImage(copySongs[0].photo)\n        }} style={styles.buttonContainer2}><Fontisto name='step-forward' size={20} color=\"#fff\"/></TouchableOpacity> :\n        <View style={styles.buttonContainer2}><Fontisto name='step-forward' size={20} color=\"#fff8\"/></View>}\n        <TouchableOpacity onPress={() => Alert.alert(\"test\")} style={styles.buttonContainer}><Icon name=\"note\" color=\"white\" size={30}/></TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#120841',\n    width: \"100%\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    padding: 10,\n    height: 150,\n    paddingBottom: 35,\n    marginTop: -65,\n    marginBottom: -30,\n    borderRadius: 25,\n  },\n  half: {\n    flex: 1,\n    width: \"100%\",\n    flexDirection: \"row\",\n    marginBottom: 10,\n  },\n  half2: {\n    flex: 1,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: 'space-around'\n  },\n  buttonContainer: {\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: \"white\",\n    borderRadius: 20,\n  },\n  buttonContainer2: {\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttonContainer3: {\n    width: 40,\n    height: 40,\n    backgroundColor: \"white\",\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n    paddingLeft: 5,\n  },\n  buttonContainer4: {\n    width: 40,\n    height: 40,\n    backgroundColor: \"white\",\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n    paddingLeft: 0,\n  },\n  centerPiece: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  music: {\n    fontSize: 13,\n    color: \"#fff8\",\n    marginBottom: 5,\n  },\n  bar: {\n    flexDirection: 'row',\n    flex: 1,\n    width: \"100%\",\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  progressBar1: {\n    height: 4,\n    width: \"45%\",\n    backgroundColor: \"white\",\n    borderRadius: 2,\n  },\n  progressBar2: {\n    height: 4,\n    width: \"25%\",\n    backgroundColor: \"#fff8\",\n    borderRadius: 2,\n  },\n  ball: {\n    height: 10,\n    width: 10,\n    borderRadius: 5,\n    backgroundColor: 'white',\n    margin: -4,\n  },\n  times: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    width: '70%',\n  },\n  t1: {\n    flex: 1,\n  },\n  t2: {\n    flex: 1,\n    alignItems: 'flex-end'\n  },\n  time1: {\n    fontSize: 13,\n    color: \"#fff8\",\n  },\n  time2: {\n    fontSize: 13,\n    color: \"#fff8\",\n  }\n});\n\nexport default FullFooter;","import React, {useState} from 'react';\nimport { StyleSheet, Text, View, Button, Image, Dimensions } from 'react-native';\nimport FullFooter from './FullFooter'\nimport {getCurrentPhoto} from './Player'\nimport { useSelector } from 'react-redux';\n\nconst ViewCurrentSong = ({ route, navigation }) => {\n  const token = useSelector((state) => state.user.spotify_token);\n  const {song, setSong, songs, setSongs, past, setPast} = route.params\n  const [isLoading, setLoading] = useState(true);\n  const [photo, setPhoto] = useState(song.photo);\n  if (isLoading) {\n    setLoading(false);\n    getCurrentPhoto(token).then((current) => {\n      setPhoto(current);\n    })\n  };\n  return (\n    <View style={styles.container}>\n      <View style={styles.beg}>\n        <Image\n          style={styles.backgroundImage}\n          source={{uri: photo}}\n        />\n      </View>\n      <FullFooter song={song} setSong={setSong} songs={songs} setSongs={setSongs} past={past} setPast={setPast} setImage={setPhoto}/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: \"flex-end\",\n  },\n  beg: {\n    flex: 1,\n    backgroundColor: '#E44200',\n    justifyContent: 'flex-start',\n    width: \"100%\",\n    paddingBottom: 70,\n    alignItems: 'center',\n  },\n  backgroundImage: {\n    width: Dimensions.get('window').height-165,\n    height: Dimensions.get('window').height-165,\n    backgroundColor: '#E44200',\n  },\n});\n\nexport default ViewCurrentSong;","// import React from 'react';\n// import { StyleSheet, Text, View, Button, Image, TouchableOpacity } from 'react-native';\n\n// const Hub = ({ navigation }) => {\n//   return (\n//     <View style={styles.alignIt}>\n      \n//       <Image\n//       style={styles.containImage}\n//         source={require('../assets/MainLogo.png')}\n//         />\n//         <View style={styles.container}>\n//         <Button\n//           title='DEVENIR LEADER'\n//           onPress={() => navigation.push('CreateRoom')}\n//         />\n//         <Text>Déja Leader ? </Text>\n//         <Button style={styles.MainButton}\n//           title='Se connecter'\n//           onPress={() => navigation.push('JoinRoom')}\n//         />\n//       </View>\n \n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 5,\n//     backgroundColor: '#461C86',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontFamily: \"Canter Bold\"\n//   },\n//   alignIt: {\n//     backgroundColor: '#461C86',\n//     flex: 3,\n//     fontFamily: \"Canter Bold\"\n//   },\n//   containImage: {\n//     flex: 1, height: undefined, width: undefined, resizeMode: 'contain' \n//   },\n//   MainButton: {\n//     flex: 1,\n//     fontFamily: \"Canter Bold\"\n//   }\n\n// });\n\n// export default Hub;\n\n\nimport React, { Component } from \"react\";\nimport { StyleSheet, View, Text, Image, ImageBackground, Button } from \"react-native\";\nimport TextButton from \"./common/TextButton\";\nimport Header from \"./common/Header\";\n\nconst FirstTime = ({ navigation }) => {\n   return (\n    <View style={styles.container}>\n      <View>\n        <View style={styles.image} >\n          <Image\n            source={require(\"../assets/Logo_Lug.png\")}\n            resizeMode=\"contain\"\n            style={styles.imageLogo}\n          />\n        </View>\n        <View style={styles.Text1}>\n          <Text style={styles.devenezLeader}>\n            Créer toi un compte ou connecte toi à Lug\n          </Text>\n        </View>\n        <View style={styles.MainButton1}>\n          <TextButton content=\"Créer un compte\" action={() => navigation.push('CreateAccount')}/>\n        </View>\n      </View>\n      <View style={styles.SecondaryButton1}>\n        <TextButton content=\"Se connecter\" action={() => navigation.push('ConnectAccount')}/>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#120841\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  image: {\n    justifyContent: 'space-around',\n    flexDirection: 'row'\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    padding: 20,\n  },\n  devenezLeader: {\n    fontFamily: \"Roboto_700Bold\",\n    textAlign: 'center',\n    color: 'white',\n  },\n  devenirLeader: {\n    width: 264,\n    height: 81,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 20,\n    shadowColor: \"rgba(228,66,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    fontFamily: \"CarterOne_400Regular\",\n    color: \"rgba(18,8,65,1)\",\n    textAlign: \"center\",\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    fontFamily: \"Roboto_300Light\",\n    padding: 20,\n   },\n  devenezLeader: {\n   fontFamily: \"Roboto_700Bold\",\n   textAlign: 'center',\n   color: 'white'\n  },\n  SecondaryButton1: {\n    marginBottom: 40,\n  },\n});\n\nexport default FirstTime;","import React, { Component, useState } from \"react\";\nimport { StyleSheet, View, Text, Image, ImageBackground, Button } from \"react-native\";\nimport TextButton from \"./common/TextButton\";\nimport Header from \"./common/Header\";\nimport CustomInput from \"./common/CustomInput.js\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser, userConnected } from '../redux/user';\n\n\nconst CreateAccount = ({ navigation }) => {\n  var response;\n  const [email, onChangeTextEmail] = useState('');\n  const [mdp, onChangeTextMdp] = useState('');\n  const dispatch = useDispatch();\n\n  async function registerToApi (email, mdp) {\n    try {\n      let response = await fetch(`https://shangrila.pythonanywhere.com/register?email=${email}&mdp=${mdp}`)\n      .then((response) => response.json())\n      .then((json) => {\n      console.log (\"res test fun === \", json)\n\n        return ({\n          token: json.token, \n          email: json.user.email,\n          id: json.user.user_id,\n          pseudo: json.user.pseudo\n        })\n      })\n  .catch((error) => { console.error(error) });\n      console.log (\"res test fun === \", response)\n      return response;\n    } catch (error) {\n      console.error(error);\n    };\n  }\n    \n  var request;\n  return (\n    <View style={styles.container}>\n      <View>\n        <View style={styles.Text1}>\n          <Text style={styles.devenezLeader}>\n            Crée toi un compte\n          </Text>\n        </View>\n        <View style={styles.MainButton1}>\n          <CustomInput useStateFunction={onChangeTextEmail} useStateValue={email} placeholder=\"Email\"/>\n        </View>\n        <View style={styles.MainButton1}>\n          <CustomInput useStateFunction={onChangeTextMdp} useStateValue={mdp} placeholder=\"Mot de passe\"/>\n        </View>\n      </View>\n      <View style={styles.SecondaryButton1}>\n\n\n        <TextButton content=\"Créer le compte\" action={async () => {\n          console.log (\"text\",email);\n          let response = await registerToApi(email, mdp);\n          console.log(\"response\", response);\n          if (response.email!= null && response.token != null) {\n            console.log(\"resss body === \", response.email);\n            dispatch(setUser(response));\n            //dispatch(userConnected());\n            \n            navigation.push('ConnectService'); \n          }\n        } \n      }/>\n\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#120841\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  image: {\n    justifyContent: 'space-around',\n    flexDirection: 'row'\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    padding: 20,\n  },\n  devenezLeader: {\n    fontFamily: \"Roboto_700Bold\",\n    textAlign: 'center',\n    color: 'white',\n  },\n  devenirLeader: {\n    width: 264,\n    height: 81,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 20,\n    shadowColor: \"rgba(228,66,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    fontFamily: \"CarterOne_400Regular\",\n    color: \"rgba(18,8,65,1)\",\n    textAlign: \"center\",\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    fontFamily: \"Roboto_300Light\",\n    padding: 20,\n   },\n  devenezLeader: {\n   fontFamily: \"Roboto_700Bold\",\n   textAlign: 'center',\n   color: 'white'\n  },\n  SecondaryButton1: {\n    marginBottom: 40,\n  },\n});\n\nexport default CreateAccount;","// import React from 'react';\n// import { StyleSheet, Text, View, Button, Image, TouchableOpacity } from 'react-native';\n\n// const Hub = ({ navigation }) => {\n//   return (\n//     <View style={styles.alignIt}>\n      \n//       <Image\n//       style={styles.containImage}\n//         source={require('../assets/MainLogo.png')}\n//         />\n//         <View style={styles.container}>\n//         <Button\n//           title='DEVENIR LEADER'\n//           onPress={() => navigation.push('CreateRoom')}\n//         />\n//         <Text>Déja Leader ? </Text>\n//         <Button style={styles.MainButton}\n//           title='Se connecter'\n//           onPress={() => navigation.push('JoinRoom')}\n//         />\n//       </View>\n\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 5,\n//     backgroundColor: '#461C86',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontFamily: \"Canter Bold\"\n//   },\n//   alignIt: {\n//     backgroundColor: '#461C86',\n//     flex: 3,\n//     fontFamily: \"Canter Bold\"\n//   },\n//   containImage: {\n//     flex: 1, height: undefined, width: undefined, resizeMode: 'contain' \n//   },\n//   MainButton: {\n//     flex: 1,\n//     fontFamily: \"Canter Bold\"\n//   }\n\n// });\n\n// export default Hub;\n\n\nimport React, { Component, useState } from \"react\";\nimport { StyleSheet, View, Text, Image, ImageBackground, Button } from \"react-native\";\nimport TextButton from \"./common/TextButton\";\nimport Header from \"./common/Header\";\nimport CustomInput from \"./common/CustomInput.js\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser, userConnected } from '../redux/user';\n\n\nconst ConnectAccount = ({ navigation }) => {\n  var response;\n  const [email, onChangeTextEmail] = useState('');\n  const [mdp, onChangeTextMdp] = useState('');\n\n  async function loginToApi (email, mdp) {\n    try {\n      let response = await fetch(`https://shangrila.pythonanywhere.com/login?email=${email}&mdp=${mdp}`)\n      .then((response) => response.json())\n      .then((json) => {\n        return ({\n          token: json.token, \n          email: json.user.email,\n          id: json.user.user_id,\n          pseudo: json.user.pseudo\n        })\n      })\n  .catch((error) => { console.error(error) });\n      console.log (\"res ======!!======\",response)\n      return response;\n    } catch (error) {\n      console.error(error);\n    };\n  }\n    \n  var request; \n  \n  const dispatch = useDispatch();\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <View style={styles.Text1}>\n          <Text style={styles.devenezLeader}>\n            Te voilà de retour parmi nous !\n          </Text>\n        </View>\n        <View style={styles.MainButton1}>\n          <CustomInput useStateFunction={onChangeTextEmail} useStateValue={email} placeholder=\"Email\"/>\n        </View>\n        <View style={styles.MainButton1}>\n        <CustomInput useStateFunction={onChangeTextMdp} useStateValue={mdp} placeholder=\"Mot de passe\"/>\n        </View>\n      </View>\n\n      <View style={styles.SecondaryButton1}>\n      <TextButton content=\"Se connecter\" action={async () => {\n          console.log (\"text\",email);\n          let response = await loginToApi (email, mdp);\n          console.log(\"response === \",response);\n          if (response.email!= null && response.token != null) {\n            console.log(\"resss body === \", response.email);\n            dispatch (setUser(response))\n            //dispatch(userConnected());\n            navigation.push('ConnectService'); \n          }\n        } \n      }/>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#120841\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  image: {\n    justifyContent: 'space-around',\n    flexDirection: 'row'\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    padding: 20,\n  },\n  devenezLeader: {\n    fontFamily: \"Roboto_700Bold\",\n    textAlign: 'center',\n    color: 'white',\n  },\n  devenirLeader: {\n    width: 264,\n    height: 81,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 20,\n    shadowColor: \"rgba(228,66,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    fontFamily: \"CarterOne_400Regular\",\n    color: \"rgba(18,8,65,1)\",\n    textAlign: \"center\",\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    fontFamily: \"Roboto_300Light\",\n    padding: 20,\n   },\n  devenezLeader: {\n   fontFamily: \"Roboto_700Bold\",\n   textAlign: 'center',\n   color: 'white'\n  },\n  SecondaryButton1: {\n    marginBottom: 40,\n  },\n});\n\nexport default ConnectAccount;","import React, { Component } from \"react\";\nimport { StyleSheet, View, Text, Image, ImageBackground, Button } from \"react-native\";\nimport TextButton from \"./common/TextButton\";\nimport Header from \"./common/Header\";\n\nconst AnalyseMood = ({ navigation }) => {\n   return (\n    <View style={styles.container}>\n      <View>\n        <View style={styles.image} >\n          <Image\n            source={require(\"../assets/headphone.png\")}\n            resizeMode=\"contain\"\n            style={styles.imageLogo}\n          />\n        </View>\n        <View style={styles.Text1}>\n          <Text style={styles.devenezLeader}>\n            Analyse du son ambiant en cours...\n            Ne pas boucher le micro\n          </Text>\n        </View>\n        <View style={styles.MainButton1}>\n          <TextButton content=\"Go to room\" action={() => navigation.push('Room')}/>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#120841\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  image: {\n    justifyContent: 'space-around',\n    flexDirection: 'row',\n  },\n  imageLogo: {\n    width: 125,\n    height: 125,\n  },\n  Text1: {\n    padding: 20,\n  },\n  devenezLeader: {\n    fontFamily: \"Roboto_700Bold\",\n    textAlign: 'center',\n    color: 'white',\n  },\n  devenirLeader: {\n    width: 264,\n    height: 81,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 20,\n    shadowColor: \"rgba(228,66,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    fontFamily: \"CarterOne_400Regular\",\n    color: \"rgba(18,8,65,1)\",\n    textAlign: \"center\",\n  },\n  imageLogo: {\n    width: 325,\n    height: 325,\n  },\n  Text1: {\n    fontFamily: \"Roboto_300Light\",\n    padding: 20,\n   },\n  devenezLeader: {\n   fontFamily: \"Roboto_700Bold\",\n   textAlign: 'center',\n   color: 'white'\n  },\n  SecondaryButton1: {\n    marginBottom: 40,\n  },\n});\n\nexport default AnalyseMood;\n\n\n/* \nimport React from 'react';\nimport { Button, StyleSheet, View } from 'react-native';\nimport LottieView from 'lottie-react-native';\n\nexport default class App extends React.Component {\n  componentDidMount() {\n    this.animation.play();\n    // Or set a specific startFrame and endFrame with:\n    // this.animation.play(30, 120);\n  }\n\n  resetAnimation = () => {\n    this.animation.reset();\n    this.animation.play();\n  };\n\n  render() {\n    return (\n      <View style={styles.animationContainer}>\n        <LottieView\n          ref={animation => {\n            this.animation = animation;\n          }}\n          style={{\n            width: 400,\n            height: 400,\n            backgroundColor: '#eee',\n          }}\n          source={require('../assets/speaker-animation.json')}\n          // OR find more Lottie files @ https://lottiefiles.com/featured\n          // Just click the one you like, place that file in the 'assets' folder to the left, and replace the above 'require' statement\n        />\n        <View style={styles.buttonContainer}>\n          <Button title=\"Restart Animation\" onPress={this.resetAnimation} />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  animationContainer: {\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n  },\n  buttonContainer: {\n    paddingTop: 20,\n  },\n}); */","import 'react-native-gesture-handler';\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport { useSelector } from 'react-redux';\n\n\nimport SettingPage from './components/SettingPage'\nimport UserProfile from './components/UserProfile'\nimport Test from './components/Test'\nimport Hub from './components/Hub'\nimport CreateUser from './components/CreateUser'\nimport ConnectService from './components/ConnectService'\nimport JoinRoom from './components/JoinRoom'\nimport JoinRoomCode from './components/JoinRoomCode'\nimport CreateRoom from './components/CreateRoom'\nimport InitialMood from './components/InitialMood'\nimport QRCode from './components/QRCode'\nimport Room from './components/Room'\nimport ViewCurrentSong from './components/ViewCurrentSong'\nimport FirstTime from './components/FirstTime'\nimport CreateAccount from './components/CreateAccount'\nimport ConnectAccount from './components/ConnectAccount'\nimport AnalyseMood from './components/AnalyseMood'\n\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, Roboto_700Bold, Roboto_300Light } from '@expo-google-fonts/roboto';\nimport { CarterOne_400Regular } from '@expo-google-fonts/carter-one';\n\nimport Header from './components/common/Header';\n\nconst Stack = createStackNavigator();\n\n\nconst NavDepo = () => {\n  const linking = {\n    prefixes: ['https://jukehome.com'],\n  };\n  const connected = useSelector((state) => state.user.connected);\n\n  return (\n    <NavigationContainer>\n\n      {connected === true ?\n        <Stack.Navigator screenOptions={{\n          headerStyle: {\n            backgroundColor: '#120841',\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold',\n          },}}\n        >\n          <Stack.Screen name=\"Hub\" component={Hub} options={{title: \"What's up?\", headerTitle: props => <Header {...props} /> }}/>\n          <Stack.Screen name=\"CreateRoom\" component={CreateRoom} options={{title: \"Create a Room\", headerTitle: props => <Header {...props} />}} />\n          <Stack.Screen name=\"InitialMood\" component={InitialMood} options={{title: \"Choose the mood\", headerTitle: props => <Header {...props} />}} />\n          <Stack.Screen name=\"QRCode\" component={QRCode} options={{title: \"Here's your code!\", headerTitle: props => <Header {...props} />}} />\n          <Stack.Screen name=\"AnalyseMood\" component={AnalyseMood} options={{title: \"Analysing the room temperature...\", headerTitle: props => <Header {...props} />}} />\n          <Stack.Screen name=\"JoinRoom\" component={JoinRoom} options={{title: \"Join a Room\", headerTitle: props => <Header {...props} />}} />\n          <Stack.Screen name=\"JoinRoomCode\" component={JoinRoomCode} options={{title: \"Join a Room\", headerTitle: props => <Header {...props} />}} />\n          <Stack.Screen name=\"Room\" component={Room} options={{title: \"Room\", headerTitle: props => <Header {...props} />}} />\n          <Stack.Screen name=\"ViewCurrentSong\" component={ViewCurrentSong} options={{title: \"Current Song\", headerTitle: props => <Header {...props} />}} />\n          \n          <Stack.Screen name=\"UserProfile\" component={UserProfile} options={{title: \"Your Profile\", headerTitle: props => <Header {...props} />}} />\n          <Stack.Screen name=\"SettingPage\" component={SettingPage} options={{title: \"Your Settings\", headerTitle: props => <Header {...props} />}} />\n        \n        \n        </Stack.Navigator> :\n        \n        <Stack.Navigator screenOptions={{\n          headerStyle: {\n            backgroundColor: '#120841',\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold',\n          },}}\n        > \n          <Stack.Screen name=\"FirstTime\" component={FirstTime} options={{title: \"Welcome\", headerTitle: props => <Header {...props} /> }}/>\n          <Stack.Screen name=\"CreateAccount\" component={CreateAccount} options={{title: \"Create an Account\", headerTitle: props => <Header {...props} />}} />\n          <Stack.Screen name=\"ConnectAccount\" component={ConnectAccount} options={{title: \"Connect to an existing account\", headerTitle: props => <Header {...props} />}} />\n          <Stack.Screen name=\"ConnectService\" component={ConnectService} options={{title: \"Link to Music Services\", headerTitle: props => <Header {...props} />}} />\n        </Stack.Navigator>\n      }\n    </NavigationContainer>\n  );\n}\n{/* <Stack.Screen name=\"Test\" component={Test} /> */}\n{/* <Stack.Screen name=\"CreateUser\" component={CreateUser} options={{title: \"Create an Account\", headerTitle: props => <Header {...props} />}} /> */}\n\nconst App = () => {\n  let [fontsLoaded] = useFonts({\n    Roboto_700Bold,\n    Roboto_300Light,\n    CarterOne_400Regular\n  });\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n\n  return (\n    <Provider store={store}>\n      <NavDepo/>\n    </Provider>\n  );\n}\n\nexport default App;","module.exports = __webpack_public_path__ + \"static/media/basicWhiteGirl.5c4f651f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spotifyBlanc.7324338a.png\";","module.exports = __webpack_public_path__ + \"static/media/spotify.349c042b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/deezer.41f50670.jpg\";","module.exports = __webpack_public_path__ + \"static/media/déchirure 2.48ebe111.png\";","module.exports = __webpack_public_path__ + \"static/media/déchirure 3.61696c56.png\";","module.exports = __webpack_public_path__ + \"static/media/déchirure 4.67b9ab18.png\";","module.exports = __webpack_public_path__ + \"static/media/déchirure 5.5dc7e33b.png\";","module.exports = __webpack_public_path__ + \"static/media/déchirure 8.038a63dc.png\";","module.exports = __webpack_public_path__ + \"static/media/déchirure 1.b3e073e7.png\";","module.exports = __webpack_public_path__ + \"static/media/headphone.ec02695c.png\";"],"sourceRoot":""}